{"0": {
    "doc": "Welcome to the course",
    "title": "Welcome to CIS-106-Linux Fundamentals",
    "content": "Here you will find all the information for the course. ",
    "url": "http://localhost:4000/#welcome-to-cis-106-linux-fundamentals",
    "relUrl": "/#welcome-to-cis-106-linux-fundamentals"
  },"1": {
    "doc": "Welcome to the course",
    "title": "COURSE LEARNING OUTCOMES",
    "content": ". | Demonstrate fluency in Linux terminology. | Install Linux and identify features of various distributions. | Manage files in the Linux environment. | Administer user accounts and groups efficiently. | Use Linux Utilities to manage data. | Install software and third-party utilities. | Managing Resources in the Linux networking environment. | Understanding of virtualization with Virtualbox | Understanding of Markdown and proper documentation techniques | . ",
    "url": "http://localhost:4000/#course-learning-outcomes",
    "relUrl": "/#course-learning-outcomes"
  },"2": {
    "doc": "Welcome to the course",
    "title": "Requirements",
    "content": ". | Access to a computer where Linux can be installed. The following are options: . | A virtual machine (Preferred) | A laptop/Desktop computer that you can wipe. | A Raspberry Pi 4 or other capable single board computer | . | Access to Blackboard | A Github account | A Text editor. We will be using VS Code but you can use whatever you want | 2 Hours of study time | Capable to adjust to fast paced course | For virtualization . | A decent PC that meets or exceeds these requirements: . | Quad-Core Processor or modern Dual-Core Processor 2.5 Ghz | 8 Gb of RAM | Windows 10/11 or MacOS | 100 Gb of free space | . | . | Knowledge of the following . | Basic components of a personal computer . | Basic usage of a persona computer | Internet browsing | Reading emails | Chat Applications | Office Productivity Suites (MS Office, Google Docs, etc) | Install/Remove Software | Difference between web browser, the internet, and a search engine Not knowing this things does not mean you will fail the course. It means that you will have to spend extra time studying for the course. | . | . | . ",
    "url": "http://localhost:4000/#requirements",
    "relUrl": "/#requirements"
  },"3": {
    "doc": "Welcome to the course",
    "title": "Advice",
    "content": "If you find that the content of the course is too much or that you have too many gaps in your knowledge, I suggest that you take this course after CIS 180 and CIS 116. ",
    "url": "http://localhost:4000/#advice",
    "relUrl": "/#advice"
  },"4": {
    "doc": "Welcome to the course",
    "title": "Advice 2",
    "content": "If you do not have a decent computer (one that can be used for virtualization) you will have a very poor experience in this course. For this reason, I have alocated a computer in the lab (H311) that you can use. You will need to contact me ahead of time so I can setup a user for you. ",
    "url": "http://localhost:4000/#advice-2",
    "relUrl": "/#advice-2"
  },"5": {
    "doc": "Welcome to the course",
    "title": "Resources",
    "content": ". | Snapshots: . | After installation and update | After installation of basic software: | . | Virtual Machine Specs: . | Hard drive: 50GB | RAM: 2GB | CPU: 2 cores | Video Graphics: 128MB | Audio controller: N/A | Network Card: 1 NAT Card | . | Books . | The Linux Command Line By William Shotts | Raspberry Pi Beginner’s Guide 4th Edition | Free Linux Magazine with good command line reference | Free book. wont be used but it is good to have | Raspberry Models Comparison | . | Github Markdown . | Github Markdown Syntax Cheat sheet | Github Markdown syntax official documentation | Git Cheat sheet | . | . ",
    "url": "http://localhost:4000/#resources",
    "relUrl": "/#resources"
  },"6": {
    "doc": "Welcome to the course",
    "title": "Welcome to the course",
    "content": ". ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"7": {
    "doc": "Module 1 What is Linux?",
    "title": "Module 1 What is Linux?",
    "content": " ",
    "url": "http://localhost:4000/modules/module1/",
    "relUrl": "/modules/module1/"
  },"8": {
    "doc": "Module 1 What is Linux?",
    "title": "Lecture 1: Introduction to the course.",
    "content": ". | Presentations . | Introduction to the course | What is Git and Github? | Markdown Presentation | . | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-1-introduction-to-the-course",
    "relUrl": "/modules/module1/#lecture-1-introduction-to-the-course"
  },"9": {
    "doc": "Module 1 What is Linux?",
    "title": "Lecture 2: Introduction to Linux",
    "content": ". | Presentations . | Introduction to Linux | The basics of Virtualization | Using VirtualBox | Installing Ubuntu 22.04 in virtualbox | . | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-2-introduction-to-linux",
    "relUrl": "/modules/module1/#lecture-2-introduction-to-linux"
  },"10": {
    "doc": "Module 1 What is Linux?",
    "title": "Lecture 3: The desktop environment",
    "content": ". | Presentations . | Exploring Desktop Environments | What is a Shell? | Managing Software | . | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-3-the-desktop-environment",
    "relUrl": "/modules/module1/#lecture-3-the-desktop-environment"
  },"11": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Module 2 Using Ubuntu",
    "content": " ",
    "url": "http://localhost:4000/modules/module2/",
    "relUrl": "/modules/module2/"
  },"12": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Lecture 4: Managing Files and directories",
    "content": ". | The Linux filesystem | Managing files and directories | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-4-managing-files-and-directories",
    "relUrl": "/modules/module2/#lecture-4-managing-files-and-directories"
  },"13": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Lecture 5: Handling Text Files",
    "content": ". | Handling Text Files | The Basics of Vim | Nano Editor Fundamentals | How to Use Nano on Linux / Mac | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-5-handling-text-files",
    "relUrl": "/modules/module2/#lecture-5-handling-text-files"
  },"14": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Lecture 6: Permissions",
    "content": ". | File permissions | Managing data | Managing users | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-6-permissions",
    "relUrl": "/modules/module2/#lecture-6-permissions"
  },"15": {
    "doc": "Module 3 Administration",
    "title": "Module 3 Administration",
    "content": " ",
    "url": "http://localhost:4000/modules/module3/",
    "relUrl": "/modules/module3/"
  },"16": {
    "doc": "Module 3 Administration",
    "title": "Lecture 7",
    "content": ". | Managing processes | Basic Networking protocols | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-7",
    "relUrl": "/modules/module3/#lecture-7"
  },"17": {
    "doc": "Module 3 Administration",
    "title": "Lecture 8",
    "content": ". | Shell scripting | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-8",
    "relUrl": "/modules/module3/#lecture-8"
  },"18": {
    "doc": "Module 3 Administration",
    "title": "Lecture 9",
    "content": ". | Scheduling Tasks | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-9",
    "relUrl": "/modules/module3/#lecture-9"
  },"19": {
    "doc": "Homework 0",
    "title": "Complete The following Tasks",
    "content": ". | Complete Lab 0 - Learning Markdown | Complete Discussion Board 1 - Introduce Yourself | Read the Document: “Final Project Description” | Install Slack in your phone and computer | Create a github account using your PCCC email address | Watch the video What is Git and Github located here | Week 0 Report must contain the following: . | A summary of the presentation for week 0 | A screenshot of your github account page | Select 3 projects that you are interested in. If you choose the default project, simply state that you will be completing the default project. | . | . Use the following template for your Week Report . # Week Report 0 ## Summary of Presentation: Introduction to CIS 106 Write your summary here ## My github account ![my github account](imageHere.png) ## Final Project Research: Pick a project Answer the question here . ",
    "url": "http://localhost:4000/homework:/homework0#complete-the-following-tasks",
    "relUrl": "/homework:/homework0#complete-the-following-tasks"
  },"20": {
    "doc": "Homework 0",
    "title": "Homework 0",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework0",
    "relUrl": "/homework:/homework0"
  },"21": {
    "doc": "Homework 1",
    "title": "Complete the following tasks",
    "content": ". | Complete Lab 1 - Linux distributions | Complete discussion board 2 - the history of Linux | Research your Final Project . | If you choose to work on the default project then answer the following questions: . | What is Linux? | What is a Linux distribution? | What is Ubuntu? | What are the system requirements for installing Ubuntu 20.04 | For each question, your answer must be at least 1 paragraph. | . | If you choose to work on a different project other than the default project, answer the following question . | What is the problem that you are trying to solve with this project? | What are the names of the technologies involved? | What are the system requirements for the project? | . | . | Week 1 Report most contain the following: . | A summary of the presentation for week 1 - Introduction to Linux | The answer to the questions in your final project research. | . | . Use the following template for your weekly report: . # Week Report 1 ## Summary of Presentation: Introduction to Linux Write your summary here ## Final Project Research Questions and answers Questions and answers go here . Remember: You need to submit the weekly report github URL and the weekly report pdf file . ",
    "url": "http://localhost:4000/homework:/homework1#complete-the-following-tasks",
    "relUrl": "/homework:/homework1#complete-the-following-tasks"
  },"22": {
    "doc": "Homework 1",
    "title": "Homework 1",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework1",
    "relUrl": "/homework:/homework1"
  },"23": {
    "doc": "Homework 2",
    "title": "Homework 2",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework2",
    "relUrl": "/homework:/homework2"
  },"24": {
    "doc": "Homework 2",
    "title": "Complete the following tasks",
    "content": ". | Complete lab 2 Installing Ubuntu in Virtualbox | Complete Discussion 3: The Rise of Open Source | This week you will not work on your final project. The lab and the report are long. | Week 2 Report must contain the following: . | A summary of the presentations: . | The basics of virtualization . | Include: . | What is virtualization | Types of virtualization | anything else you find important | . | . | Installing Ubuntu in Virtualbox . | Screenshots of installing ubuntu (no more than 5) | . | What is the raspberry pi . | Watch these videos before you read the presentation: | what is the raspberry pi in 100 seconds | what is the raspberry pi | . | Read the presentation What is a raspberry pi. Include the following in your summary: . | What is a raspberry pi | A bulleted list of different models | Specs of the latest model (Raspberry pi 4 or 400) you can use a screenshot. | Bulleted listed of 5 projects you can do with a raspberry pi. Use the internet to find this information. | . | . | . | . Use the following template for your weekly report: . # Week Report 2 ## Summary of Presentations Write your summary here . ",
    "url": "http://localhost:4000/homework:/homework2#complete-the-following-tasks",
    "relUrl": "/homework:/homework2#complete-the-following-tasks"
  },"25": {
    "doc": "Homework 3",
    "title": "Homework 3",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework3",
    "relUrl": "/homework:/homework3"
  },"26": {
    "doc": "Homework 3",
    "title": "Complete the following tasks",
    "content": "Watch this video before you start this week’s homework. | Watch the presentation for managing software. video here. Presentation here | Complete lab 3 Using Ubuntu | Complete Discussion 4: the history of the bash shell | Week 3 Report must contain the following (video here): . | Summary of presentations . | Exploring Desktop Environments . | bulleted list of different desktop environments | Definitions for the following terms: GUI, DE | Bulleted list of the common elements of a desktop environment | . | The bash Shell . | What is a shell? | List different shells | List some bash shortcuts (no more than 10 and no less than 5) | List basic commands and their usage | . | Managing Software . | Command for updating ubuntu | Command for installing software | Command for removing software | Command for searching for software | Definition of the following terms: . | Package | Library | Repository | . | Include the screenshot of how to update ubuntu with its explanation (page 6) | . | . | . | In your repository create a folder for cheat sheets and place here the installing software cheat sheet, and markdown cheat sheet. | . ",
    "url": "http://localhost:4000/homework:/homework3#complete-the-following-tasks",
    "relUrl": "/homework:/homework3#complete-the-following-tasks"
  },"27": {
    "doc": "Homework 4",
    "title": "Homework 4",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework4",
    "relUrl": "/homework:/homework4"
  },"28": {
    "doc": "Homework 4",
    "title": "Complete the following tasks",
    "content": ". | Complete Discussion board 5: What is The Right To Repair Movement? | Whatch the videos: . | Navigating the file system part 1 | Navigating the file system part 2 | . | Complete week report. Week Report must contain the following: . | A summary of the presentationnavigating the filesystem . | The summary must include the following: . | A table of the commands in the presentation including what the command does and some examples | Definitions of the following terms . | File system | Current directory | parent directory | the difference between your home directory and the home directory | pathname | relative path | absolute path | . | . | . | What is the right to repair movement and why does it matter? | . | Complete lab 4: the linux fs | . ",
    "url": "http://localhost:4000/homework:/homework4#complete-the-following-tasks",
    "relUrl": "/homework:/homework4#complete-the-following-tasks"
  },"29": {
    "doc": "Homework 5",
    "title": "Homework 5",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework5",
    "relUrl": "/homework:/homework5"
  },"30": {
    "doc": "Homework 5",
    "title": "Complete the following tasks",
    "content": ". | Weekly Report: . | Must include the following: . | definition, usage, and example of the following commands: . | mkdir | touch | rm | rmdir | mv | cp | ln | man | . | Brace expansion and how to use it | . | . | Complete lab 5 | Complete discussion board 6 | . ",
    "url": "http://localhost:4000/homework:/homework5#complete-the-following-tasks",
    "relUrl": "/homework:/homework5#complete-the-following-tasks"
  },"31": {
    "doc": "Homework 6",
    "title": "Homework 6",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework6",
    "relUrl": "/homework:/homework6"
  },"32": {
    "doc": "Homework 6",
    "title": "Complete the following tasks",
    "content": ". | Weekly Report: . | Must include the following: . | Wildcards | Brace expansion and how to use it | . | . | Complete lab 6 | Complete discussion board 7 | Start working on Deliverable 2 | . ",
    "url": "http://localhost:4000/homework:/homework6#complete-the-following-tasks",
    "relUrl": "/homework:/homework6#complete-the-following-tasks"
  },"33": {
    "doc": "Homework 7",
    "title": "Homework 7",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework7",
    "relUrl": "/homework:/homework7"
  },"34": {
    "doc": "Homework 8",
    "title": "Homework 8",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework8",
    "relUrl": "/homework:/homework8"
  },"35": {
    "doc": "Homework 9",
    "title": "Homework 9",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework9",
    "relUrl": "/homework:/homework9"
  },"36": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 1",
    "content": ". | Install VS Code and install the following extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . | Create a github account using your pccc email address | Create a repository called cis106 | Do not close the github page, you will need it later. | . ",
    "url": "http://localhost:4000/labs/lab0/#question-1",
    "relUrl": "/labs/lab0/#question-1"
  },"37": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 2",
    "content": ". | In your Documents folder, create a folder called lab0 all lowercase | Download the following compressed file: https://github.com/ra559/cis106/blob/main/lab0files.zip | . | Decompress the zip file inside your lab0 folder | Open VS Code and open the lab0 folder | . ",
    "url": "http://localhost:4000/labs/lab0/#question-2",
    "relUrl": "/labs/lab0/#question-2"
  },"38": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 3",
    "content": ". | Read the presentation ‘What is Markdown’ The goal of this lab is to learn and practice markdown. As we go over the presentation, we will be completing the next step. | . ",
    "url": "http://localhost:4000/labs/lab0/#question-3",
    "relUrl": "/labs/lab0/#question-3"
  },"39": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 4",
    "content": ". | Create a new file called what_is_ubuntu_submission.md inside your lab0 folder. | Using markdown, replicate the document whatisubuntu.pdf that is located inside the lab0 folder. Make sure to copy and paste the text. The goal of this lab is to practice markdown syntax not typing! | . ",
    "url": "http://localhost:4000/labs/lab0/#question-4",
    "relUrl": "/labs/lab0/#question-4"
  },"40": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 5",
    "content": ". | Export the markdown file to PDF, and HTML | upload all the files inside the lab0 folder to your github repository. | . ",
    "url": "http://localhost:4000/labs/lab0/#question-5",
    "relUrl": "/labs/lab0/#question-5"
  },"41": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Submission",
    "content": "In blackboard, submit the PDF file, the markdown file, and the url to your github repository. Late submissions will not be accepted . ",
    "url": "http://localhost:4000/labs/lab0/#submission",
    "relUrl": "/labs/lab0/#submission"
  },"42": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Lab 0 - Learning Markdown",
    "content": "Find the video here: Video Short version here . ",
    "url": "http://localhost:4000/labs/lab0/",
    "relUrl": "/labs/lab0/"
  },"43": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Requirements:",
    "content": ". | Bold your answers (2 points) | Take proper screenshots. Sloppy work = lower grade | Video: here | . ",
    "url": "http://localhost:4000/labs/lab1/#requirements",
    "relUrl": "/labs/lab1/#requirements"
  },"44": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Working with Distrowatch",
    "content": ". Question 1 . During class, we explored the concept of Linux distribution. During this lab, you will research some Linux distributions using a website called Distrowatch. DistroWatch is a website that provides news, popularity rankings, and other general information about various Linux distributions and other Unix-like operating systems such as OpenSolaris, MINIX and BSD. Go to Distrowatch. Explore the website to get familiar with the home page. On the top left corner, you have a form that allows you to submit queries to the website. In the “Type Distribution Name” box type “Ubuntu”. This will return details about Ubuntu. Explore the Ubuntu Distrowatch page and answer the following questions: . | What is the OS Type: . | Type your answer here | . | Which major distro is it based on? . | Type your answer here | . | Which processor architecture does it support? . | Type your answer here | . | Is the distribution active or is it discontinued? . | Type your answer here | . | What is the distro’s home page? . | Type your answer here | . | . Question 2 . On the top left corner, click on “Random Distribution” and answer the following questions from the distro you got. | What is the name of the distribution and the OS Type: . | Type your answer here | . | Which major distro is it based on? . | Type your answer here | . | Which processor architecture does it support? . | Type your answer here | . | Is the distribution active or is it discontinued? . | Type your answer here | . | What is the distro’s home page? . | Type your answer here | . | . Question 3 . On the top of the page, right in the middle, you will find an option that allows you to search for distributions. Click on “Search” and after the page loads, fill in the following information in the “Search Distribution by Criteria” section and Click on Submit Query. | Os type: Linux | Category: desktop | Based on: debían stable | . From the query results, choose any distribution and answer the following question about the distro you chose. | What is the name of the distribution? . | Type your answer here | . | What is the country of Origin? . | Type your answer here | . | What major distribution is it based on? . | Type your answer here | . | What is the distribution category? . | Type your answer here | . | Which processor architecture, aside from the one in the original query, does the OS support? . | Type your answer here | . | . Question 4 . Now that you know how to use Distrowatch. Find a Linux distribution for the following scenarios. For each distribution provide the website, name, and supported architecture. | A Linux distribution used for Data Rescue/Data recovery | . | Distro Name | Website | Desktop Environment | . | ANSWER HERE | ANSWER HERE | ANSWER HERE | . | A Linux distribution used for Education that supports the ix86 processor architecture. | . | Distro Name | Website | Desktop Environment | . | ANSWER HERE | ANSWER HERE | ANSWER HERE | . | A Linux distribution that supports the OEM installation method | . | Distro Name | Website | Desktop Environment | . | ANSWER HERE | ANSWER HERE | ANSWER HERE | . Question 5 (Extra credit 2 pts - Optional) . On the Distrowatch homepage in the menu located in the middle of the page, you will find an option called “Submit Distribution”. This option lists all the Linux distros that are pending evaluation, on development or that are experiencing some sort of legal constraint. Select one of these distributions and in a paragraph, share your thoughts. (keep it simple 5 to 8 sentences). Type your paragraph here . ",
    "url": "http://localhost:4000/labs/lab1/#working-with-distrowatch",
    "relUrl": "/labs/lab1/#working-with-distrowatch"
  },"45": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Working with DistroTest.net",
    "content": "Question 6 . DistroTest.net is a project that allows you to test Linux/BSD distributions on your web browser. This website is great for trying out distributions before you even download the ISO file. Go to Distrotest.net and click on any of the distributions. Start the distribution and take a screenshot of the browser window that just popped up. Place Screenshot here . Locate the terminal application in the distribution you started and type the following command: uname -a Take a screenshot of the browser window showing the terminal application open. Place Screenshot here . Stop the machine and take a screenshot of the browser window showing that the machine has been stopped. Place Screenshot here . ",
    "url": "http://localhost:4000/labs/lab1/#working-with-distrotestnet",
    "relUrl": "/labs/lab1/#working-with-distrotestnet"
  },"46": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "What to submit? (Delete this section before submitting)",
    "content": ". | Submit the URL of this file in your Github repository. | Convert this markdown file as PDF and submit it in with the URL. | . ",
    "url": "http://localhost:4000/labs/lab1/#what-to-submit-delete-this-section-before-submitting",
    "relUrl": "/labs/lab1/#what-to-submit-delete-this-section-before-submitting"
  },"47": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Lab 1 - Exploring Linux Distributions",
    "content": " ",
    "url": "http://localhost:4000/labs/lab1/",
    "relUrl": "/labs/lab1/"
  },"48": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "content": ". | Video here | . ",
    "url": "http://localhost:4000/labs/lab2/",
    "relUrl": "/labs/lab2/"
  },"49": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Presentations:",
    "content": ". | The basics of Virtualization | Using VirtualBox | Installing Ubuntu 20.04 in VirtualBox | . ",
    "url": "http://localhost:4000/labs/lab2/#presentations",
    "relUrl": "/labs/lab2/#presentations"
  },"50": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Requirements",
    "content": ". | Please go over the presentations before you do this lab. It will give you an idea of what we are trying to do here. | Please go slow and take your time to do this lab. It is long but it is the core of this course. | For those who do not have a computer powerful enough, you have a separate assignment to complete. | . NOTE! Only start this lab after you have watched the videos or read the presentations. ",
    "url": "http://localhost:4000/labs/lab2/#requirements",
    "relUrl": "/labs/lab2/#requirements"
  },"51": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 1 | Enable virtualization",
    "content": "Before you can create virtual machines, you need to know if your computer can virtualize. There are a couple of steps you need to follow to find out the answer to this question: . MacOS users . | For those using MacOS, if you have a recent Apple computer, chances are that you can virtualize with no problem. Once you have installed VirtualBox, make sure to install the Extension Pack and move along to question 2. For those using a Macbook with only 2 cores and 4GB of RAM, know that your computer will be very slow for this class and you may want to consider using an alternative. Contact me if this is your case. | . If you have an M1 Macbook, Virtualbox is not supported and you will not be able to use it for this course. You will need to either get a Raspberry Pi or an spare computer. There is a program called UTM that you can use but I cannot provide you support for it as I do not own an M1 Mac. Windows Users . | For those using Windows, follow these steps: . | Find out what hardware your computer has: . | CPU and number of cores | Amount of RAM | Amount of Free Storage | . | If your computer does not meet the criteria below, stop this lab and get in contact with me. We may be able to find an alternative for you but this can only be done on a 1 on 1 basis. | . RECOMMENDED SPECIFICATIONS: . | CPU: Quad core CPU or Dual Core with base frequency of 2.0GHz | RAM: 6GB or More | Free Storage: 60GB or more | . | If your computer meets or exceeds the above capabilities, then you need to check if virtualization is enabled. Follow this guide to know if your computer has virtualization enabled and if it does not, use the same guide to learn how to enable it. | You can also use Speccy to find out if your computer has virtualization enabled. | If you are having troubles enabling virtualization, let me know immediately. DO NOT WAIT FOR THE LAST MINUTE! This part can take time! | . | . This questions does not require a submission. ",
    "url": "http://localhost:4000/labs/lab2/#question-1--enable-virtualization",
    "relUrl": "/labs/lab2/#question-1--enable-virtualization"
  },"52": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 2 | Create a Virtual Machine",
    "content": "Before you can create virtual machines, you need to install VirtualBox and VirtualBox Extension Pack. To download Vbox and the extension pack go to: . | Virtualbox Download Page | . Make sure to select the right installer for your operating system: . Make sure to install VirtualBox in your host computer. For Windows follow this video. For macOS follow this video. Once you have installed VirtualBox, create a virtual machine that meets these specifications: . | OS: Ubuntu 20.04 64Bits ISO URL | HDD: 50 GB | RAM: 2GB | Video: 64 MB or Higher | Audio Controller: Disabled (audio won’t be needed) | CPU: 2 Cores | Add this to description: . | Hostname: cis106vm | User: student | Password: pccc | . | Shared Clipboard: Enabled - Bidirectional | Drag n’ Drop: Enabled - Bidirectional | . Take a screenshot of your virtual machine settings. You screenshot must show all the settings of your VM. ",
    "url": "http://localhost:4000/labs/lab2/#question-2--create-a-virtual-machine",
    "relUrl": "/labs/lab2/#question-2--create-a-virtual-machine"
  },"53": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 3 |  Install Ubuntu 20.04",
    "content": "For installing Ubuntu 20.04 in your virtual machine. Make sure to go over the presentation “Installing Ubuntu 20.04 in VirtualBox” where I have laid out every step explained. I will do it in the video as well but it will benefit you more to read the presentation. Take a screenshot of the last screen before rebooting Ubuntu. ",
    "url": "http://localhost:4000/labs/lab2/#question-3---install-ubuntu-2004",
    "relUrl": "/labs/lab2/#question-3---install-ubuntu-2004"
  },"54": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 4 | Post Installation Tasks",
    "content": "These are the tasks that you need to complete before taking the screenshots: . | Update and upgrade | Add canonical partners in the software settings | Set update daily reminder to never | Take snapshot. | . Take a screenshot of your virtual machine showing the snapshot . ",
    "url": "http://localhost:4000/labs/lab2/#question-4--post-installation-tasks",
    "relUrl": "/labs/lab2/#question-4--post-installation-tasks"
  },"55": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 5 | Complete the following tasks",
    "content": ". | Install the guest additions for virtualbox. Run these commands: . | sudo apt update; sudo apt upgrade -y | sudo apt install build-essential linux-headers-$(uname -r) -y | sudo apt install virtualbox-guest-additions-iso virtualbox-guest-x11 -y | . | Reboot the VM | Go Full Screen | Disable animations. Run this command on your terminal: gsettings set org.gnome.desktop.interface enable-animations false | Using the software center, Install VS Code . | Install all the extensions of VS Code | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . | Using the terminal, remove all unnecessary applications from Ubuntu 20.04. Use this command: . | sudo apt purge apport aisleriot gnome-mahjongg gnome-sudoku gnome-mines -y | . | Using the software center install the following applications: . | flameshot | vlc | deluge | geany | tilix In the terminal you can use these command: sudo apt install flameshot vlc deluge geany tilix -y . | . | Using the terminal install the following applications: gcc make perl nemo git python3-pip gnome-tweaks curl snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap wget tree htop net-tools vim neofetch caffeine samba smbclient cifs-utils. You can use the following commands: . | sudo apt install gcc make perl nemo git python3-pip -y | sudo apt install curl wget tree htop net-tools vim -y | sudo apt install neofetch caffeine samba smbclient -y | sudo apt install gnome-tweaks ubuntu-restricted-extras ubuntu-restricted-addons -y | sudo apt install snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap -y | . | Replace the default screenshot tool with flameshot. Use this command: . | curl https://raw.githubusercontent.com/ra559/cis106/main/_guides/replacewithflameshot.sh | bash | . | Setup git and download your repository to your ubuntu machine. | Sign in to your github account. | Open a terminal and run the following commands: . | Set your username: git config --global user.name 'your username here' | Set your email address: git config --global user.email 'your email here' | Setup SSH authentication . | Generate an ssh key: ssh-keygen -t ed25519 -C \"your_email@example.com\" This creates a new SSH key, using the provided email as a label. When you’re prompted to: \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. At the prompt, to type a secure passphrase, press enter for no passphrase. If you want to use a passphrase, go ahead as it provides an extra layer of security. However, for this course you do not need to add a passphase. | Use the following command to see your public ssh key: cat ~/.ssh/id_ed25519.pub copy the entire output of this command to the clipboard. | In your github page, go to settings &gt; SSH and GPG Keys Here add your ssh key that you copied to the clipboad in the step prior. Type yes (the whole word) and press enter and you are done | Test you ssh connection by using this command: ssh -T git@github.com | . | Clone your github repository. Use these commands: . | cd git clone git@github.com:yourGithub-User-Name-Here/your-Repository-Name-Here | . | . | . | Open a file manager and go to the repository you cloned (the folder) and organize the files as I do in the video. | open VS Code and open your repository. Open a terminal in VS Code and run the following commands: . | git add . | git commit -m \"Files organized\" | git push | . | Open your github repository and your web browser and noticed how the files are now organized as they are in your computer. | . ",
    "url": "http://localhost:4000/labs/lab2/#question-5--complete-the-following-tasks",
    "relUrl": "/labs/lab2/#question-5--complete-the-following-tasks"
  },"56": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Time to submit this lab.",
    "content": ". | Copy the screenshots you took from your windows computer to your vm by draging and dropping the files in your respository inside your ubuntu vm. | Place those files in a folder called: lab2 | Inside the lab2 folder create a new file named: lab2.md | Open your repository in VS code and complete the document lab2.md with your screenshots | Save the file. | Convert the file to PDF. | Commit and push the changes to github. Use this command: . | git add .; git commit -m \"Lab2 finished\"; git push | . | . ",
    "url": "http://localhost:4000/labs/lab2/#time-to-submit-this-lab",
    "relUrl": "/labs/lab2/#time-to-submit-this-lab"
  },"57": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "What will you Submit:",
    "content": ". | The URL to the lab2.md file and a pdf file of lab2. | Dont’ forget to take a snapshot of your virtual machine. | Turn off your vm | . | . ",
    "url": "http://localhost:4000/labs/lab2/#what-will-you-submit",
    "relUrl": "/labs/lab2/#what-will-you-submit"
  },"58": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Lab 3 - Using Ubuntu",
    "content": ". | Lab video here | You have to complete labs 0,1, and 2 before attempting lab 3. | Software installation cheat sheet available here | Video of Presentation available here | Presentation avaialable here | . ",
    "url": "http://localhost:4000/labs/lab3/",
    "relUrl": "/labs/lab3/"
  },"59": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 1 | Using Ubuntu for basic tasks",
    "content": "Perform the following tasks. The point of this question is to get you familiar with the system. The more you use Ubuntu, the less intimidating it becomes. | Open a terminal and type the date command. Take a screenshot of the terminal and highlight the date command. Add some text to the screenshot. Save your screenshot in your lab3 directory inside your github repository. | Create a desktop shortcut for the cis106 website . | Open a text editor. | Add the following text: #!/usr/bin/evn xdg-open [Desktop Entry] Type=Application Terminal=false Exec=/usr/bin/firefox https://cis106.com Name=cis106 Icon=/home/student/.cis106.png . | Save the file with the name: cis106.desktop and save it in your Desktop directory. | On the desktop, right click on the file cis106.desktop and enable launching: | . | . | Write a Document . | Open Libre office writer. | Go on firefox and copy and paste some text from wikipedia | Convert the file to pdf | Save the pdf file in the lab3 directory inside your github repository. | . | Create a Presentation in LibreOffice Impress . | save the presentation in the lab3 directory | . | Install a new theme . | Download a GTK theme, icon theme, cursor theme, and wallpaper from this site | Create 2 hidden directories in your home directory: .themes and .icons | Decompress the files you downloaded earlier. | Move the theme to the .themes directory, the icon to the .icons directory and the cursor theme to the .icons directory | Open the application tweaks and change to your new theme and icon. | . | Play around with the location of the dock. | Install gnome extensions: . | Applications menu | caffeine | . | . Open the file manager, take a screenshot of your ubuntu system showing your new theme. ",
    "url": "http://localhost:4000/labs/lab3/#question-1--using-ubuntu-for-basic-tasks",
    "relUrl": "/labs/lab3/#question-1--using-ubuntu-for-basic-tasks"
  },"60": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 2 | Using a different desktop environment",
    "content": ". | Install Gnome Classic. GNOME Classic is a GNOME Shell feature and mode for users who prefer a more traditional desktop experience. Read more here . | Open a terminal and run this command: sudo apt update; sudo apt install gnome-session-flashback -y . | Log out and select the gnome classic session in the gear icon. Log in. | . | . Take a screenshot of your ubuntu system. ",
    "url": "http://localhost:4000/labs/lab3/#question-2--using-a-different-desktop-environment",
    "relUrl": "/labs/lab3/#question-2--using-a-different-desktop-environment"
  },"61": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 3 | Installing applications",
    "content": "Using the command line, look for a software to do each of the following tasks and then complete the table with the information you found. | Play a tetris game | Play a video file | Browse the internet | Read your email | Play music | . | Program purpose | Package Name | Version | Description | ------------------- | ------------ | ------- | ----------- | Play a tetris game | | | Play a video file | | | Browse the internet | | | Read your email | | | Play music | | . | Install the programs that you found using a single command. Which command did you use? | Remove all the programs that you installed in a single command. Which command did you use? | If you were to install the first and second program, but remove the other 3 in a single command, Which command will you use? | . For this question, simply complete the table. No screenshot required. ",
    "url": "http://localhost:4000/labs/lab3/#question-3--installing-applications",
    "relUrl": "/labs/lab3/#question-3--installing-applications"
  },"62": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 4 | Trying out simple commands",
    "content": "Almost all Linux commands include manual pages. Manual pages (man page for short) is a documentation that explains the usage of a command. Man pages are not user friendly and are not meant to be guides but references on how a program works. The more you read man pages the more sense they make. It is normal to feel lost in the beginning. To read the manual of a command simply type: man command for example, man date opens the manual of the date command. To move around the man page, use the arrow keys in the keyboard. You can also use the mouse wheel if you are working in a terminal emulator. To get help on how to read the manual press letter h to quit the manual page press q . Try the following commands in the terminal . | date | free -h | uname -a | du / . | Install these programs: fortune cowsay toilet figlet rig lolcat boxes | Run these commands on your terminal: | . | echo \"I Like Linux!\" | lolcat | fortune | cowsay | lolcat | figlet \"Linux is cool\" | fortune | toilet -f term -F border --metal | rig | boxes -d boy | . Use the man page to find out what each of these programs do. | command | what it does |---------|--------------| echo | | fortune | | cowsay | | lolcat | | figlet | | toilet | | rig | . ",
    "url": "http://localhost:4000/labs/lab3/#question-4--trying-out-simple-commands",
    "relUrl": "/labs/lab3/#question-4--trying-out-simple-commands"
  },"63": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "What will you submit",
    "content": ". | Create a markdown file named lab3.md and answer all the questions there. | Submit the URL to the lab3.md file in github and a pdf version of lab3.md file. | . ",
    "url": "http://localhost:4000/labs/lab3/#what-will-you-submit",
    "relUrl": "/labs/lab3/#what-will-you-submit"
  },"64": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Lab 4 | The Linux Filesystem",
    "content": ". | Presentations: . | How to navigate the filesystem | Video here | . | . ",
    "url": "http://localhost:4000/labs/lab4/#lab-4--the-linux-filesystem",
    "relUrl": "/labs/lab4/#lab-4--the-linux-filesystem"
  },"65": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Question 1:  The linux filesystem",
    "content": "Create a table that includes the following directories and their usage: . | bin | dev | etc | home | media | opt | proc | srv | usr | var Your table must look like this: | . | Directory | Function | . | bin | Nulla enim amet occaecat quis esse proident proident labore do magna laborum nostrud Lorem. | . Create a table of the commands used for navigating the file system (cd, pwd, ls). Your table must include the following: . | The command, | what the command does, | the syntax/formula of how to use the commands, | an example. | . Here is an example of how your table should look like . | Command | What it does | Syntax | Example | . | echo | Display text to the screen | echo + option + text to display | echo -n \"Hello World\" | . | apt | Set of tools for managing deb packages | sudo + apt + option + package name | sudo apt install vlc | . | uname | prints system information | uname + option | uname -a | . Complete all the practice located in the presentation (including the challenge). Take a screenshot of your terminal after every practice. ",
    "url": "http://localhost:4000/labs/lab4/#question-1--the-linux-filesystem",
    "relUrl": "/labs/lab4/#question-1--the-linux-filesystem"
  },"66": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Question 2 | The pwd and cd command",
    "content": ". | pwd: Print the full filename of the current working directory. | cd: Change the shell current working directory. | . Using pwd and cd with absolute path (remember to use the bash autocompletion feature) . | Start a terminal. What is your present working directory? | Change your present working directory to /usr/share/themes | What is your present working directory now? | Change your present working directory to the root of the filesystem | Change your present working directory to /etc/firefox/ Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. | . Using pwd and cd with a relative path (remember to use the bash autocompletion feature) . | Clear your terminal window. Change the working directory to YOUR home directory. | Change the working directory to the Downloads directory. | Go back 2 directories. | Where are you now? | Change the working directory to the Documents directory. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 6-10. ",
    "url": "http://localhost:4000/labs/lab4/#question-2--the-pwd-and-cd-command",
    "relUrl": "/labs/lab4/#question-2--the-pwd-and-cd-command"
  },"67": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Question 3 | The ls command",
    "content": "Download this compressed zip file: lab4files.zip Decompress the zip file in your home directory. | Change your present working directory to /usr/share/. Using absolute path, list all the files inside the lab4files directory. | Change your present working directory to ~/lab4files. Long list all the files inside your current working directory with human readable file sizes. | Long list all the files inside lab4files with human readable file size, and sorted by file size. | Long list all the files inside lab4files with human readable file size, sorted by file size, without the user nor the group name, and showing their inode number. | list all the files inside lab4files sorted by file extension and in reverse order. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots may be **required** . ",
    "url": "http://localhost:4000/labs/lab4/#question-3--the-ls-command",
    "relUrl": "/labs/lab4/#question-3--the-ls-command"
  },"68": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Question 4 | The tree command",
    "content": ". | The tree command is not installed by default in Ubuntu. Make sure that the program is installed in your system before you continue with this question. | . | Using absolute path and having /etc as your present working directory. Display a tree of the directory lab4files. | Change your present working directory to your Downloads directory. Display a tree of the directory lab4files with the full path prefix for each file, the file permissions, and the file size in human readable format. | Display a tree of the directory lab4files sorted by last modified time and showing the file owner and group. | Display a tree of the directory lab4files in XML format. | Display a tree of the directory lab4files in JSON format. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots may be required . ",
    "url": "http://localhost:4000/labs/lab4/#question-4--the-tree-command",
    "relUrl": "/labs/lab4/#question-4--the-tree-command"
  },"69": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Question 5 | The exa command. A modern tool to replace ls",
    "content": "Exa is a tool that aims at replacing ls. Exa is not available in Ubuntu 20.04 default repositories. However, you can install it by running this command: . curl https://cis106.com/assets/installexa.sh | bash . | Once you have installed exa, list all the options of the exa command. | Long list all the files inside lab4files | Display a tree of lab4files | Long list lab4files showing the header that indicates what each column means. | Long list lab4files without the file owner nor group including the header and the date the file was created. Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots may be required . | . ",
    "url": "http://localhost:4000/labs/lab4/#question-5--the-exa-command-a-modern-tool-to-replace-ls",
    "relUrl": "/labs/lab4/#question-5--the-exa-command-a-modern-tool-to-replace-ls"
  },"70": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "What will you Submit:",
    "content": ". | Place all the screenshots and answers to your questions in a the lab4.md file. | Convert your markdown file to pdf | Push the changes to Github | Submit the URL of Lab4.md and the pdf file | Take a snapshot of your system and delete the previous snapshot. | . ",
    "url": "http://localhost:4000/labs/lab4/#what-will-you-submit",
    "relUrl": "/labs/lab4/#what-will-you-submit"
  },"71": {
    "doc": "Lab 4 - The Linux Filesystem",
    "title": "Lab 4 - The Linux Filesystem",
    "content": " ",
    "url": "http://localhost:4000/labs/lab4/",
    "relUrl": "/labs/lab4/"
  },"72": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "Lab 5 - Managing Files and Directories",
    "content": ". | Presentation here | Video here | . ",
    "url": "http://localhost:4000/labs/lab5/",
    "relUrl": "/labs/lab5/"
  },"73": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "Question 1: Creating Files and Directories",
    "content": ". | Create a Directory in YOUR home directory labeled: lab5. | Change your current working directory to ~/lab5. | Create 3 directories: pets,docs,songs. Inside each directory, create 2 subdirectories called: new and old. | Inside the new and old directories, create 3 files: file1, file2, and file3. | Use the tree command to list the lab5 directory. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots is allowed . ",
    "url": "http://localhost:4000/labs/lab5/#question-1-creating-files-and-directories",
    "relUrl": "/labs/lab5/#question-1-creating-files-and-directories"
  },"74": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "Question 2: Removing Files and Directories",
    "content": ". | Change your current working directory to: /srv/ | Remove the file1, file2, file3 files inside the labs/pets/new/ directory without changing your current working directory. | Remove the pets directory without changing your current working directory. | Remove the docs and songs directories without changing your current working directory. | Remove the lab5 directory without changing your current working directory. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots is allowed . ",
    "url": "http://localhost:4000/labs/lab5/#question-2-removing-files-and-directories",
    "relUrl": "/labs/lab5/#question-2-removing-files-and-directories"
  },"75": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "Question 3: Moving Files and Directories",
    "content": ". | Make sure that you are working on your home directory. | Run the following command: wget https://cis106.com/assets/lab5.zip &amp;&amp; unzip lab5.zip &amp;&amp; rm lab5.zip | In your home directory, create the following directories: lab5-imgs, lab5-audio, lab5-video, lab5-docs | Move all the files inside the lab5 directory to their respective new directories in your home directory. | Inside the lab5 directory, you will find a directory called Wallpaperslab5. Move this directory to your Pictures directory and rename it to NewWallpapers. | Rename the lab5 directory to Lab-5. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots is allowed . ",
    "url": "http://localhost:4000/labs/lab5/#question-3-moving-files-and-directories",
    "relUrl": "/labs/lab5/#question-3-moving-files-and-directories"
  },"76": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "Question 4: Copying Files and Directories",
    "content": ". | Go to pexels.com. Download at least 3 wallpapers. | Copy the wallpapers to your Pictures/NewWallpapers directory. | Create a new directory in your Downloads directory (use whatever naming convention you want). Download 3 wallpapers and move them to your new directory. | Copy your new directory to the Pictures directory. | Remove the new directory in your Downloads directory. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots is allowed . ",
    "url": "http://localhost:4000/labs/lab5/#question-4-copying-files-and-directories",
    "relUrl": "/labs/lab5/#question-4-copying-files-and-directories"
  },"77": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "Challenge Question:",
    "content": ". | In your home directory, create a directory called: lab5ChallengeQuestion and inside this new directory create one directory called assets you must achieve this in a single command. | Download an image from this website: pexels.com and rename it newPicture.png. Move this image to your assets directory. You must move and rename the file in a single command. | From the root of the file system, create a file in the lab5ChallengeQuestion directory called site.html | open the file site.html in a text editor (do not use vs code) and add the following text. Save the file and close the text editor. | . &lt;!DOCTYPE html&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Challenge Question Lab 5&lt;/h1&gt; &lt;img src=\"./assets/newPicture.png\" alt=\"\"&gt; &lt;/body&gt; &lt;/html&gt; . | Open the site.html file in firefox and take a screenshot. The image you downloaded should be shown there. | . Take a screenshot of the commands you used to answer this question and of firefox showing the site.html file open. ",
    "url": "http://localhost:4000/labs/lab5/#challenge-question",
    "relUrl": "/labs/lab5/#challenge-question"
  },"78": {
    "doc": "Lab 5 - Managing Files and Directories",
    "title": "What will you Submit:",
    "content": ". | Place all the screenshots and answers to your questions in a the lab5.md file. | Convert your markdown file to pdf | Push the changes to Github: git pull; git add .; git commit -m \"lab5 complete; git push\" | Submit the URL of Lab5.md and the pdf file | Take a snapshot of your system and delete the previous snapshot. | . ",
    "url": "http://localhost:4000/labs/lab5/#what-will-you-submit",
    "relUrl": "/labs/lab5/#what-will-you-submit"
  },"79": {
    "doc": "Lab 6 - Wildcards",
    "title": "Lab 6 | File Globing/wildcards",
    "content": " ",
    "url": "http://localhost:4000/labs/lab6/#lab-6--file-globingwildcards",
    "relUrl": "/labs/lab6/#lab-6--file-globingwildcards"
  },"80": {
    "doc": "Lab 6 - Wildcards",
    "title": "A Brief description of the wildcards.",
    "content": ". Cheat Sheet here . Video here . Note: Wildcards are all about pattern matching. They can be confusing but once you get a hold of them, you will never forget them. The table above gives you a summary of each wildcard. The goal of this lab is to give you enough practice for you to master wildcards in their basics form. Wildcards are very powerful because they can be combined to match pretty much any pattern that you can think of. ",
    "url": "http://localhost:4000/labs/lab6/#a-brief-description-of-the-wildcards",
    "relUrl": "/labs/lab6/#a-brief-description-of-the-wildcards"
  },"81": {
    "doc": "Lab 6 - Wildcards",
    "title": "IMPORTANT!!! READ ME!!!!!",
    "content": "Before working on this lab, run this command: curl https://cis106.com/assets/lab6.sh | bash This will create a directory called lab6 in your home directory . ",
    "url": "http://localhost:4000/labs/lab6/#important-read-me",
    "relUrl": "/labs/lab6/#important-read-me"
  },"82": {
    "doc": "Lab 6 - Wildcards",
    "title": "Question 1 | Using the * Wildcard",
    "content": ". | List all the configuration files in the etc directory. (Configuration files have the extension of .conf) | Long list all the configuration files in the etc directory that start with letter h or letter p sorted by file size, with human readable file size, and showing the date formatted as: month/day/year as shown in the output. Here is an example of the output (Notice the date): -rw-r--r-- 1 7.5K 08/19/21 /etc/pnm2ppa.conf . You can see a full list of control characters for the date here . | List all the theme files in the /usr/share/themes/ directory recursively. (theme files have the .theme extension) | In your home directory, you should have a directory called lab6, if you don’t have it, make sure to run the curl command in the READ ME part of this lab. List all the log files located in the lab6 directory. | Create a directory called log-files inside the lab6. Move all the log files to the log-files directory. | . Take a screenshot of your terminal showing all the commands that you used to complete this question. ",
    "url": "http://localhost:4000/labs/lab6/#question-1--using-the--wildcard",
    "relUrl": "/labs/lab6/#question-1--using-the--wildcard"
  },"83": {
    "doc": "Lab 6 - Wildcards",
    "title": "Question 2 | Using the ? wildcard",
    "content": ". | List only the hidden files inside the lab6 directory. | List all the files with a 2 letter file extension in the lab6 directory | List all the files that start with letter l, have one character after letter l, and the letters st. The the rest of the file name is irrelevant. | List all the files that have an _ and two characters before the file extension. | . Take a screenshot of your terminal showing all the commands that you used to complete this question. ",
    "url": "http://localhost:4000/labs/lab6/#question-2--using-the--wildcard",
    "relUrl": "/labs/lab6/#question-2--using-the--wildcard"
  },"84": {
    "doc": "Lab 6 - Wildcards",
    "title": "Question 3 | Using the [] Wildcard",
    "content": ". | List all the files that start with an uppercase letter | List all the files that start with an uppercase letter or a number | List all the files that have a number in the file name | List all the files that start with a lowercase letter and have a number before the file extension. | . Take a screenshot of your terminal showing all the commands that you used to complete this question. ",
    "url": "http://localhost:4000/labs/lab6/#question-3--using-the--wildcard",
    "relUrl": "/labs/lab6/#question-3--using-the--wildcard"
  },"85": {
    "doc": "Lab 6 - Wildcards",
    "title": "Question 4 | Using brace expansion.",
    "content": "The curly braces are not a wildcard but they are equally useful. The curly braces allow you to generate arbitrary strings to use with commands. Problem 1: In the lab6 directory, create the following directory structure. Display a tree of the directory once you have created. Your directory tree must look exactly like mine. Take a screenshot: . wallpapers/ └── cars ├── 1080p ├── 2k └── 4k . Problem 2: Clear your terminal. in the lab6 directory, create the following directory structure. Display a tree of the directory once you have created. Your directory tree must look exactly like mine. Take a screenshot: . assets/ ├── imgs │   ├── large │   └── small └── video ├── large └── small . Problem 3: Clear your terminal. in the lab6 directory, create the following directory structure. Display a tree of the directory once you have created. Your directory tree must look exactly like mine. Take a screenshot: . docs/ └── books ├── history │   ├── fall │   │   └── book.pdf (this is a file not a directory) │   └── spring │   └── book.pdf (this is a file not a directory) └── math ├── fall │   └── book.pdf (this is a file not a directory) └── spring └── book.pdf (this is a file not a directory) . Problem 4: Clear your terminal. in the lab6 directory, create the following directory structure. Display a tree of the directory once you have created. Your directory tree must look exactly like mine. Take a screenshot: . Research/ ├── books │   ├── math │   │   ├── epub │   │   └── pdf │   └── science │   ├── epub │   └── pdf └── magazines ├── computers │   ├── fanmade │   └── official ├── running │   ├── fanmade │   └── official └── videogames ├── fanmade └── official . Take a screenshot of your terminal showing all the commands that you used to complete this question. Problem 5: Brace expansion comes handy in other scenarios too. Here are some examples: . | Create a directory in your home directory called lab6-q5. From the root of the filesystem create 3 files in the lab6-q5 directory called: program.py, people.csv, data.xls. | Change your current working directory to /usr/share. Create a directory in the lab6-q5 directory called movies. Create 3 files in the ~/lab6-q5/movies directory called movies.lst, marvel.txt and disney.doc. | Remove the files: program.py, people.csv, disney.doc, and marvel.txt. | . Take a screenshot of your terminal showing all the commands that you used to complete this question. ",
    "url": "http://localhost:4000/labs/lab6/#question-4--using-brace-expansion",
    "relUrl": "/labs/lab6/#question-4--using-brace-expansion"
  },"86": {
    "doc": "Lab 6 - Wildcards",
    "title": "Challenge Question",
    "content": "Run this curl command: curl https://cis106.com/assets/lab6cq.sh | bash . This will create a directory in your home directory called: challenge-Lab6 This directory has a bunch of files. Organize these file so that each file type has its own directory. Each file type must be moved to its respective directory. In the end your challenge-Lab6 directory should look like this: . challenge-lab6/ ├── audio │   ├── aac │   │   └── all-aac-files-here │   └── mp3 │   └── all-mp3-files-here ├── docs │   ├── docx │   │   └── all-docs-files-here │   ├── pdf │   │   └── all-pdf-files-here │   └── xls │   └── all-xls-files-here └── images ├── jpg │   └── all-jpg-files-here └── png └── all-png-files-here . Tips . | Try to create your directory structure in a single command. | Try working with multiple terminal windows open. | . ",
    "url": "http://localhost:4000/labs/lab6/#challenge-question",
    "relUrl": "/labs/lab6/#challenge-question"
  },"87": {
    "doc": "Lab 6 - Wildcards",
    "title": "What will you Submit:",
    "content": ". | Place all the screenshots and answers to your questions in a the lab6.md file. | Convert your markdown file to pdf | Push the changes to Github: git pull; git add .; git commit -m \"lab5 complete; git push\" | Submit the URL of lab6.md and the pdf file | Take a snapshot of your system and delete the previous snapshot. | . ",
    "url": "http://localhost:4000/labs/lab6/#what-will-you-submit",
    "relUrl": "/labs/lab6/#what-will-you-submit"
  },"88": {
    "doc": "Lab 6 - Wildcards",
    "title": "Lab 6 - Wildcards",
    "content": " ",
    "url": "http://localhost:4000/labs/lab6/",
    "relUrl": "/labs/lab6/"
  },"89": {
    "doc": "Lab 7 - Handling Files",
    "title": "Lab 7 - Handling Files",
    "content": "PRE-WORK . you must complete this part of the lab before you start doing the questions. If you skip this part, you will not have the necessary files to work on this lab. 1 Install the script textFiles.sh using this command: curl https://cis106.com/assets/installTextFiles.sh | bash . | Read the help section of the textFiles script to learn how to use it. | Download all the books, csv files and json files | You should now have these directories in your machine: ~/Documents/Books, ~/Documents/Csv, ~/Documents/Json | . ",
    "url": "http://localhost:4000/labs/lab7-new/",
    "relUrl": "/labs/lab7-new/"
  },"90": {
    "doc": "Lab 7 - Handling Files",
    "title": "READ ME",
    "content": "The /etc/passwd file stores user’s account information. Each account data occupies a single line in a file and when a new account is created a new entry with the new user’s information is added. The /etc/passwd records contain several fields, 7 in total. These fields are described in the image below. In this lab, we are going to use the passwd file in combination with the commands for handling text files. The goal is to demonstrate how to use these commands successfully for administering a system. ",
    "url": "http://localhost:4000/labs/lab7-new/#read-me",
    "relUrl": "/labs/lab7-new/#read-me"
  },"91": {
    "doc": "Lab 7 - Handling Files",
    "title": "Question 1: cat, tac, head, tail",
    "content": ". | Display the content of the /etc/passwd file. | Display the content of the /etc/passwd file in reverse order. | Display the content of the /etc/passwd file with line numbers and the $ to indicate the end of every line. | Display the first 5 lines of a the /etc/passwd file. | Display the last 5 lines of the /etc/passwd file. Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7-new/#question-1-cat-tac-head-tail",
    "relUrl": "/labs/lab7-new/#question-1-cat-tac-head-tail"
  },"92": {
    "doc": "Lab 7 - Handling Files",
    "title": "Question 2: cut",
    "content": ". | Display the first field of the /etc/passwd file. | Display the first and last field of the /etc/passwd file | Display the first and last field of the /etc/passwd file with the = as the output delimiter. | Display all the fields of the /etc/passwd file except the 3rd field. Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7-new/#question-2-cut",
    "relUrl": "/labs/lab7-new/#question-2-cut"
  },"93": {
    "doc": "Lab 7 - Handling Files",
    "title": "Question 3 Paste, wc",
    "content": ". | Download these files using curl. Use the command: curl -s URL-here -o name-of-file where the name of the file is the one given in the URL. After Downloading the files, paste the files . | https://cis106.com/assets/shopping.md | https://cis106.com/assets/tasks.md | . | How many lines does the book dracula book have? | How many words does the book “Pride and Prejudice” have? | Sort the file /etc/passwd Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7-new/#question-3-paste-wc",
    "relUrl": "/labs/lab7-new/#question-3-paste-wc"
  },"94": {
    "doc": "Lab 7 - Handling Files",
    "title": "Question 4 tr, grep",
    "content": ". | Replace the ; for a , in the cereal.csv file | Display every line that contain the word love in the book “Pride and Prejudice” | Display every line that contains exactly the word love or hate in the book “Pride and Prejudice” with line numbers | Display every line that starts exactly with the word “love” in the book Dracula | Display every line that starts with letter l, followed by 1 vowel, followed by any letter from a-z, and ending in a vowel. Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7-new/#question-4-tr-grep",
    "relUrl": "/labs/lab7-new/#question-4-tr-grep"
  },"95": {
    "doc": "Lab 7 - Handling Files",
    "title": "Question 5 awk and sed",
    "content": ". | Print the first and last field of the cars.csv file | Print the first and last field of the cars.csv file with the string \" made in \" as a delimiter | Print the cars.csv file in such a way that the output looks like this for every line: The Chevy S-10 has 4 cylinders and is made in US . | Print the cars.csv file excluding the first 2 records (lines). | Print all the car names in upper case. | Replace all the instances of the word Dracula for the word Alucard in the book dracula. | Insert a blank line after each line in the /etc/passwd file | Replace all the repeated blank lines for a single blank line in the book “Pride and Prejudice” Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7-new/#question-5-awk-and-sed",
    "relUrl": "/labs/lab7-new/#question-5-awk-and-sed"
  },"96": {
    "doc": "Lab 7 - Handling Files",
    "title": "Question 6 I/O Redirection",
    "content": ". | How many users can login with the /bin/bash shell? | How many users have the /sbin/nologin shell assigned? | How many ford vehicles are there in the cars.csv file | How many 4 letter words are there in the bible? Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7-new/#question-6-io-redirection",
    "relUrl": "/labs/lab7-new/#question-6-io-redirection"
  },"97": {
    "doc": "Lab 7 - Handling Files",
    "title": "Challenge Question",
    "content": ". | Display only the names of the cereals in the cereal.csv file. (Tip: use cut, awk and the pipe) | Sort the output of the previous command and save it to a file called cereal-sorted.csv. (Beware that the first 2 lines need to be removed) | Display the names of the cereals and the amount of calories they have per serving. | Repeat the previous command but replace the ; with a , | . Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . ",
    "url": "http://localhost:4000/labs/lab7-new/#challenge-question",
    "relUrl": "/labs/lab7-new/#challenge-question"
  },"98": {
    "doc": "Weekly Lecture Schedule",
    "title": "Weekly Lecture Schedule",
    "content": "| Lecture Number | Start Day Week | End Day Week | . | Lecture 01 | Sept 7th | Sept 13th | . | Lecture 02 | Sept 14th | Sept 20th | . | Lecture 03 | Sept 21st | Sept 27th | . | Lecture 04 | Sept 28th | Oct 4th | . | Lecture 05 | Oct 5th | Oct 11th | . | Lecture 06 | Oct 12th | Oct 18th | . | Lecture 07 | Oct 19th | Oct 25th | . | Lecture 08 | Oct 26th | Nov 1st | . | Lecture 09 | Nov 2nd | Nov 8th | . | Lecture 10 | Nov 9th | Nov 15th | . | Lecture 11 | Nov 16th | Nov 22nd | . | Lecture 12 | Nov 23rd | Nov 29th | . | Lecture 13 | Nov 30th | Dec 6th | . ",
    "url": "http://localhost:4000/docs/WeekLectureSchedule/",
    "relUrl": "/docs/WeekLectureSchedule/"
  },"99": {
    "doc": "Weekly Lecture Schedule",
    "title": "Special Dates",
    "content": "| Event | Date | . | Last Day to drop without Academic Penalty | Sept 20 | . | Last Day to Withdraw with Permission | Oct 24 | . | Last Day to Withdraw with Faculty Permission | Nov 25 | . | Thanksgiving Recess (No Classes) | Nov 23-27 | . | Final Examinations | Dec 18-22 | . ",
    "url": "http://localhost:4000/docs/WeekLectureSchedule/#special-dates",
    "relUrl": "/docs/WeekLectureSchedule/#special-dates"
  },"100": {
    "doc": "Weekly Homework Description",
    "title": "Weekly Homework",
    "content": "This is a list of task that you will be required to complete every week. | Complete the designated lab (40 Minutes) . | Each lab has a video walkthrough from beginning to end available in the course Youtube Channel. | Each lab is a hands on activity consisting of 5 questions. | I advise you to complete the labs in one sitting to avoid losing any data. | Labs are the corner stone of this course and as a result are required to be completed in the designated order. You cannot do the next week’s lab if you do not complete the previous week lab as they build on each other.I | . | Complete the assigned discussion board (30 Minutes) . | Every week you will have either a video, podcast episode, or article to read. | After you complete the assigned material, you are required to answer 1 question. | To receive full grade, you must create a post with your answer and reply to someone else’s post as well. | . | Complete Weekly Report (30 minutes) . | A document written in markdown containing the following . | A summary of the lecture’s presentation | Screenshots when needed | Example of the commands/technoligies covered during the lecture | The first weekly report has a video. The video exist to show you what I am expecting from you and a clear example of how to do the work. This prevents you from losing points. | Only Markdown format and a pdf converted from the markdown file is accepted. No Word Documents! | . | . | Complete Final Project assignment (30 Minutes) . | You are required to work on your final project on a week by week basis. This prevents procr🌟astination. | You will submit your project in a Markdown file as well. | You will have specific questions to complete that will lead you to a complete project by the end of the semester. | . | . The total study time is 2.16 hours. However, this is on average. Chances are that you may have to spend more time working on each task depending on how good you are with computers. Do not leave this for the last minute. I will not grant you any extra time without a good reason and procrastination is not a good one. If leave the assignment for the last hour of the week and your computer breaks, that is your problem, I will not grant you any extra time. I will not be taking late assignments. If you have not submitted your work, you get a zero. ",
    "url": "http://localhost:4000/docs/weekly-homework-description/#weekly-homework",
    "relUrl": "/docs/weekly-homework-description/#weekly-homework"
  },"101": {
    "doc": "Weekly Homework Description",
    "title": "Weekly Homework Description",
    "content": " ",
    "url": "http://localhost:4000/docs/weekly-homework-description/",
    "relUrl": "/docs/weekly-homework-description/"
  },"102": {
    "doc": "Setup SSH Guide",
    "title": "Setup SSH Guide",
    "content": " ",
    "url": "http://localhost:4000/guides/SetupSSHUbuntuServer/",
    "relUrl": "/guides/SetupSSHUbuntuServer/"
  },"103": {
    "doc": "Setup SSH Guide",
    "title": "Installation",
    "content": ". | Make sure that your server and your client computer are in the same network. The easiest way to do this is to make sure that the network addapter in the viertual machine is set to bridge instead of nat. To do this go, open the virtual machine settings and in the network section change the adapter to Bridge. | . | However, your network may prevent you from doing this. Some IDS and smart routers may prevent you from getting an IP. In this case, you need to use port forwarding in your virtual machine. Here is a guide on how to do it. Portforwarding Example . | Make sure that the ssh server program is installed in the server virtual machine sudo apt install openssh-server -y . | Make sure that the ssh client program is installed in the client machine. This is the computer that you will be using to manage your server. sudo apt install openssh-server -y . | Enable and start ssh in the server: sudo systemctl enable ssh; sudo systemctl start ssh . | Test the connection by loging in to the server from the client. First, use the ip or hostname command to find out the ip address of the server. | On the server type, hostname -I this will give you the ip address of your server. | On the client type: ssh username@server-ip-address . | If you are using port forwarding, your command will be: | . ssh -p 2222 username@127.0.0.1 . | Read and answer the questions and you will connect sucessfully. | . ",
    "url": "http://localhost:4000/guides/SetupSSHUbuntuServer/#installation",
    "relUrl": "/guides/SetupSSHUbuntuServer/#installation"
  },"104": {
    "doc": "Setup SSH Guide",
    "title": "Setup private and public key authentication with or without password:",
    "content": ". | On the server, configure the firewall to accept ssh connections. sudo ufw allow ssh sudo ufw enable sudo ufw status . | Now we need to generate an ssh key in our client computer. If you are using your ubuntu machine from the course, then you already have one. If you are not, then you must create the ssh keys: | In your client machine type: ssh-keygen . | Now you can type this command to copy your ssh key to the server ssh-copy-id -i .ssh/id_rsa.pub webmaster@server-ip-address . | if you are using port forwarding, use this command instead: ssh-copy-id -i .ssh/id_rsa.pub -p 2222 webmaster@127.0.0.1 . | . if you use port forwarding your command will be: . ssh-copy-id -p 2222 username@127.0.0.1 . | Now you can connect to your server without having to remember the password. | . ",
    "url": "http://localhost:4000/guides/SetupSSHUbuntuServer/#setup-private-and-public-key-authentication-with-or-without-password",
    "relUrl": "/guides/SetupSSHUbuntuServer/#setup-private-and-public-key-authentication-with-or-without-password"
  },"105": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "How to Setup Git and Github in Ubuntu 20.04",
    "content": " ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/"
  },"106": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Assumptions:",
    "content": "I assume the following: . | You have a computer running Ubuntu and VS Code is installed in it. | You have a basic understanding of the Linux Command Line and your Terminal Emulator | You have a Github Account | . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#assumptions",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#assumptions"
  },"107": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Install and setup git",
    "content": "Install command: sudo apt install git -y . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#install-and-setup-git",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#install-and-setup-git"
  },"108": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Setup Git",
    "content": ". | Set your username: git config --global user.name 'your username here' | Set your email address: git config --global user.email 'your email here' | . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#setup-git",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#setup-git"
  },"109": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Setup SSH authentication",
    "content": ". | Generate an ssh key: ssh-keygen -t ed25519 -C \"your_email@example.com\" This creates a new SSH key, using the provided email as a label. When you’re prompted to: \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. At the prompt, to type a secure passphrase, press enter for no passphrase. If you want to use a passphrase, go ahead as it provides an extra layer of security. However, for this course you do not need to add a passphase. | Use the following command to see your public ssh key: cat ~/.ssh/id_ed25519.pub copy the entire output of this command to the clipboard. See examle here: . | In your github page, go to settings &gt; SSH and GPG Keys Here add your ssh key that you copied to the clipboad in the step prior. Type yes (the whole word) and press enter and you are done . | Test you ssh connection by using this command: ssh -T git@github.com You will see the following outcome: . | . If you do not see an error message or a different message than the one shown prior, then your SSH connection is correct. Now you can push and clone using SSH. ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#setup-ssh-authentication",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#setup-ssh-authentication"
  },"110": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "During Installation Settings",
    "content": "Once you have created the virtual machine, turn it on and start the installation process. During the installation, make sure that you follow these specifications: . | Keyboard layout: English US | Installation type: Normal with third party software, Erase disk | Timezone: NY | User Details . | Name: Student | Hostname: cis106vm | Username: Student | Password: pccc | Require login (Important) | . | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#during-installation-settings",
    "relUrl": "/guides/Ubuntu-vm-setup/#during-installation-settings"
  },"111": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Post Installation Settings",
    "content": "Once the operating system has been installed, make sure to take a snapshot of your machine. This is a good idea because if something goes wrong, you can revert back to the virtual machine state. Think of snapshots as a way of traveling back in time! . | Update and upgrade | Remove unnecessary software | Essential software install | Disable animations | Change Default File Manager: Nemo | Change Default screenshot tool with flameshot | Enable Dark Theme | . You can do all of the above with a single command. | sudo apt install curl -y; curl https://raw.githubusercontent.com/ra559/cis106/main/guides/oneliner.sh | bash | . Install restricted extras, which is a package that contains other essential software that is normally not included by default because of copyright issues, being closed source or any other controversial reason. For instance, Microsoft core fonts are part of the restricted extras. | sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons -y | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#post-installation-settings",
    "relUrl": "/guides/Ubuntu-vm-setup/#post-installation-settings"
  },"112": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Install Guest Additions",
    "content": "This step is for VirtualBox only. Skip if using any other hypervisor. For instance, in VMware Workstation Player, these are installed via the command line without the need of a virtual disk. Guest Additions are a collection of software that gives the virtual machine more functionality and better performance. For instance, you having the Guest Additions installed allows you to use the full resolution of your monitor and to share the clipboard between your host and the guest OS. ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#install-guest-additions",
    "relUrl": "/guides/Ubuntu-vm-setup/#install-guest-additions"
  },"113": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Change Desktop Environment",
    "content": "The default desktop environment in Ubuntu 20.04 is Gnome 3. However, Gnome 3 is a heavy desktop environment not recommended for a low end machine with the specifications such as the one our virtual machine has. This is the reason why we will be using Gnome Classic which is a fork of the old Gnome 2 Desktop environment. Gnome Classic consumes considerably less system resources while remaining easy to use and functional enough. | Replace GDM with Lightdm: sudo apt install lightdm -y | Set default Desktop Environment to Gnome Flashback | . VS Code setup . VS Code is the text editor that we will use through out the semester to write our notes, labs, homeworks, and final project documentation. To make VS Code more functional, we will install a series of extensions. | Install VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | PDF Preview | Markdown Converter | Code Spell Checker | . | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#change-desktop-environment",
    "relUrl": "/guides/Ubuntu-vm-setup/#change-desktop-environment"
  },"114": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Ubuntu 20.04 Virtual Machine Setup",
    "content": " ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/",
    "relUrl": "/guides/Ubuntu-vm-setup/"
  },"115": {
    "doc": "FORMAT control characters",
    "title": "FORMAT control characters supported by the GNU/date command",
    "content": "| %FORMAT String | Description | . | %% | a literal % | . | %a | locale’s abbreviated weekday name (e.g., Sun) | . | %A | locale’s full weekday name (e.g., Sunday) | . | %b | locale’s abbreviated month name (e.g., Jan) | . | %B | locale’s full month name (e.g., January) | . | %c | locale’s date and time (e.g., Thu Mar 3 23:05:25 2005) | . | %C | century; like %Y, except omit last two digits (e.g., 21) | . | %d | day of month (e.g, 01) | . | %D | date; same as %m/%d/%y | . | %e | day of month, space padded; same as %_d | . | %F | full date; same as %Y-%m-%d | . | %g | last two digits of year of ISO week number (see %G) | . | %G | year of ISO week number (see %V); normally useful only with %V | . | %h | same as %b | . | %H | hour (00..23) | . | %I | hour (01..12) | . | %j | day of year (001..366) | . | %k | hour ( 0..23) | . | %l | hour ( 1..12) | . | %m | month (01..12) | . | %M | minute (00..59) | . | %n | a newline | . | %N | nanoseconds (000000000..999999999) | . | %p | locale’s equivalent of either AM or PM; blank if not known | . | %P | like %p, but lower case | . | %r | locale’s 12-hour clock time (e.g., 11:11:04 PM) | . | %R | 24-hour hour and minute; same as %H:%M | . | %s | seconds since 1970-01-01 00:00:00 UTC | . | %S | second (00..60) | . | %t | a tab | . | %T | time; same as %H:%M:%S | . | %u | day of week (1..7); 1 is Monday | . | %U | week number of year, with Sunday as first day of week (00..53) | . | %V | ISO week number, with Monday as first day of week (01..53) | . | %w | day of week (0..6); 0 is Sunday | . | %W | week number of year, with Monday as first day of week (00..53) | . | %x | locale’s date representation (e.g., 12/31/99) | . | %X | locale’s time representation (e.g., 23:13:48) | . | %y | last two digits of year (00..99) | . | %Y | year | . | %z | +hhmm numeric timezone (e.g., -0400) | . | %:z | +hh:mm numeric timezone (e.g., -04:00) | . | %::z | +hh:mm:ss numeric time zone (e.g., -04:00:00) | . | %:::z | numeric time zone with : to necessary precision (e.g., -04, +05:30) | . | %Z | alphabetic time zone abbreviation (e.g., EDT) | . ",
    "url": "http://localhost:4000/guides/format-control-char-date-command/#format-control-characters-supported-by-the-gnudate-command",
    "relUrl": "/guides/format-control-char-date-command/#format-control-characters-supported-by-the-gnudate-command"
  },"116": {
    "doc": "FORMAT control characters",
    "title": "FORMAT control characters",
    "content": " ",
    "url": "http://localhost:4000/guides/format-control-char-date-command/",
    "relUrl": "/guides/format-control-char-date-command/"
  },"117": {
    "doc": "Install Ubuntu Server 20.04 In VirtualBox",
    "title": "Install Ubuntu Server 20.04 In VirtualBox",
    "content": " ",
    "url": "http://localhost:4000/guides/install-ubuntu-server-20.04/",
    "relUrl": "/guides/install-ubuntu-server-20.04/"
  },"118": {
    "doc": "Install Ubuntu Server 20.04 In VirtualBox",
    "title": "Step: 1",
    "content": ". | Download Ubuntu Server 20.04 iso file. | Create a virtual machine that meets Ubuntu Server 20.04 Minimun requirements.. | The recommended system requirements are: . | CPU: 1 gigahertz or better | RAM: 1 gigabyte or more | Disk: a minimum of 2.5 gigabytes (we will use 20) | Clipboard Redirection - Bidirectional | Network Card - Bridge Adapter | . | . | Turn on Virtual Machine | Start the installer. | . ",
    "url": "http://localhost:4000/guides/install-ubuntu-server-20.04/#step-1",
    "relUrl": "/guides/install-ubuntu-server-20.04/#step-1"
  },"119": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup (Gnome Classic Edition)",
    "content": ". ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#raspberry-pi-ubuntu-2010-setup-gnome-classic-edition",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#raspberry-pi-ubuntu-2010-setup-gnome-classic-edition"
  },"120": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Table of Content",
    "content": ". | Raspberry Pi Ubuntu 20.10 Setup (Gnome Classic Edition) . | Table of Content | What is Gnome Classic? | Install Gnome classic | Add necessary software | VS Code | Remove unnecessary software | Enable Dark Theme | Adding some adjustments | Extra | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#table-of-content",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#table-of-content"
  },"121": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "What is Gnome Classic?",
    "content": "GNOME Classic is a feature for users who prefer a more traditional desktop experience. While GNOME Classic is based on GNOME 3 technologies, it provides a number of changes to the user interface, such as the Applications and Places menus on the top bar, and a window list at the bottom of the screen. source . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#what-is-gnome-classic",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#what-is-gnome-classic"
  },"122": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Install Gnome classic",
    "content": "Update the system and install gnome classic: sudo apt update; sudo apt upgrade -y; sudo apt install gnome-session-flashback -y . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#install-gnome-classic",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#install-gnome-classic"
  },"123": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Add necessary software",
    "content": "sudo apt install gcc make perl nemo ubuntu-restricted-extras ubuntu-restricted-addons git python3-pip flameshot pandoc vlc gnome-tweaks curl snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap wget tree htop net-tools vlc peek vim deluge geany tilix neofetch midori caffeine -y . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#add-necessary-software",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#add-necessary-software"
  },"124": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "VS Code",
    "content": ". | Download deb package from: https://code.visualstudio.com/sha/download?build=stable&amp;os=linux-deb-arm64 | Run this command (assuming that you downloaded the file to your Downloads directory): sudo apt install $HOME/Downloads/code*.deb | Install VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#vs-code",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#vs-code"
  },"125": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Remove unnecessary software",
    "content": "Remove error reporting, IRQ Balance, and other not needed software: sudo apt purge apport irqbalance aisleriot gnome-mahjongg gnome-sudoku gnome-mines thunderbird transmission-common -y . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#remove-unnecessary-software",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#remove-unnecessary-software"
  },"126": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Enable Dark Theme",
    "content": ". ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#enable-dark-theme",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#enable-dark-theme"
  },"127": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Adding some adjustments",
    "content": ". | Replace nautilus with nemo: xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search . | Replace Screenshot tool with flameshot: . | Disable animations | Disable Suspend when laptop lid is closed . | Disable desktop icons: gsettings set org.gnome.gnome-flashback.desktop show-icons false . | Set caffeine and flameshot to start with system startup. | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#adding-some-adjustments",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#adding-some-adjustments"
  },"128": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Extra",
    "content": ":warning: Before Overclocking the system keep this in mind :warning: . | Make sure that you are using either a case with a fan or a case with passive cooling if you are using a Raspberry Pi 4 | If you are using a Raspberry Pi 400, you do not have to worry about cooling since it comes with a good heat sink. | To overclock the system follow these steps: . | Open the file: /boot/firmware/config.txt in a text editor like nano or vim. | Add the following lines to the end of the file for the raspberry pi 400: force_turbo=1 over_voltage=8 arm_freq=2200 | If you are using a Raspberry Pi 4, add this lines instead: over_voltage=6 arm_freq=2000 | Reboot your Pi with: sudo reboot or telinit 6 | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#extra",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#extra"
  },"129": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "content": " ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/"
  },"130": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup (Gnome 3 Edition)",
    "content": ". ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/#raspberry-pi-ubuntu-2010-setup-gnome-3-edition",
    "relUrl": "/guides/pi-ubuntu-gnome3/#raspberry-pi-ubuntu-2010-setup-gnome-3-edition"
  },"131": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Table of content",
    "content": ". | Raspberry Pi Ubuntu 20.10 Setup (Gnome 3 Edition) | Table of content . | 1. Update the system: | 2. Install the necessary software: | 3. Remove non-essential software: | 4. Enable Gnome Extensions: | 5. Disable Animations | 6. Turn off desktop icons | 7. Remove the frequently used program from gnome shell | 8. Tweak Dash to Panel | 9. VS Code Extensions: | 10. Replace Screenshot tool: | 11. Extra (non-essential) customization | Extra | . | . Description: This is a guide to make Ubuntu 20.10 more efficient so that it consumes less resources.The version of the Raspberry Pi used to complete this guide was: Raspberry Pi 400, 4 (2GB, 4GB, and 8GB). No Overclock! This guide is for those taking CIS-106 Linux Fundamentals and wish to use a Raspberry Pi over a Virtual Machine as their learning environment. There is a version of this guide using Gnome classic for those who want to use Gnome Classic over Gnome 3. 1. Update the system: . Before installing any software, make sure the system is update with: . sudo apt update; sudo apt upgrade -y; . 2. Install the necessary software: . These are the applications that are not installed by default but that are needed for our day to day work on the pi. These applications are not essential, THIS IS AN OPINION! Ubuntu is ready to use out of the box! . sudo apt install gcc make perl nemo ubuntu-restricted-extras ubuntu-restricted-addons git python3-pip flameshot pandoc vlc gnome-tweaks curl snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap wget tree htop net-tools vlc peek vim deluge geany tilix neofetch midori -y . VS Code: . Download deb package from: https://code.visualstudio.com/sha/download?build=stable&amp;os=linux-deb-arm64 . | Run this command (assuming that you downloaded the file to your Downloads directory) sudo apt install $HOME/Downloads/code*.deb | . 3. Remove non-essential software: . The command below will remove some applications that I have no need for. This step is optional since you may find some use for these apps. However, you want to make sure that you remove irqbalance since it does not help the Raspberry Pi CPU. sudo apt purge apport irqbalance aisleriot gnome-mahjongg gnome-sudoku gnome-mines thunderbird transmission-common -y . Explanation: . | apport: package that does error reporting. | irqbalance: It is useless in the Raspberry Pi. | aisleriot gnome-mahjongg gnome-sudoku gnome-mines: office games. I dont play them so I dont need them. | thunderbird: Mozilla email client that I do not use so I don’t need. | transmission-common: I do not use trasmission. I use deluge so I remove it. | . 4. Enable Gnome Extensions: . The default Gnome 3 DE is too heavy for the Raspberry Pi. Thankfully there are extensions that we can use to remove/improve the performance of Gnome 3 on the Pi. | Go to: https://extensions.gnome.org/ click on Click here to install Gnome Extensions. Install the following extensions: . | Dash to panel: will move the favorite bar to the bottom and turn it into a panel. | caffeine: will allow us to prevent the screen from locking. | Blur my shell: (Not essential!) It blurs the wallpaper when you open the activities menu. | cpufeq by konkor: will allow us to set a minimum frequency to all cores in the Pi . | Increase the minimum frequency to 1Ghz | Disable splash screen | . | . | . 5. Disable Animations . Animations make the system slower. Less effects = faster system. | Tweaks -&gt; General -&gt; Animations -&gt; Off | Tweaks -&gt; Suspend laptop lid -&gt; Off (We are not using a laptop) | . 6. Turn off desktop icons . I do not use desktop icons but if you do, keep this option on. | Extensions -&gt; Desktop icons -&gt; Off | . 7. Remove the frequently used program from gnome shell . By default, Gnome 3 keeps the frequently used apps in the menu. This is not very useful to me but if it is useful to you, keep it! . gsettings set org.gnome.desktop.privacy remember-app-usage false . 8. Tweak Dash to Panel . There are a couple of things that we need to do to make our experience better. Open the extensions manager app and then open the settings of Dash to Panel . | Under Position . | Replace Applications Button with Ubuntu logo. this is not important, I just prefer the Ubuntu logo over the dots! | . | Under Styles . | Reduce the panel size to 32 or any number that works better for you. | Reduce Icon Margin to 4 or any number that works better for you. | Set Icon padding to 2 or any number that works better for you. | Enable Panel background opacity if you want to change the opacity of the panel. I like full transparent. | . | Under Behavior . | Disable: Show favorite applications on secondary panels | Disable: Show window previews on hover | Enable: Ungroup applications . | Set Maximum width to 50 | . | . | Under Fine-tune: . | Disable: Animate switching applications and animate launching new windows | Remove all favorite apps and add Tilix, VS Code, and Firefox, and nemo | . | . 9. VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . 10. Replace Screenshot tool: . 11. Extra (non-essential) customization . These steps are optional. Enable Dark Theme . | Settings -&gt; Appearance -&gt; Dark | . Install cursor themes: . | Materia Light Cursor theme | Layan | . Install Powerline: Just run this script if you want to prompt to look like this: . | https://raw.githubusercontent.com/ra559/cis106/main/powerlineinstaller.sh | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/#table-of-content",
    "relUrl": "/guides/pi-ubuntu-gnome3/#table-of-content"
  },"132": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Extra",
    "content": ":warning: Before Overclocking the system keep this in mind :warning: . | Make sure that you are using either a case with a fan or a case with passive cooling if you are using a Raspberry Pi 4 | If you are using a Raspberry Pi 400, you do not have to worry about cooling since it comes with a good heat sink. | To overclock the system follow these steps: . | Open the file: /boot/firmware/config.txt in a text editor like nano or vim. | Add the following lines to the end of the file for the raspberry pi 400: force_turbo=1 over_voltage=8 arm_freq=2200 | If you are using a Raspberry Pi 4, add this lines instead: over_voltage=6 arm_freq=2000 | Reboot your Pi with: sudo reboot or telinit 6 | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/#extra",
    "relUrl": "/guides/pi-ubuntu-gnome3/#extra"
  },"133": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "content": " ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/",
    "relUrl": "/guides/pi-ubuntu-gnome3/"
  },"134": {
    "doc": "Study Guide Final Spring 22",
    "title": "Study Guide For Final Spring 2022",
    "content": "Video here! . ",
    "url": "http://localhost:4000/guides/studyguide2022/#study-guide-for-final-spring-2022",
    "relUrl": "/guides/studyguide2022/#study-guide-for-final-spring-2022"
  },"135": {
    "doc": "Study Guide Final Spring 22",
    "title": "List of Commands",
    "content": ". | date | uname | du | free | echo | apt | pwd | cd | ls | tree | man | mkdir | touch | rm | cp | mv | stat | Wildcards (*,?,[]) | Brace expansion | cat | head | tail | cut | tr | paste | wc | grep | output redirection | Saving the output of a command | vim or nano (basic stuff: open a file, close a file, edit a file) | tar | gz, bzip2, or xz | chmod ",
    "url": "http://localhost:4000/guides/studyguide2022/#list-of-commands",
    "relUrl": "/guides/studyguide2022/#list-of-commands"
  },"136": {
    "doc": "Study Guide Final Spring 22",
    "title": "Tasks (you do not have to include this in your submission)",
    "content": ". | How to format markdown | How to work with multiple terminal windows | How to use flameshot to highlight screenshots | How to download and run scripts using curl | How to create multiple files and directories using brace expansion | How to move and remove files and directories using absolute and relative path | How to save the output of a command to a file | How to append the output of a command to a file | How to use basic commands (mkdir, mv, cp, ls) to organize files in directories and subdirectories | How to use vim to add text to a file | How to use grep to search for strings inside a file | How to rename files and directories | How to know the size of file | How to use the cat command | Difference between an absolute path and relative path | How to get the inode number of a file | How to know when was a file last modified | How to display the absolute path of a file | How to use the cut, head, and tail commands with the pipe to filter the ouput of a command | How to use wildcards to match specific file names: *,?,[],{} | How to manage data with tar and compression tools | Understand what is the purpose of the /etc/passwd file | . | . ",
    "url": "http://localhost:4000/guides/studyguide2022/#tasks-you-do-not-have-to-include-this-in-your-submission",
    "relUrl": "/guides/studyguide2022/#tasks-you-do-not-have-to-include-this-in-your-submission"
  },"137": {
    "doc": "Study Guide Final Spring 22",
    "title": "What should your submission have:",
    "content": "Create a study sheet that contains the following: For every command, include: . | What the command does | What is the syntax of the command | 3 examples with description. | . If you are using markdown, you can use these format: . # Command name ## Description Enter description here ## Syntax `cmd + options` ## Example * Description of example: * `command here` * Description of example: * `command here` * Description of example: * `command here` . Here is an example: . ",
    "url": "http://localhost:4000/guides/studyguide2022/#what-should-your-submission-have",
    "relUrl": "/guides/studyguide2022/#what-should-your-submission-have"
  },"138": {
    "doc": "Study Guide Final Spring 22",
    "title": "The MKDIR command",
    "content": " ",
    "url": "http://localhost:4000/guides/studyguide2022/#the-mkdir-command",
    "relUrl": "/guides/studyguide2022/#the-mkdir-command"
  },"139": {
    "doc": "Study Guide Final Spring 22",
    "title": "Description",
    "content": "It is used for creating directories . ",
    "url": "http://localhost:4000/guides/studyguide2022/#description",
    "relUrl": "/guides/studyguide2022/#description"
  },"140": {
    "doc": "Study Guide Final Spring 22",
    "title": "Syntax",
    "content": "mkdir + option + directories to make . ",
    "url": "http://localhost:4000/guides/studyguide2022/#syntax",
    "relUrl": "/guides/studyguide2022/#syntax"
  },"141": {
    "doc": "Study Guide Final Spring 22",
    "title": "Examples",
    "content": ". | Make a directory | mkdir newDirectory | Make 2 directories | mkdir newDirectory NewDirectory2 | Make a parent and child directory | mkdir -p Pets/Dogs/ | . ",
    "url": "http://localhost:4000/guides/studyguide2022/#examples",
    "relUrl": "/guides/studyguide2022/#examples"
  },"142": {
    "doc": "Study Guide Final Spring 22",
    "title": "Study Guide Final Spring 22",
    "content": " ",
    "url": "http://localhost:4000/guides/studyguide2022/",
    "relUrl": "/guides/studyguide2022/"
  },"143": {
    "doc": "Deliverable 1",
    "title": "Deliverable 1",
    "content": " ",
    "url": "http://localhost:4000/project/Final%20Project%20Deliverables/deliverable1/",
    "relUrl": "/project/Final%20Project%20Deliverables/deliverable1/"
  },"144": {
    "doc": "Deliverable 1",
    "title": "Project 1 - Using Ubuntu 22.04 as a desktop operating system",
    "content": " ",
    "url": "http://localhost:4000/project/Final%20Project%20Deliverables/deliverable1/#project-1---using-ubuntu-2204-as-a-desktop-operating-system",
    "relUrl": "/project/Final%20Project%20Deliverables/deliverable1/#project-1---using-ubuntu-2204-as-a-desktop-operating-system"
  },"145": {
    "doc": "Deliverable 1 Example",
    "title": "Deliverable 1 Example",
    "content": " ",
    "url": "http://localhost:4000/project/deliverable1-example/",
    "relUrl": "/project/deliverable1-example/"
  },"146": {
    "doc": "Deliverable 1 Example",
    "title": "Introduction/project description",
    "content": "Et minim elit excepteur aute ad ullamco. Fugiat incididunt in nisi sunt magna qui consequat non dolore ut adipisicing. Officia laboris id deserunt officia deserunt aliquip eiusmod exercitation id nulla. Reprehenderit ut ea in sunt eu aute laborum ea nostrud sunt sit qui excepteur. Dolore eu exercitation adipisicing qui do veniam eiusmod irure. Tempor dolore elit elit tempor. Nostrud consectetur exercitation commodo do cupidatat exercitation proident. Sunt fugiat dolore non laboris. Veniam commodo sit ex consectetur duis cillum occaecat magna deserunt aliquip fugiat dolor Lorem. Laborum laborum reprehenderit velit irure ea enim cillum ullamco ea sit. Ex culpa est et non officia fugiat officia. Dolore enim ad cillum ea aute labore. ",
    "url": "http://localhost:4000/project/deliverable1-example/#introductionproject-description",
    "relUrl": "/project/deliverable1-example/#introductionproject-description"
  },"147": {
    "doc": "Deliverable 1 Example",
    "title": "Project hardware and software requirements",
    "content": ". | Placeholder for requirement | Placeholder for requirement | Placeholder for requirement | Placeholder for requirement | Placeholder for requirement | Placeholder for requirement | . ",
    "url": "http://localhost:4000/project/deliverable1-example/#project-hardware-and-software-requirements",
    "relUrl": "/project/deliverable1-example/#project-hardware-and-software-requirements"
  },"148": {
    "doc": "Deliverable 1 Example",
    "title": "What is Linux?",
    "content": "Commodo reprehenderit consectetur veniam et velit irure consectetur laboris. Nisi nostrud consequat consectetur laborum enim sit esse aliquip ipsum incididunt. Ut nisi elit nulla Lorem cupidatat non. Ad excepteur ad dolore dolor aliqua veniam ea dolor adipisicing culpa laborum. Ullamco do deserunt enim consequat cupidatat ipsum esse. Reprehenderit pariatur eiusmod officia commodo. Exercitation non sunt consectetur esse do irure. Duis esse do quis non occaecat fugiat sint magna. Fugiat id consequat tempor commodo adipisicing ullamco id est veniam qui esse Lorem reprehenderit incididunt. Minim excepteur consectetur tempor sint et incididunt laboris culpa laboris officia elit ea. Lorem ullamco anim ipsum amet dolore nostrud veniam enim. Magna sit laboris dolore ullamco nisi deserunt minim. Reprehenderit id Lorem eu ut veniam consequat aliquip aliquip exercitation occaecat nostrud non et. Eiusmod reprehenderit enim veniam adipisicing labore nostrud excepteur ullamco. Ea eu ut est dolor voluptate reprehenderit reprehenderit sint enim ullamco ea est et. Consequat sint reprehenderit do pariatur eiusmod. Laboris dolore laborum quis consequat. Short history of linux . | Event 1: Dolor enim elit Lorem consectetur eu fugiat ut voluptate enim dolor aliqua eu velit nostrud. | Event 2: Est adipisicing nisi culpa mollit. | Event 3: Ex ea deserunt est quis excepteur non. | Event 4: Sint labore id aute do proident laborum sint est eu dolor. | Event 5: Minim tempor reprehenderit nostrud quis occaecat eu aliqua cillum magna proident nulla Lorem pariatur non. | Event 6: In id veniam ex sunt cillum do tempor eiusmod cupidatat aliquip mollit. | Event 7: Occaecat veniam culpa nisi excepteur dolore tempor eiusmod enim ipsum. | Event 8: Do eu nulla Lorem magna ut excepteur sint do exercitation. | Event 9: Dolore proident nulla sit dolore aute et quis dolore minim enim nulla excepteur id est. | Event 10: Est ut qui mollit ullamco occaecat anim. | . Linux distribution . Do non cillum voluptate laboris veniam mollit ut. Laboris quis ea tempor adipisicing officia commodo exercitation occaecat. Enim anim quis veniam nisi mollit mollit veniam sunt adipisicing excepteur dolore. Deserunt exercitation aute quis cillum eu irure aliquip consectetur. Id non do aute laborum deserunt sit veniam aliqua. Consequat qui ipsum quis reprehenderit occaecat veniam id. Veniam laboris velit commodo mollit ad adipisicing esse Lorem voluptate nulla aliqua. Nisi magna Lorem nostrud adipisicing mollit cillum enim. Tempor laborum ex laboris nisi sit dolore exercitation. Aliquip minim aliquip excepteur magna et ex aliquip dolore. Esse cupidatat laboris in eiusmod esse. Excepteur aliquip reprehenderit sit velit deserunt nisi fugiat laboris. Amet velit excepteur ad sint duis. Sit qui ipsum sint magna aute do amet aute reprehenderit irure. Slackaware . Fugiat magna ipsum excepteur culpa ea magna est reprehenderit ea minim anim. Ea in in nulla excepteur nisi. Culpa sit id esse eu proident ullamco excepteur. Laboris cillum aute ut exercitation ad proident laboris occaecat. Aliqua cupidatat dolore eu velit minim ex non. Reprehenderit commodo sit et cillum officia nulla anim cillum fugiat.Ex sit et magna consectetur cupidatat officia. Incididunt sunt ipsum sint ea amet aliquip nulla eiusmod non culpa veniam. Et Lorem excepteur deserunt laboris ut dolore nisi reprehenderit. Dolore ipsum cupidatat proident magna aute fugiat eiusmod tempor duis labore mollit labore cupidatat. Ea anim adipisicing nulla officia. Commodo proident culpa cillum in. Debian . Eiusmod sint ipsum eu aliqua exercitation fugiat consequat cillum proident. Elit consequat in aliquip consequat qui veniam aliquip aliqua voluptate incididunt id mollit. Dolor quis sunt cillum qui aute ea ea esse sunt. Anim occaecat consectetur duis commodo ex laboris adipisicing velit anim. Cillum veniam exercitation aliqua in elit. Velit labore proident esse aliquip ullamco tempor culpa. Incididunt labore eiusmod cillum esse ea adipisicing laborum. Non nulla aute in fugiat esse adipisicing culpa. Nisi anim cillum eu qui. Ea ex in nisi irure magna exercitation. In laboris nostrud aute ad velit magna duis qui reprehenderit eiusmod quis. Ea esse ipsum proident tempor consectetur proident. Debian Based Distributions . | Ubuntu Culpa ipsum mollit qui amet anim id. Sunt ut nisi incididunt non Lorem adipisicing veniam et exercitation incididunt veniam deserunt. Amet nostrud sunt reprehenderit amet nulla minim. Enim do adipisicing irure aliqua est aliqua dolor irure. | Kali Linux Id ea sit velit laborum commodo eu duis. Eiusmod consectetur laborum incididunt dolore cillum nisi. Nisi id duis sunt exercitation. Eiusmod ad ex culpa Lorem amet voluptate nisi laborum et do esse laboris reprehenderit. In dolore fugiat ullamco est nostrud mollit ipsum tempor nulla labore nisi. | . Red Hat Enterprise Linux . Lorem pariatur duis duis laborum eiusmod incididunt do. Nisi qui irure velit fugiat eiusmod anim aliquip ut. Ea nisi nisi esse laborum enim esse occaecat. Magna exercitation proident laboris amet in esse aliqua laborum nulla dolore sint. Consectetur nulla et velit do nisi occaecat ut eiusmod excepteur ipsum ex voluptate. Amet ipsum reprehenderit anim consectetur eu excepteur officia dolor laboris. Ex aute officia elit pariatur enim. Quis aute cillum amet ex. Non Lorem exercitation irure nulla Lorem proident voluptate cupidatat ipsum velit. Enim eiusmod irure ullamco ex ullamco nostrud velit occaecat veniam magna reprehenderit et. Non do nisi cupidatat exercitation Lorem et cupidatat est cupidatat ex sit laboris minim deserunt. Veniam tempor et nisi mollit duis dolore nisi ea deserunt. RHEL Based Distributions . | Fedora: Irure mollit velit occaecat consequat. Exercitation fugiat amet do est ex et. Ea ea id consectetur id enim pariatur duis est quis voluptate cupidatat fugiat. Enim velit exercitation officia in sint incididunt. Excepteur quis laborum esse ex. | . ",
    "url": "http://localhost:4000/project/deliverable1-example/#what-is-linux",
    "relUrl": "/project/deliverable1-example/#what-is-linux"
  },"149": {
    "doc": "Deliverable 1 Example",
    "title": "Open Source VS Closed Source",
    "content": "Laboris nostrud eiusmod non irure deserunt mollit adipisicing laboris magna deserunt velit cillum. Eu laboris dolor qui magna anim. Culpa elit fugiat est sit ex minim. Non veniam dolore excepteur labore elit labore nostrud. Pariatur deserunt exercitation mollit irure laboris aliqua ad mollit reprehenderit minim non elit pariatur reprehenderit. Amet id id quis consequat qui in ex ad sunt do mollit. Eu qui ut occaecat incididunt quis do minim dolore consequat. Advantages of Open Source . | Advantage 1 | Advantage 2 | Advantage 3 | . Disadvantages of Open Source . | Disadvantage 1 | Disadvantage 2 | Disadvantage 3 | . Example of Open source Software . | Software | License | logo | . | program name | GPL V2 | | . | program name | GPL V2 | | . | program name | GPL V2 | | . | program name | GPL V2 | | . Closed source . Mollit exercitation laboris esse mollit dolor exercitation enim proident proident officia dolor est ipsum. Velit Lorem sunt incididunt labore ullamco non mollit ad aliqua aute cupidatat. Ut incididunt proident culpa nostrud anim magna nostrud est aliquip aliqua proident reprehenderit. Quis cillum id consectetur enim laboris voluptate proident consectetur pariatur elit. Ad pariatur sunt commodo in ipsum adipisicing mollit. Advantages of Closed Source . | Advantage 1 | Advantage 2 | Advantage 3 | . Disadvantages of Closed Source . | Disadvantage 1 | Disadvantage 2 | Disadvantage 3 | . Example of Closed source Software . | Software | License | logo | . | program name | GPL V2 | | . | program name | GPL V2 | | . | program name | GPL V2 | | . | program name | GPL V2 | | . ",
    "url": "http://localhost:4000/project/deliverable1-example/#open-source-vs-closed-source",
    "relUrl": "/project/deliverable1-example/#open-source-vs-closed-source"
  },"150": {
    "doc": "Deliverable 1 Example",
    "title": "The Free software movement",
    "content": "Velit fugiat ullamco exercitation dolore cupidatat pariatur ullamco proident magna ad. Aute enim ullamco duis labore ullamco cupidatat laboris sunt ullamco qui ea consequat commodo. Nisi laborum amet minim culpa qui eu proident in aliquip commodo officia quis. Enim laboris fugiat enim elit pariatur adipisicing sit ex. Lorem esse ullamco fugiat exercitation officia velit qui do dolore laborum ex. Cupidatat et consequat anim do cupidatat. Et voluptate consequat cupidatat sunt do officia fugiat adipisicing do anim. Pariatur eiusmod esse consectetur dolore. Fugiat amet minim consequat cupidatat deserunt amet pariatur Lorem nulla dolore consectetur deserunt aute. The 4 freedoms . | Freedom 0: Reprehenderit aliqua tempor fugiat dolor dolor adipisicing tempor commodo est minim. | Freedom 1: Ad voluptate exercitation voluptate elit tempor ut minim et. | Freedom 2: Est ea dolor incididunt reprehenderit minim pariatur pariatur. | Freedom 3: Veniam laborum ea cupidatat culpa proident eiusmod excepteur cupidatat. | . The GLP License . Duis id ex ex voluptate anim labore. Eiusmod non exercitation incididunt minim minim consequat irure eu. Velit tempor labore velit elit velit ut minim qui Lorem veniam do Lorem nostrud eu. Proident occaecat laborum reprehenderit mollit anim ad elit est esse. ",
    "url": "http://localhost:4000/project/deliverable1-example/#the-free-software-movement",
    "relUrl": "/project/deliverable1-example/#the-free-software-movement"
  },"151": {
    "doc": "Deliverable 1 Example",
    "title": "Sources",
    "content": ". | Source 1: Cupidatat qui mollit ut nostrud veniam laborum tempor deserunt fugiat. | Source 2: Amet eiusmod nisi id in laborum incididunt ad. | Source 3: Consectetur non deserunt incididunt voluptate non do ad culpa proident elit quis culpa cupidatat. | . ",
    "url": "http://localhost:4000/project/deliverable1-example/#sources",
    "relUrl": "/project/deliverable1-example/#sources"
  },"152": {
    "doc": "Final Project Description",
    "title": "Project 1: Using Ubuntu 22.04 as a desktop operating system",
    "content": "Learning outcome . Upon completing this project, students will be able to explain how to use Ubuntu as an everyday operating system. Deliverables . The student will deliver several documents where they have explained in detail how to perform a series of tasks in Ubuntu. The goal is to write beginner-friendly documentation on how to use Ubuntu. This project demonstrates an understanding of the core aspects of the course. ",
    "url": "http://localhost:4000/project/finaProject/#project-1-using-ubuntu-2204-as-a-desktop-operating-system",
    "relUrl": "/project/finaProject/#project-1-using-ubuntu-2204-as-a-desktop-operating-system"
  },"153": {
    "doc": "Final Project Description",
    "title": "Project 2: Setting a web server with Apache and Ubuntu Server",
    "content": "Learning outcome . Upon completing this project, students will be able to install and configure Apache and Ubuntu server to host a simple website. Deliverables . The student will deliver several documents where they demonstrate understanding of what intels the configuration and administration of a Linux Server Application. This project demonstrates an understanding of the core aspects of the course. ",
    "url": "http://localhost:4000/project/finaProject/#project-2-setting-a-web-server-with-apache-and-ubuntu-server",
    "relUrl": "/project/finaProject/#project-2-setting-a-web-server-with-apache-and-ubuntu-server"
  },"154": {
    "doc": "Final Project Description",
    "title": "Final Project Description",
    "content": "There are 2 projects you can work on: . | Using Ubuntu 22.04 as a desktop operating system | Setting a web server with Apache and Ubuntu Server | . You must pick one of these projects to work on. Both projects are time-consuming. The difference is the technical depth. Project one is less technical as most of the content comes from the course itself. Project 2 is more system administration oriented as the student will work on the server version of Ubuntu. ",
    "url": "http://localhost:4000/project/finaProject/",
    "relUrl": "/project/finaProject/"
  },"155": {
    "doc": "Default Final Project Example Layout",
    "title": "Using Ubuntu 20.04 as an every day computer",
    "content": ". | Using Ubuntu 20.04 as an every day computer . | Introduction | Project Requirements | What is Linux? . | Short History of Linux | Linux Distributions . | Slackware . | Examples of Distributions Based on Slackware | . | Debian . | Examples of Distributions Based on Debian | . | Redhat . | Examples of Distributions Based on Redhat | . | . | Open Source VS Closed Source | . | What is Ubuntu? | Installing Ubuntu In A Virtual Machine . | What is Virtualization? | VirtualBox | Installing Ubuntu In VirtualBox | . | Updating Ubuntu | Install software . | Ubuntu Software Center | Installing Software Via The Command Line | . | Basic Linux Commands | Connecting Ubuntu to the internet | Every day tasks In Ubuntu . | Internet browsing | Reading email | Remote assistance | Office productivity (writing documents, editing spreadsheets and doing presentations) | Streaming music and video | Video games | Video Chatting/calling/conferencing | Texting/Instant messaging | Programing | Educational Applications (dictionaries and that kind of stuff) | . | How to get help with your Ubuntu machine | Sources | . | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#using-ubuntu-2004-as-an-every-day-computer",
    "relUrl": "/project/finalProjectExample/#using-ubuntu-2004-as-an-every-day-computer"
  },"156": {
    "doc": "Default Final Project Example Layout",
    "title": "Introduction",
    "content": "Duis incididunt laboris cillum amet qui ex consequat sunt id. Laboris non in elit quis consequat pariatur veniam quis ad consequat.Cillum aliquip aliqua laboris exercitation mollit adipisicing. Magna quis adipisicing elit duis duis ad. Deserunt minim nisi excepteur mollit sunt id in non occaecat nostrud quis aliquip. Veniam dolore voluptate pariatur reprehenderit in quis proident occaecat adipisicing in magna veniam magna. Et amet commodo fugiat pariatur fugiat et officia dolor aute voluptate velit irure. Ad sunt est commodo sit fugiat. Nisi aliquip qui aute dolore pariatur quis ea. Cillum sunt ut ipsum fugiat ut ipsum dolor. Dolor aliqua cillum occaecat qui adipisicing anim laboris labore aliquip. Officia tempor exercitation reprehenderit officia elit velit tempor in occaecat do. ",
    "url": "http://localhost:4000/project/finalProjectExample/#introduction",
    "relUrl": "/project/finalProjectExample/#introduction"
  },"157": {
    "doc": "Default Final Project Example Layout",
    "title": "Project Requirements",
    "content": ". | Dolore cupidatat et aliqua in id laboris Lorem fugiat excepteur sint id eu amet deserunt. | Exercitation deserunt culpa esse sint sint ipsum exercitation aliqua tempor ad nisi. | Dolore ipsum cupidatat labore anim nostrud non sunt non. | Nostrud tempor elit dolore laborum excepteur id ad in velit dolore. | Eiusmod in mollit esse laboris mollit officia laboris aliqua minim commodo nulla. | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#project-requirements",
    "relUrl": "/project/finalProjectExample/#project-requirements"
  },"158": {
    "doc": "Default Final Project Example Layout",
    "title": "What is Linux?",
    "content": "Tempor ut ut ullamco labore minim esse officia nisi nulla aute. Proident laboris fugiat sint consectetur do sunt incididunt commodo ipsum ex pariatur commodo. Ad laborum adipisicing velit exercitation exercitation nostrud ea. Ea nisi et est laborum sunt est id cillum. Mollit nulla dolore Lorem veniam excepteur Lorem ex sit aute nostrud qui. Qui duis non exercitation consequat aliqua aliqua officia cillum do. Commodo elit dolore enim quis aute. Laboris minim id laboris excepteur. Cillum consectetur consequat minim dolor sunt sunt fugiat dolor. Officia consectetur esse ut est esse elit eu amet sit sit. Short History of Linux . | Aliquip et laboris esse qui laboris enim. | Sunt esse non eu exercitation id cupidatat. | Culpa est enim officia exercitation fugiat amet enim. | Ullamco occaecat pariatur officia ullamco officia. | Consectetur proident in amet sunt qui amet qui enim est anim laboris. | Do dolore sit ullamco deserunt dolore ut magna enim irure qui et sit deserunt. | Excepteur officia excepteur excepteur ad enim eu. | Sint dolore fugiat incididunt ad qui. | Consectetur ut exercitation qui pariatur consequat magna. | Fugiat Lorem eiusmod pariatur eu. | . Linux Distributions . Dolor aliqua esse pariatur excepteur anim veniam do ea Lorem adipisicing adipisicing esse. Et pariatur magna in magna officia voluptate proident. Occaecat ipsum mollit veniam velit ad ea veniam consequat sint sunt. Slackware . Quis veniam sit voluptate anim ea commodo. Ullamco minim duis laborum laborum. Aliquip exercitation aliqua aliquip consectetur ut irure et et exercitation id occaecat ad consequat. Laborum eu voluptate elit consequat ut minim cupidatat ullamco reprehenderit incididunt. Adipisicing laborum sunt consequat laboris cupidatat mollit excepteur commodo. Examples of Distributions Based on Slackware . | Distribution Name | Release Date | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . Debian . Quis veniam sit voluptate anim ea commodo. Ullamco minim duis laborum laborum. Aliquip exercitation aliqua aliquip consectetur ut irure et et exercitation id occaecat ad consequat. Laborum eu voluptate elit consequat ut minim cupidatat ullamco reprehenderit incididunt. Adipisicing laborum sunt consequat laboris cupidatat mollit excepteur commodo. Examples of Distributions Based on Debian . | Distribution Name | Release Date | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . Redhat . Quis veniam sit voluptate anim ea commodo. Ullamco minim duis laborum laborum. Aliquip exercitation aliqua aliquip consectetur ut irure et et exercitation id occaecat ad consequat. Laborum eu voluptate elit consequat ut minim cupidatat ullamco reprehenderit incididunt. Adipisicing laborum sunt consequat laboris cupidatat mollit excepteur commodo. Examples of Distributions Based on Redhat . | Distribution Name | Release Date | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . Open Source VS Closed Source . Et sint culpa fugiat duis esse. Nulla occaecat elit eiusmod ea fugiat magna labore ipsum culpa nostrud dolor. Officia excepteur laboris eu minim sunt officia ut. Non quis laborum consequat cillum anim ut. Labore aute reprehenderit tempor exercitation tempor cillum. Ullamco mollit pariatur fugiat tempor nulla labore qui ad. Nostrud aliqua laborum minim exercitation incididunt amet adipisicing deserunt enim commodo amet. Do magna incididunt in et nostrud ipsum voluptate sint ipsum. In dolor excepteur sit nostrud labore mollit aliqua. Consectetur tempor adipisicing magna laboris laborum. Laboris ut pariatur laborum laboris adipisicing reprehenderit excepteur ad Lorem sit veniam est quis. Eiusmod deserunt adipisicing duis deserunt id. Est irure velit exercitation veniam sint. Non laboris labore veniam eiusmod Lorem incididunt. Velit cupidatat reprehenderit anim ut minim esse in. Eiusmod velit nulla consequat velit dolore commodo aliqua. Dolore dolore est proident aliquip veniam id id amet eiusmod exercitation do ipsum cupidatat elit. ",
    "url": "http://localhost:4000/project/finalProjectExample/#what-is-linux",
    "relUrl": "/project/finalProjectExample/#what-is-linux"
  },"159": {
    "doc": "Default Final Project Example Layout",
    "title": "What is Ubuntu?",
    "content": "Tempor ad Lorem eu pariatur irure pariatur nisi. Enim dolore duis do et ut. Elit proident officia adipisicing ipsum. Anim proident est incididunt dolore cillum nulla sint esse culpa id dolore ex dolor labore. Dolore cillum qui officia aute nostrud id esse sint cupidatat non aliqua sint officia. Amet irure qui velit aliqua in deserunt id. Proident aliqua nostrud sit qui. Sunt veniam irure aliquip ad proident aute. Tempor nostrud in commodo in tempor enim exercitation. Sint esse velit enim culpa ex et. Fugiat reprehenderit culpa anim deserunt amet nisi sunt mollit commodo occaecat. Enim veniam fugiat anim occaecat et quis ad et anim ullamco dolor ipsum magna. Ut irure cupidatat aute non eiusmod commodo veniam aliqua occaecat officia laborum. ",
    "url": "http://localhost:4000/project/finalProjectExample/#what-is-ubuntu",
    "relUrl": "/project/finalProjectExample/#what-is-ubuntu"
  },"160": {
    "doc": "Default Final Project Example Layout",
    "title": "Installing Ubuntu In A Virtual Machine",
    "content": "What is Virtualization? . Dolor quis amet magna nostrud nostrud anim exercitation et culpa anim. Nisi incididunt laborum mollit veniam nulla laboris consectetur commodo sunt cupidatat sint esse et ea. Consectetur sunt ea officia excepteur dolore eu commodo non pariatur aute esse elit et. Reprehenderit et in cillum in in dolor sint dolor est. Ad quis nisi ipsum velit incididunt veniam ipsum sunt tempor elit laborum eu. Qui anim aliquip ipsum do nostrud adipisicing amet. Laboris veniam do velit Lorem irure adipisicing cupidatat. Incididunt cupidatat non laborum ea nostrud nisi aliquip. Lorem aute commodo do laborum ex in commodo fugiat est aute. Aute aliqua cupidatat qui aliquip pariatur. VirtualBox . Eiusmod velit consectetur labore elit eiusmod ipsum adipisicing ad eu. Nostrud consectetur commodo est magna ea cillum do dolore ad. Ullamco quis ad aliquip minim tempor incididunt aliqua culpa est tempor. Enim minim pariatur qui voluptate consequat laboris velit laboris. Nostrud incididunt sint reprehenderit eu tempor do enim fugiat dolor exercitation. Dolor ea elit sint do reprehenderit. Excepteur voluptate quis ullamco fugiat sint aliquip sint sunt voluptate non. Nisi aliqua occaecat elit adipisicing anim mollit reprehenderit sunt. Tempor ex dolore labore occaecat in cillum elit est laboris deserunt dolore laborum. Eiusmod sunt laborum ullamco eu. Installing Ubuntu In VirtualBox . | Step 1: Irure quis laboris ad occaecat sit nulla quis esse anim. | Step 2: Consectetur do in deserunt aliqua minim quis sit veniam. | Step 3: Excepteur ea eiusmod voluptate non occaecat incididunt minim voluptate do. | Step 4: Enim in ut Lorem nostrud id. | Step 5: Non sunt et consequat ut occaecat qui nisi sunt laborum laborum id proident duis. | Step 6: Cupidatat aliqua officia culpa ut cupidatat ex tempor consequat consectetur sit consectetur officia veniam. | Step 7: Cillum ut dolore qui et ipsum eiusmod commodo nulla elit minim et. | Step 8: Dolore nulla minim consequat sint aliquip ex labore. | Step 9: Laborum in eu eu minim incididunt elit. | Step 10: Minim fugiat adipisicing qui nostrud. | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#installing-ubuntu-in-a-virtual-machine",
    "relUrl": "/project/finalProjectExample/#installing-ubuntu-in-a-virtual-machine"
  },"161": {
    "doc": "Default Final Project Example Layout",
    "title": "Updating Ubuntu",
    "content": "Deserunt laboris quis dolor laborum incididunt laborum id incididunt. Exercitation quis sit cillum ad tempor proident excepteur. Ad consequat excepteur adipisicing duis voluptate aliquip fugiat eiusmod amet sunt nostrud. Irure labore nulla laboris dolor irure commodo nulla veniam sit dolor laboris ipsum laboris nulla. Do ea enim esse duis ullamco veniam sunt culpa duis dolore ex aliqua esse in. Excepteur laboris nisi est incididunt consectetur voluptate ullamco ex enim ut aliquip sit labore. Fugiat minim veniam veniam amet duis sunt velit incididunt irure culpa consequat fugiat dolore. Id amet aute labore incididunt. Dolor irure et fugiat consequat mollit cillum sint enim reprehenderit amet veniam cillum nulla. Culpa minim excepteur voluptate cupidatat veniam eu ea et. ",
    "url": "http://localhost:4000/project/finalProjectExample/#updating-ubuntu",
    "relUrl": "/project/finalProjectExample/#updating-ubuntu"
  },"162": {
    "doc": "Default Final Project Example Layout",
    "title": "Install software",
    "content": "Ubuntu Software Center . Consequat occaecat dolor id magna ad irure adipisicing incididunt qui mollit dolor qui esse. Laborum officia laborum in sit sunt nulla esse pariatur dolore. In velit ut voluptate duis. Minim est occaecat amet quis adipisicing ullamco mollit qui. Aliquip Lorem adipisicing eu ipsum voluptate officia exercitation ex. Ut eiusmod velit incididunt sint. Eiusmod fugiat aliquip id excepteur dolor dolor id quis dolore dolore id ullamco veniam id. Laboris sint labore et deserunt. Ex occaecat Lorem excepteur deserunt elit Lorem in veniam consectetur consequat eu ex ut. Duis qui nulla ex consectetur voluptate. Officia enim cillum nisi aute eiusmod Lorem. Installing Software Via The Command Line . Et minim Lorem sunt deserunt et adipisicing consectetur cillum id amet officia. Officia laboris ullamco nisi qui id. Deserunt duis eiusmod est consequat non ipsum esse. Ex labore ex labore proident voluptate amet dolor adipisicing velit ullamco. Aute in do et cillum et veniam consectetur incididunt sit fugiat ea. Ex commodo duis ipsum excepteur aute velit irure nulla. Veniam enim minim proident nostrud non voluptate voluptate nulla veniam mollit nostrud. Occaecat sunt laboris mollit ut consectetur eiusmod aliquip labore. Amet ut aliqua ad reprehenderit. Ex laborum sit laborum irure sit. Eiusmod eu exercitation non et sunt veniam quis elit sit quis aute aute. Duis sunt irure excepteur deserunt amet exercitation voluptate aute sint. Cupidatat eiusmod cupidatat incididunt adipisicing. ",
    "url": "http://localhost:4000/project/finalProjectExample/#install-software",
    "relUrl": "/project/finalProjectExample/#install-software"
  },"163": {
    "doc": "Default Final Project Example Layout",
    "title": "Basic Linux Commands",
    "content": ". | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#basic-linux-commands",
    "relUrl": "/project/finalProjectExample/#basic-linux-commands"
  },"164": {
    "doc": "Default Final Project Example Layout",
    "title": "Connecting Ubuntu to the internet",
    "content": "Quis eu nulla pariatur cupidatat aliqua dolor exercitation ullamco aute quis adipisicing do deserunt. Ea eu nisi est officia ex. Sit sunt tempor adipisicing irure consequat laborum cupidatat et esse occaecat. Ex non ullamco in adipisicing excepteur ipsum. Laborum proident cupidatat mollit nulla cillum magna esse quis deserunt culpa excepteur aute. Aliquip sit eiusmod pariatur ut officia ea nostrud. Velit anim ipsum excepteur et elit non sit in consectetur exercitation ad. Id ad incididunt velit consequat in nostrud laboris sit irure veniam. Reprehenderit ullamco et commodo sit laborum Lorem nisi laboris commodo eiusmod id exercitation. Ipsum do nisi est nulla ea. Commodo eu fugiat minim dolor quis ullamco culpa cupidatat ullamco nostrud nisi qui. ",
    "url": "http://localhost:4000/project/finalProjectExample/#connecting-ubuntu-to-the-internet",
    "relUrl": "/project/finalProjectExample/#connecting-ubuntu-to-the-internet"
  },"165": {
    "doc": "Default Final Project Example Layout",
    "title": "Every day tasks In Ubuntu",
    "content": "Internet browsing . Et irure duis incididunt laborum exercitation nulla. Laborum consequat proident anim deserunt. Ea sint dolore duis eu magna consequat exercitation velit irure veniam aute elit. Eiusmod elit enim qui ea aliqua amet esse aliquip pariatur. Adipisicing in voluptate labore voluptate ad magna labore adipisicing quis occaecat duis fugiat culpa duis. Adipisicing nostrud et do sunt. Reading email . Fugiat ut eu irure id irure sunt nostrud cupidatat ea laborum aliquip aute exercitation. Aute exercitation aliqua mollit nisi cupidatat. Duis exercitation dolor quis ut anim dolore minim. Et nostrud veniam eiusmod esse ipsum quis consectetur nulla irure sunt pariatur non magna ipsum. Tempor adipisicing tempor velit reprehenderit veniam ea id ipsum excepteur pariatur sunt. Sit ipsum velit consectetur qui id occaecat dolore sint eiusmod sunt aliqua consequat eiusmod. Remote assistance . Cupidatat commodo id in tempor esse minim sunt magna occaecat. Eiusmod mollit exercitation officia labore irure occaecat id culpa irure. Quis esse culpa et adipisicing nisi culpa tempor. In cillum labore consequat cupidatat sint id do laborum qui qui commodo incididunt consequat. Office productivity (writing documents, editing spreadsheets and doing presentations) . Tempor officia irure irure pariatur. Amet labore excepteur culpa aliqua ullamco irure sint laboris culpa velit mollit deserunt laborum. Reprehenderit ex esse consectetur reprehenderit qui. Dolore sunt in esse consectetur ipsum sunt sunt. Streaming music and video . Irure excepteur do qui ipsum duis ex. Eu anim mollit ex voluptate qui ullamco ipsum eu irure adipisicing ipsum reprehenderit et incididunt. Anim nulla qui laborum qui voluptate ad officia aute cillum ullamco incididunt enim reprehenderit. Reprehenderit veniam ad velit cillum enim nulla velit Lorem deserunt laboris. Video games . Minim irure nostrud non sint anim enim. Esse veniam irure enim aliqua velit est tempor laborum aliqua aliquip amet velit dolor voluptate. Cupidatat ullamco fugiat eiusmod veniam consequat enim Lorem tempor Lorem dolore cupidatat. Lorem sint deserunt aute aliqua adipisicing officia tempor veniam occaecat. Video Chatting/calling/conferencing . Aliqua fugiat aliquip officia duis voluptate. Do commodo laboris sunt cupidatat occaecat elit ex ipsum deserunt. Esse nulla officia excepteur quis mollit cupidatat tempor incididunt occaecat consequat duis aliqua. Adipisicing occaecat ex ea dolor amet culpa laborum quis mollit occaecat ipsum. Fugiat duis labore incididunt magna velit sint irure magna magna deserunt et minim exercitation. Commodo anim id officia ea et eu do id esse sit. Texting/Instant messaging . Eu qui velit deserunt eu commodo est nulla exercitation est non cillum. Laborum Lorem incididunt eiusmod ut aliqua. Cupidatat laborum commodo anim magna sunt in. Programing . Nulla ex non incididunt consectetur excepteur dolore reprehenderit nisi ea tempor veniam et tempor velit. Magna quis eiusmod amet minim ex irure cupidatat occaecat dolor. Mollit ex do est proident dolor incididunt deserunt consectetur. Occaecat tempor duis fugiat labore aliqua. Aliqua ad commodo laborum sunt dolor ipsum veniam minim ex ex cillum. Sunt quis officia et id Lorem dolore ea tempor occaecat sit mollit velit adipisicing. Nostrud exercitation nisi voluptate adipisicing dolor ut incididunt deserunt dolor officia id. Educational Applications (dictionaries and that kind of stuff) . Anim nostrud aliquip quis irure. Excepteur Lorem exercitation ex incididunt laboris eu ut. Dolore occaecat consectetur Lorem proident quis eiusmod amet amet non reprehenderit ex. Cupidatat sunt eu et irure occaecat occaecat incididunt do pariatur. Esse duis eiusmod mollit in excepteur. Nostrud magna incididunt labore tempor voluptate ad. ",
    "url": "http://localhost:4000/project/finalProjectExample/#every-day-tasks-in-ubuntu",
    "relUrl": "/project/finalProjectExample/#every-day-tasks-in-ubuntu"
  },"166": {
    "doc": "Default Final Project Example Layout",
    "title": "How to get help with your Ubuntu machine",
    "content": "Veniam est mollit sit cillum. Id dolor enim pariatur eiusmod elit et in pariatur ea est aliquip ad fugiat. Velit ullamco magna esse sint elit id. Nulla do do laborum excepteur excepteur minim aliqua ad aliquip nisi consequat exercitation. Et incididunt commodo ipsum esse proident laboris consequat culpa fugiat. Aliqua sunt qui cupidatat est elit ut occaecat. Ex sunt labore nisi ullamco nisi nisi et elit aute ullamco reprehenderit adipisicing cupidatat. Nostrud voluptate id ad deserunt quis exercitation sint aliqua deserunt dolor ipsum sunt. Duis dolore nostrud occaecat id labore velit. Et labore commodo reprehenderit dolore laborum fugiat id aliqua amet. Nisi qui reprehenderit Lorem ut fugiat ullamco. Exercitation sint excepteur veniam duis adipisicing irure laboris eu. Labore anim laboris sit voluptate do sunt aute qui cupidatat. Consectetur laboris culpa commodo consequat deserunt dolor laboris laboris quis. Et enim aute commodo irure excepteur exercitation anim occaecat. ",
    "url": "http://localhost:4000/project/finalProjectExample/#how-to-get-help-with-your-ubuntu-machine",
    "relUrl": "/project/finalProjectExample/#how-to-get-help-with-your-ubuntu-machine"
  },"167": {
    "doc": "Default Final Project Example Layout",
    "title": "Sources",
    "content": ". | Mollit dolor adipisicing tempor ea amet aliquip non nostrud incididunt voluptate proident aliquip. | Veniam ut nostrud aliqua reprehenderit incididunt deserunt mollit id laboris. | Nulla esse sint tempor sint nulla commodo duis sit fugiat nisi minim amet. | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#sources",
    "relUrl": "/project/finalProjectExample/#sources"
  },"168": {
    "doc": "Default Final Project Example Layout",
    "title": "Default Final Project Example Layout",
    "content": " ",
    "url": "http://localhost:4000/project/finalProjectExample/",
    "relUrl": "/project/finalProjectExample/"
  },"169": {
    "doc": "Final Project Example 2",
    "title": "Build a LAMP Stack",
    "content": ". ",
    "url": "http://localhost:4000/project/finalProjectExample2/#build-a-lamp-stack",
    "relUrl": "/project/finalProjectExample2/#build-a-lamp-stack"
  },"170": {
    "doc": "Final Project Example 2",
    "title": "Table of Contents",
    "content": ". | Build a LAMP Stack . | Table of Contents | Project Description | Requirements | Setting Up The Server Environment . | Virtual Machine Specifications | Configuring the server’s operating system . | Setting up UFW | Setting up SSH | . | . | Install The Software . | Apache . | Useful systemctl commands | . | MySQL | PHP | PHPMyAdmin | . | Project Code | Difficulties Encountered | Work Cited | . | . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#table-of-contents",
    "relUrl": "/project/finalProjectExample2/#table-of-contents"
  },"171": {
    "doc": "Final Project Example 2",
    "title": "Project Description",
    "content": "In this project, I am creating a Web application hosted on a Linux server for logging my blood sugar (glucose) levels. The application must meet the following requirements: . | Must provide an input box for entering an integer value for the current glucose level. | Every entry must be saved to a database including the time stamp | Must provide a way to display a table of all the entries arranged by date and time | . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#project-description",
    "relUrl": "/project/finalProjectExample2/#project-description"
  },"172": {
    "doc": "Final Project Example 2",
    "title": "Requirements",
    "content": "The project requires the use of a LAMP Stack (Linux, Apache, Mysql, and PHP). I am using the following specifications: . | Linux Distribution: Ubuntu Server 20.04 | Web Server: Apache | DBMS: MariaDB (from the standard software repositories) | Php version: PHP 7 | . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#requirements",
    "relUrl": "/project/finalProjectExample2/#requirements"
  },"173": {
    "doc": "Final Project Example 2",
    "title": "Setting Up The Server Environment",
    "content": "Virtual Machine Specifications . The virtual machine is built on HyperV in a Windows 10 Pro64 bit host. The host hardware specifications are: . The Virtual machine specifications are: . | RAM: 2GB | CPU: 2 cores | Network adapter: 1 NIC in Bridge configuration to make development easy | . Configuring the server’s operating system . After installing Ubuntu Server in the virtual machine, there are some configurations that need to be done before installing a web server and a database. It is essential to set up a firewall so that only connections to certain services are allowed. Additionally, SSH needs to be set up so that a remote connection to the server can be performed. For this project, I have enabled ssh to use keys for authentication instead of the default username and password functionality. Setting up UFW . Ubuntu uses ufw (uncomplicated firewall) as the default firewall configuration tool for iptables. Ufw can block services by port, network interface, and IP addresses. The following commands are used to set it up: . | To check the firewall status: sudo ufw status | To list all applications that have register their profiles with UFW: sudo ufw app list | To enable/disable/reload the firewall sudo ufw enable|disable|reload | To allow SSH connections sudo ufw allow openssh | To block an IP address sudo ufw deny from 10.10.2.5 | To allow/deny connections from a given port ``sudo ufw allow|deny 21` | To allow/deny incoming HTTP requests sudo ufw allow|deny http | To allow/deny all incoming traffic from HTTP or https sudo ufw allow|deny proto tcp from any to any port 80,443 | . For this project, It is necessary to make sure that the firewall is working and that at least for now ssh connections are permitted. To accomplish this use the following 1 liner: ` sudo ufw allow openssh; sudo ufw enable; sudo ufw status` . Setting up SSH . Before setting up SSH keys, it is important to make sure that a connection with only the username and password can be made. In Windows, you can use Putty which is a free SSH and Telnet client, or If your Windows 10 host computer is updated to the latest version, you should be able to use OpenSSH in Powershell or the Windows terminal. To connect to the virtual machine, all is needed is the IP address of the machine and making sure that the server has a network interface card in bridge mode. In Hyper-V, you need to create a virtual switch and then assign the virtual switch to the NIC of the VM. In the virtual switch management dialog box, the new switch needs to be set to External Network, and Allow management of the OS to share the network adapter needs to be checked. To obtain the IP address of the server using any of the following commands: . | The hostname command will display all the IP addresses assigned to the host. hostname -I | The ifconfig and ip commands are used for configuring network interfaces. Ifconfig is deprecated as it is part of the net-tools package. Ip is the command that replaces the ifconfig command. If the examples below do not work for you, use the ifconfig command or ip command without the pipes, and examine the output carefully. | ifconfig | grep “inet” | head -1 | ip addr | grep “inet” | head - 3 | tail -1 | . | . To connect to the Ubuntu Server, in your Windows Terminal/Powershell type: . ssh your-username-in-the-server@ip-of-your-server . You will be asked to provide the user’s password and after successfully entering it, you will be connected to the server from your host computer. Because connecting to the server will be a repetitive task, I have set up SSH keys so that I do not have to type a password to connect. To create an SSH key, type the following command on the machine that will be connecting to the server: . ssh-keygen.exe . The command will generate an ssh-key and it will store it in a dedicated directory. Once the key is generated, we need to copy it to the Ubuntu Server. Use this command to achieve this task: . scp C:\\Users\\[username]\\.ssh\\id_rsa.pub your-username-in-the-server@ip-of-your-server:/home/username . Once you have copied the SSH key, connect to the server one more time so that you can place the key in its appropriate directory. Use the following commands: . | ssh your-username-in-the-server@ip-of-your-server | cat id_rsa.pub &gt;&gt; .ssh/authorized_keys | . Now you should be able to connect to the server without the need of a password. ",
    "url": "http://localhost:4000/project/finalProjectExample2/#setting-up-the-server-environment",
    "relUrl": "/project/finalProjectExample2/#setting-up-the-server-environment"
  },"174": {
    "doc": "Final Project Example 2",
    "title": "Install The Software",
    "content": "Apache . Apache HTTP Server is an Open Source and Free Software web server software available in Linux, Windows, macOS, Solaris, and BSD. To install Apache on Ubuntu use the following command: . sudo apt install apache2 . Once Apache has been installed, it needs to be enabled and restarted. Enabling a service in a Linux System means that such service/daemon will run on startup. To enable and restart Apache use the following command: . sudo systemctl enable apache2 &amp;&amp; sudo systemctl restart apache2 . In the command above the Systemctl program is used for managing Systemd which is Ubuntu’s init system and service manager. After enabling and restarting the Apache webserver service, it is required to allow HTTP/HTTPS traffic to the webserver. Use the following command to allow these connections through the firewall: . sudo ufw allow in \"Apache\" . To check if your Apache Web server is running, open a web browser and type your server’s IP address in the URL bar. If your server is running, you should see the page below. If your server is not running, you can use the Systemctl useful commands and Apache log files to find the root cause of the problem. Keep in mind that the server must be in the same network as the client machine from where you attempted to visit the server’s IP. Useful systemctl commands . | To view active Systemd jobs: systemctl list-jobs | To view the default run level: systemctl get-default | To stop a running service: systemctl stop service-name-here | To start a service: systemctl start service-name-here | To restart a running service: systemctl restart service-name-here | To reload any service config’s file: systemctl reload service-name-here | To see the status of a service: systemctl status service-name-here | To enable a service on startup: systemctl enable service-name-here | To prevent a service from stating up at boot: systemctl disable service-name-here | . Apache saves logs files in the directory /var/log/apache2. The apache2 directory contains 2 files: access.log and error.log. The access.log file stores information about requests coming into the web server. The error.log file stores information about errors the web server encountered when processing requests. To review these log files, use the commands cat, tac, head, tail, and grep. You can find examples of these commands in my website. Another useful tool when troubleshooting issues with logs is the program Journalctl. Journalctl is used for querying and displaying logs from journald, systemd’s logging service. Without any argument, journalctl returns the full contents of the journal, starting with the oldest entry collected. Journalctl is efficient in outputting logs in multiple formats, for example, the following command will show Apache logs formatted in JSON: journalctl -u apache2.service -r -o json-pretty . MySQL . To install MySQL in Ubuntu use the following command: sudo apt install mysql-server. After installing mysql-server, it is vital to run mysql_secure_installation to remove some insecure default settings and lock down access to the database. sudo mysql_secure_installation . PHP . PHP is an open-source general-purpose scripting language for the web. PHP was invented by Rasmus Lerdorf in 1994. In PHP, different from JavaScript, the code is executed on the web server and then the client receives the result of the execution in HTML. To install PHP in Ubuntu Server run the following command: . sudo apt install php libapache2-mod-php php-mysql . To test if PHP has been installed and it is running correctly, we can build a simple PHP page that will show the information about your PHP installation. First, make a backup of your index.html page then create a file called index.php and in it, type &lt;?php phpinfo(); ?&gt;. PHPMyAdmin . Since PHP is a server-side programming language, it is useful when dealing with databases. However, managing databases via the command line can easily become a cumbersome chore. PHPMyAdmin is a web-based client that allows developers to manage databases with a simple to use interface. You can use phpMyAdmin to perform most administration tasks, such as creating a database, running queries, and adding user accounts. Before installing PHPMyAdmin, log in to your database, and check the password validation policy. The PHPMyAdmin installer will ask you for a password that matches the validation rules. Here is an example of how it looks: . To install PHPMyAdmin use the following command: sudo apt install phpmyadmin php-mbstring . The PHPMyAdmin installer will ask you for several questions. Each prompt has a description of what is being asked therefore it is pivotal to read everything. Here are the questions and the answers I used: . | Web server to reconfigure automatically: Apache (make sure to hit the space bar to select) | Configure database for phpmyadmin with dbconfig-common? Yes | Connection method for MySQL database of phpmyadmin: Unix Socket | Authentication plugin for MySQL database: Default | MySQL database name for phpmyadmin: it640project | MySQL username for phpmyadmin: robert@localhost | Password: Project640! | . Note: if you encounter the error: 1819 (HY000) do not disable the validate_password plugin, instead, ignore the error and after PHPMyAdmin finishes installing, log into the database and run the create user command with a password that meets the policy. Here is an example:CREATE USER 'robert'@'localhost' IDENTIFIED BY 'Project640!'; FLUSH PRIVILEGES; . To test PHPMyAdmin, go to your web browser and type the username and password you created: . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#install-the-software",
    "relUrl": "/project/finalProjectExample2/#install-the-software"
  },"175": {
    "doc": "Final Project Example 2",
    "title": "Project Code",
    "content": "Once the system is configured and all the software is installed. I proceeded to write the base of the code. The first part is to write a basic HTML form where the user can enter the Glucose number and select the time and day. The HTML is then connected to a PHP script that sends the imputed data into the database. Once the data is in the database, the script runs another query to show all the values that have been entered so far. You can download a copy of the source code here: https://robertalberto.com/it640.tar . . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#project-code",
    "relUrl": "/project/finalProjectExample2/#project-code"
  },"176": {
    "doc": "Final Project Example 2",
    "title": "Difficulties Encountered",
    "content": "MySQL Validate Password Plugin Issue: During the installation of PHPMyAdmin, I came across a problem with the password validation plugin used by MySQL. Regardless of the password chosen, the phpmyadmin installer kept rejecting it. Online I found several solutions that involved uninstalling the plugin, changing the password policy, and creating another user that matches the policy exactly. None of these were viable solutions in my case. I solved this problem by first purging the PHPMyAdmin packages and dependencies, then I logged in to MySQL and created a user. In the installer, I chose to not ignore the problem and then log in to MySQL again and change the password of the newly created user. This user was then given full access to the database and I was able to continue with the project. PHP Error 500 issue Server could not process request While creating the PHP script I kept making syntax mistakes that were not obvious at the time. For instance, misspelling mysqli_connect, using double quotes in the _POST array and forgetting the $ at the beginning of the variable declaration. I decided to enable logging so that I can be aware of when I make these types of mistakes. This helped me out tremendously and I was able to get back on track quickly. ",
    "url": "http://localhost:4000/project/finalProjectExample2/#difficulties-encountered",
    "relUrl": "/project/finalProjectExample2/#difficulties-encountered"
  },"177": {
    "doc": "Final Project Example 2",
    "title": "Work Cited",
    "content": "DigitalOcean. “UFW Essentials: Common Firewall Rules and Commands.” DigitalOcean, DigitalOcean, 18 Sept. 2019, www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands. “Log Files.” Log Files - Apache HTTP Server Version 2.4, httpd.apache.org/docs/2.4/logs.html . “Systemd Cheat Sheet.” Linux Training Academy, www.linuxtrainingacademy.com/systemd-cheat-sheet/. | “Using Journalctl - The Ultimate Guide To Logging.” Log Analysis | Log Monitoring by Loggly, 13 Aug. 2019, www.loggly.com/ultimate-guide/using-journalctl/. | . “What Is PHP?” Php, www.php.net/manual/en/intro-whatis.php. ",
    "url": "http://localhost:4000/project/finalProjectExample2/#work-cited",
    "relUrl": "/project/finalProjectExample2/#work-cited"
  },"178": {
    "doc": "Final Project Example 2",
    "title": "Final Project Example 2",
    "content": " ",
    "url": "http://localhost:4000/project/finalProjectExample2/",
    "relUrl": "/project/finalProjectExample2/"
  }
}

{"0": {
    "doc": "Welcome to the course",
    "title": "Welcome to CIS-106-Linux Fundamentals",
    "content": "Here you will find all the information for the course. ",
    "url": "http://localhost:4000/#welcome-to-cis-106-linux-fundamentals",
    "relUrl": "/#welcome-to-cis-106-linux-fundamentals"
  },"1": {
    "doc": "Welcome to the course",
    "title": "COURSE LEARNING OUTCOMES",
    "content": ". | Demonstrate fluency in Linux terminology. | Install Linux and identify features of various distributions. | Manage files in the Linux environment. | Administer user accounts and groups efficiently. | Use Linux Utilities to manage data. | Install software and third-party utilities. | Managing Resources in the Linux networking environment. | Understanding of virtualization with Virtualbox | Understanding of Markdown and proper documentation techniques | . ",
    "url": "http://localhost:4000/#course-learning-outcomes",
    "relUrl": "/#course-learning-outcomes"
  },"2": {
    "doc": "Welcome to the course",
    "title": "Requirements",
    "content": ". | Access to a computer where Linux can be installed. The following are options: . | A virtual machine (Preferred) | A laptop/Desktop computer that you can wipe. | A Raspberry Pi 4 or other capable single board computer | . | Access to Blackboard | A Github account | A Text editor. We will be using VS Code but you can use whatever you want | 2 Hours of study time | Capable to adjust to fast paced course | For virtualization . | A decent PC that meets or exceeds these requirements: . | Quad-Core Processor or modern Dual-Core Processor 2.5 Ghz | 8 Gb of RAM | Windows 10/11 or MacOS | 100 Gb of free space | . | . | Knowledge of the following . | Basic components of a personal computer . | Basic usage of a persona computer | Internet browsing | Reading emails | Chat Applications | Office Productivity Suites (MS Office, Google Docs, etc) | Install/Remove Software | Difference between web browser, the internet, and a search engine Not knowing this things does not mean you will fail the course. It means that you will have to spend extra time studying for the course. | . | . | . ",
    "url": "http://localhost:4000/#requirements",
    "relUrl": "/#requirements"
  },"3": {
    "doc": "Welcome to the course",
    "title": "Advice",
    "content": "If you find that the content of the course is too much or that you have too many gaps in your knowledge, I suggest that you take this course after CIS 180 and CIS 116. ",
    "url": "http://localhost:4000/#advice",
    "relUrl": "/#advice"
  },"4": {
    "doc": "Welcome to the course",
    "title": "Resources",
    "content": ". | Snapshots: . | After installation and update | After installation of basic software: | . | Virtual Machine Specs: . | Hard drive: 50GB | RAM: 2GB | CPU: 2 cores | Video Graphics: 128MB | Audio controller: N/A | Network Card: 1 NAT Card | . | Books . | The Linux Command Line By William Shotts | Raspberry Pi Beginner’s Guide 4th Edition | Free Linux Magazine with good command line reference | Free book. wont be used but it is good to have | Raspberry Models Comparison | . | Github Markdown . | Github Markdown Syntax Cheat sheet | Github Markdown syntax official documentation | Git Cheat sheet | . | . ",
    "url": "http://localhost:4000/#resources",
    "relUrl": "/#resources"
  },"5": {
    "doc": "Welcome to the course",
    "title": "Welcome to the course",
    "content": ". ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"6": {
    "doc": "Weekly Lecture Schedule",
    "title": "Weekly Lecture Schedule",
    "content": "| Week # | Start Date | End Date | Topic | . | 00 | 01/19 | 01/25 | Lecture 00 - Introduction To CIS 106 | . | 01 | 01/26 | 02/01 | Lecture 01 - Introduction to the Linux Operating System | . | 02 | 02/02 | 02/08 | Lecture 02 - Virtualization and The Raspberry Pi | . | 03 | 02/09 | 02/15 | Lecture 03 - Installing Linux and the GUI | . | 04 | 02/16 | 03/22 | Lecture 04 - Shell and The Filesystem | . | 05 | 02/23 | 03/01 | Lecture 05 - Managing Files and Directories | . | 06 | 03/02 | 03/08 | Lecture 06 - Managing Text | . | 07 | 03/09 | 03/15 | Lecture 07 - Command Line Text Editors | . | 08 | 03/16 | 03/22 | Lecture 08 - Managing Software via The CLI (Spring Break Week Learn at home) | . | 09 | 03/23 | 03/29 | Lecture 09 - Managing Data and File Permissions | . | 10 | 03/30 | 04/05 | Lecture 10 - Managing Users and Groups | . | 11 | 04/06 | 04/02 | Lecture 11 - Managing Processes | . | 12 | 04/13 | 04/19 | Lecture 12 - Scheduling Tasks | . | 13 | 04/20 | 04/26 | Lecture 13 - Shell Scripting Part 1 | . | 14 | 04/27 | 05/03 | Lecture 14 - Shell Scripting Part 2 | . | 15 | 05/04 | 05/10 | Lecture 15 - Final Exam | . ",
    "url": "http://localhost:4000/docs/WeekLectureSchedule/",
    "relUrl": "/docs/WeekLectureSchedule/"
  },"7": {
    "doc": "Final Project Description",
    "title": "Project ideas divided by areas of interests",
    "content": "The level of difficulty is indicated by: 🌟 . | 🌟 = Easy | 🌟🌟 = Moderate | 🌟🌟🌟 = Difficult | . ",
    "url": "http://localhost:4000/docs/finaProject/#project-ideas-divided-by-areas-of-interests",
    "relUrl": "/docs/finaProject/#project-ideas-divided-by-areas-of-interests"
  },"8": {
    "doc": "Final Project Description",
    "title": "Default Project",
    "content": "This project is easy by design and it is meant to cover all or most of the topics that we cover during our lectures. Pick this project if you have no idea what to do. This project can be completed in a Raspberry Pi or Virtual Machine . | Topic: Using Ubuntu 20.04 as an every day computer | Description: Your goal is to prepare and document a computer setup for every day using Ubuntu (or an Ubuntu Flavor) as the main operating system. Your document must include the following: . | Detailed step by step instructions on how to: . | Install Ubuntu 20.04 | Update Ubuntu and best practices | Install software via the command line and graphically using the software center | Basic commands covered in the class | How to connect your computer to the internet | How to perform the following every day tasks including 2 alternative applications and one that you recommend. | Internet browsing | Reading email | Remote assistance | Office productivity (writing documents, editing spreadsheets and doing presentations) | Streaming music and video | Video games | Video Chatting/calling/conferencing | Texting/Instant messaging | Programing | Educational Applications (dictionaries and that kind of stuff) | . | How to get help with your Ubuntu machine | . | . | . For every application provide a basic description, how to install and remove it and how to do something simple in it. Your final document should look like this . ",
    "url": "http://localhost:4000/docs/finaProject/#default-project",
    "relUrl": "/docs/finaProject/#default-project"
  },"9": {
    "doc": "Final Project Description",
    "title": "Other Project Ideas",
    "content": "If you choose to do any of the projects listed here, make an appointment with me to discuss it. I will give you an outline that you can follow. ",
    "url": "http://localhost:4000/docs/finaProject/#other-project-ideas",
    "relUrl": "/docs/finaProject/#other-project-ideas"
  },"10": {
    "doc": "Final Project Description",
    "title": "Web Development",
    "content": ". | Build a LAMP Stack in Ubuntu Server 🌟🌟 | Host a simple website in Ubuntu Server using Apache/NGINX 🌟 | . ",
    "url": "http://localhost:4000/docs/finaProject/#web-development",
    "relUrl": "/docs/finaProject/#web-development"
  },"11": {
    "doc": "Final Project Description",
    "title": "Networking",
    "content": "Virtual Machine Projects . | Build a file server with Ubuntu Server or Debian 🌟🌟 | Build a Dropbox alternative with NextCloud 🌟🌟 | Build a media center that plays files from a file server or media server 🌟🌟 | . Raspberry Pi Projects . | Build a DNS/DHCP server and ads blocker with the Pi-hole 🌟🌟 | Build a wireless access Point🌟🌟 | Build a Tor Router 🌟🌟🌟 | Build a print server 🌟 | Build a camera server🌟🌟 | Build a media center that plays files from a file server or media server 🌟🌟 | . Ethical Hacking, Computer Forensics, Tinkerers . | Build a portable Hacking Machine with a Raspberry Pi and Kali Linux 🌟 | Recover Data from an erased disk with Kali Linux and a Raspberry Pi 🌟 | Build a small lab to simulate packet sniffing with Kali Linux and Wireshark 🌟🌟🌟 | Build a Rogue access point with Kali Linux and a Raspberry Pi 🌟🌟🌟 | Build a portable Raspberry Pi mini-computer with a battery pack and a small display 🌟🌟🌟 | . ",
    "url": "http://localhost:4000/docs/finaProject/#networking",
    "relUrl": "/docs/finaProject/#networking"
  },"12": {
    "doc": "Final Project Description",
    "title": "Final Project Description",
    "content": " ",
    "url": "http://localhost:4000/docs/finaProject/",
    "relUrl": "/docs/finaProject/"
  },"13": {
    "doc": "Weekly Homework Description",
    "title": "Weekly Homework Description",
    "content": "## Weekly Homework # This is a list of task that you will be required to complete every week. - Complete the designated lab **(40 Minutes)** - Each lab has a video walkthrough from beginning to end available in the course Youtube Channel. - Each lab is a hands on activity consisting of 5 questions. - I advise you to complete the labs in one sitting to avoid losing any data. - Labs are the corner stone of this course and as a result are required to be completed in the designated order. You cannot do the next week's lab if you do not complete the previous week lab as they build on each other.I - Complete the assigned discussion board **(30 Minutes)** - Every week you will have either a video, podcast episode, or article to read. - After you complete the assigned material, you are required to answer 1 question. - To receive full grade, you must create a post with your answer and reply to someone else's post as well. - Complete Weekly Report **(30 minutes)** - A document written in markdown containing the following - A summary of the lecture's presentation - Screenshots when needed - Example of the commands/technoligies covered during the lecture - The first weekly report has a video. The video exist to show you what I am expecting from you and a clear example of how to do the work. This prevents you from losing points. - Only Markdown format and a pdf converted from the markdown file is accepted. **No Word Documents!** - Complete Final Project assignment **(30 Minutes)** - You are required to work on your final project on a week by week basis. This prevents procr🌟astination. - You will submit your project in a Markdown file as well. - You will have specific questions to complete that will lead you to a complete project by the end of the semester. The total study time is 2.16 hours. However, this is on average. Chances are that you may have to spend more time working on each task depending on how good you are with computers. Do not leave this for the last minute. I will not grant you any extra time without a good reason and procrastination is not a good one. If leave the assignment for the last hour of the week and your computer breaks, that is your problem, I will not grant you any extra time. I will not be taking late assignments. If you have not submitted your work, you get a zero. ",
    "url": "http://localhost:4000/docs/weekly-homework-description/",
    "relUrl": "/docs/weekly-homework-description/"
  },"14": {
    "doc": "Module 1",
    "title": "Lecture 0: Introduction to the course.",
    "content": ". | Lecture 0 Introduction to the course | How am I going to succeed in this class? | What is Git and Github? . | We will not be using Git/Github for code but for our markdown files. | . | Markdown Presentation | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-0-introduction-to-the-course",
    "relUrl": "/modules/module1/#lecture-0-introduction-to-the-course"
  },"15": {
    "doc": "Module 1",
    "title": "Lecture 1: Introduction to Linux",
    "content": ". | Introduction to Linux | What is Ubuntu? | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-1-introduction-to-linux",
    "relUrl": "/modules/module1/#lecture-1-introduction-to-linux"
  },"16": {
    "doc": "Module 1",
    "title": "Lecture 2: Installing Ubuntu, Virtualization, and the Raspberry PI",
    "content": ". | The basics of Virtualization . | Video here | . | Using VirtualBox . | Video here | . | Installing Ubuntu 20.04 in virtualbox . | Video here | . | What is a Raspberry pi? | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-2-installing-ubuntu-virtualization-and-the-raspberry-pi",
    "relUrl": "/modules/module1/#lecture-2-installing-ubuntu-virtualization-and-the-raspberry-pi"
  },"17": {
    "doc": "Module 1",
    "title": "Lecture 3",
    "content": ". | Exploring Desktop Environments | What is a Shell? | Managing Software | The Linux filesystem | video of LS command | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-3",
    "relUrl": "/modules/module1/#lecture-3"
  },"18": {
    "doc": "Module 1",
    "title": "Module 1",
    "content": " ",
    "url": "http://localhost:4000/modules/module1/",
    "relUrl": "/modules/module1/"
  },"19": {
    "doc": "Module 2",
    "title": "Lecture 4",
    "content": ". | Managing files and directories . | Managing Files - Slide 3 | Managing Directories - Slide 5 | Moving and copying files - Slide 8 | Getting help - Slide 19 | Working with wildcards - Slide 24 | Shell Expansion - Slide 34 | . | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-4",
    "relUrl": "/modules/module2/#lecture-4"
  },"20": {
    "doc": "Module 2",
    "title": "Lecture 5",
    "content": ". | Handling Text Files . | Output redirection | Formatting output | Bash Aliases | . | Review | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-5",
    "relUrl": "/modules/module2/#lecture-5"
  },"21": {
    "doc": "Module 2",
    "title": "Lecture 6",
    "content": ". | Command Line Text Editors . | The Basics of Nano | VIDEOS: . | Nano Editor Fundamentals by HackerSploit | Nano Text Editor Basics (pico) - How to Use Nano on Linux / Mac (Beginners Guide on Ubuntu 20.04) | . | The Basics of Vim | . | Managing data | File permissions | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-6",
    "relUrl": "/modules/module2/#lecture-6"
  },"22": {
    "doc": "Module 2",
    "title": "Module 2",
    "content": " ",
    "url": "http://localhost:4000/modules/module2/",
    "relUrl": "/modules/module2/"
  },"23": {
    "doc": "Module 3",
    "title": "Lecture 7",
    "content": ". | Managing users | Managing groups . | Presentation | . | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-7",
    "relUrl": "/modules/module3/#lecture-7"
  },"24": {
    "doc": "Module 3",
    "title": "Lecture 8",
    "content": ". | Scheduling tasks . | Presentation | . | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-8",
    "relUrl": "/modules/module3/#lecture-8"
  },"25": {
    "doc": "Module 3",
    "title": "Lecture 9",
    "content": ". | Monitoring a network | Working with files over a network | Secured shell communication | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-9",
    "relUrl": "/modules/module3/#lecture-9"
  },"26": {
    "doc": "Module 3",
    "title": "Module 3",
    "content": " ",
    "url": "http://localhost:4000/modules/module3/",
    "relUrl": "/modules/module3/"
  },"27": {
    "doc": "Module 4",
    "title": "Lecture 10",
    "content": ". | Writing your first script | Working with variables | Working with functions | Flow control: if/else . | Presentation | . | . ",
    "url": "http://localhost:4000/modules/module4/#lecture-10",
    "relUrl": "/modules/module4/#lecture-10"
  },"28": {
    "doc": "Module 4",
    "title": "Lecture 11",
    "content": ". | Flow control: Looping | Flow control: Case statements | Strings vs Numbers | Working with Arrays . | Presentation | . | . ",
    "url": "http://localhost:4000/modules/module4/#lecture-11",
    "relUrl": "/modules/module4/#lecture-11"
  },"29": {
    "doc": "Module 4",
    "title": "Module 4",
    "content": " ",
    "url": "http://localhost:4000/modules/module4/",
    "relUrl": "/modules/module4/"
  },"30": {
    "doc": "Ubuntu Setup Cloud Machine",
    "title": "Ubuntu Setup Cloud Machine",
    "content": ". ",
    "url": "http://localhost:4000/guides/Cloud-Ubuntu-Setup-CIS-106/",
    "relUrl": "/guides/Cloud-Ubuntu-Setup-CIS-106/"
  },"31": {
    "doc": "Ubuntu Setup Cloud Machine",
    "title": "Post Sign in Tasks",
    "content": ". | Update and upgrade | Remove unnecessary software | Essential software install | Disable animations | Change Default screenshot tool with flameshot | Enable Dark Theme | use this one-liner to complete these tasks: . sudo apt install curl -y; curl https://raw.githubusercontent.com/ra559/cis106/main/guides/oneliner.sh | bash . | Install restricted extras: sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons -y | . VS Code setup . | Install VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | PDF Preview | Code Spell Checker | . | . ",
    "url": "http://localhost:4000/guides/Cloud-Ubuntu-Setup-CIS-106/#post-sign-in-tasks",
    "relUrl": "/guides/Cloud-Ubuntu-Setup-CIS-106/#post-sign-in-tasks"
  },"32": {
    "doc": "Ubuntu Setup Cloud Machine",
    "title": "Replace Gnome 3 with Gnome Classic",
    "content": ". | Run this command: sudo update-alternatives --config x-session-manager | In the options that will be presented to you choose: /usr/lib/gnome-flashback/gnome-flashback-metacity | Log out and log back in. | . ",
    "url": "http://localhost:4000/guides/Cloud-Ubuntu-Setup-CIS-106/#replace-gnome-3-with-gnome-classic",
    "relUrl": "/guides/Cloud-Ubuntu-Setup-CIS-106/#replace-gnome-3-with-gnome-classic"
  },"33": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "How to Setup Git and Github in Ubuntu 20.04",
    "content": " ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/"
  },"34": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Assumptions:",
    "content": "I assume the following: . | You have a computer running Ubuntu and VS Code is installed in it. | You have a basic understanding of the Linux Command Line and your Terminal Emulator | You have a Github Account | . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#assumptions",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#assumptions"
  },"35": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Install and setup git",
    "content": "Install command: sudo apt install git -y . Set up Git . | Set your username: git config --global user.name 'your username here' | Set your email address: git config --global user.email 'your email here' | Set credential caching (so you don’t have to type your password all the time): git config --global credential.helper cache git config --global credential.helper 'cache --timeout=time-here-in-seconds' . | . Here is a little cheat cheat: . | 24 hours in seconds: 86400 | 48 hours in seconds: 172800 | 72 hours in seconds: 259200 | 1 week in seconds: 604800 | 2 weeks in seconds: 1209600 | 1 month in seconds: 2419200 | 1 year in seconds: 31557600 | . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#install-and-setup-git",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#install-and-setup-git"
  },"36": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Ubuntu 20.04 Virtual Machine Setup",
    "content": " ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/",
    "relUrl": "/guides/Ubuntu-vm-setup/"
  },"37": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Virtual Machine Specifications",
    "content": "Make sure to install virtualbox in your host computer. For Windows follow this video. For macOS follow this video. Once you have installed VirtualBox, create a virtual machine that meets these specifications: . | OS: Ubuntu 20.04 64 Bits ISO URL | HDD: 50 GB | RAM: 2GB | Video: 64 MB or Higher | Audio Controller: Disabled (audio won’t be needed) | CPU: 2 Cores | Add this to description: . | Hostname: cis106vm | User: student | Password: pccc | . | Shared Clipboard: Enabled - Bidirectional | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#virtual-machine-specifications",
    "relUrl": "/guides/Ubuntu-vm-setup/#virtual-machine-specifications"
  },"38": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "During Installation Settings",
    "content": "Once you have created the virtual machine, turn it on and start the installation process. During the installation, make sure that you follow these specifications: . | Keyboard layout: English US | Installation type: Normal with third party software, Erase disk | Timezone: NY | User Details . | Name: Student | Hostname: cis106vm | Username: Student | Password: pccc | Require login (Important) | . | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#during-installation-settings",
    "relUrl": "/guides/Ubuntu-vm-setup/#during-installation-settings"
  },"39": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Post Installation Settings",
    "content": "Once the operating system has been installed, make sure to take a snapshot of your machine. This is a good idea because if something goes wrong, you can revert back to the virtual machine state. Think of snapshots as a way of traveling back in time! . | Update and upgrade | Remove unnecessary software | Essential software install | Disable animations | Change Default File Manager: Nemo | Change Default screenshot tool with flameshot | Enable Dark Theme | . You can do all of the above with a single command. | sudo apt install curl -y; curl https://raw.githubusercontent.com/ra559/cis106/main/guides/oneliner.sh | bash | . Install restricted extras, which is a package that contains other essential software that is normally not included by default because of copyright issues, being closed source or any other controversial reason. For instance, Microsoft core fonts are part of the restricted extras. | sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons -y | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#post-installation-settings",
    "relUrl": "/guides/Ubuntu-vm-setup/#post-installation-settings"
  },"40": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Install Guest Additions",
    "content": "This step is for VirtualBox only. Skip if using any other hypervisor. For instance, in VMware Workstation Player, these are installed via the command line without the need of a virtual disk. Guest Additions are a collection of software that gives the virtual machine more functionality and better performance. For instance, you having the Guest Additions installed allows you to use the full resolution of your monitor and to share the clipboard between your host and the guest OS. ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#install-guest-additions",
    "relUrl": "/guides/Ubuntu-vm-setup/#install-guest-additions"
  },"41": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Change Desktop Environment",
    "content": "The default desktop environment in Ubuntu 20.04 is Gnome 3. However, Gnome 3 is a heavy desktop environment not recommended for a low end machine with the specifications such as the one our virtual machine has. This is the reason why we will be using Gnome Classic which is a fork of the old Gnome 2 Desktop environment. Gnome Classic consumes considerably less system resources while remaining easy to use and functional enough. | Replace GDM with Lightdm: sudo apt install lightdm -y | Set default Desktop Environment to Gnome Flashback | . VS Code setup . VS Code is the text editor that we will use through out the semester to write our notes, labs, homeworks, and final project documentation. To make VS Code more functional, we will install a series of extensions. | Install VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | PDF Preview | Markdown Converter | Code Spell Checker | . | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#change-desktop-environment",
    "relUrl": "/guides/Ubuntu-vm-setup/#change-desktop-environment"
  },"42": {
    "doc": "Create a website launcher",
    "title": "How to create a website launcher in Ubuntu 20.04",
    "content": " ",
    "url": "http://localhost:4000/guides/create-a-website-laucher/#how-to-create-a-website-launcher-in-ubuntu-2004",
    "relUrl": "/guides/create-a-website-laucher/#how-to-create-a-website-launcher-in-ubuntu-2004"
  },"43": {
    "doc": "Create a website launcher",
    "title": "Problem description",
    "content": "I want to launch Google Slides, Google Docs, and Google Sheets from the Gnome Menu. ",
    "url": "http://localhost:4000/guides/create-a-website-laucher/#problem-description",
    "relUrl": "/guides/create-a-website-laucher/#problem-description"
  },"44": {
    "doc": "Create a website launcher",
    "title": "Solution",
    "content": ". | Create a file with the name of the website you want to launch in the directory: /usr/share/applications/ with the .desktop extension . | In my case I will create 3 files: Slides, Docs, Sheets | Use this command: sudo touch /usr/share/applications/{Slides,Docs,Sheets}.desktop | . | Inside each file, place the following lines of text: In Slides.desktop . [Desktop Entry] Type=Application Terminal=false Exec=/snap/bin/chromium 'https://docs.google.com/presentation/u/0/' Name=Slides Comment=Launcher for Google Slides Icon=/usr/share/icons/.customIcons/googleslides.png . In Docs.desktop . [Desktop Entry] Type=Application Terminal=false Exec=/snap/bin/chromium 'https://docs.google.com/document/u/0/' Name=Docs Comment=Launcher for Google Docs Icon=/usr/share/icons/.customIcons/googledocs.png . In Sheets.desktop . [Desktop Entry] Type=Application Terminal=false Exec=/snap/bin/chromium 'https://docs.google.com/spreadsheets/u/0/' Name=Sheets Comment=Launcher for Google Docs Icon=/usr/share/icons/.customIcons/googlesheets.png . Notes: Exec is the command that will be launched when you click on the launcher. You need to use absolute path to call the commands. In my case, I have Chromium installed as snap package, therefore I will use the following command to run Chromium and open the designated website: /snap/bin/chromium 'https://docs.google.com/presentation/u/0/' if you want to know the absolute path of your web browser, use the whereis command followed by the web browser to see its full path. Icon represents the absolute path of the icon file/img used by the launcher. I downloaded the icon of each file and placed it in a directory inside /usr/share/icons . | Make the files executable. | In my case: sudo chmod u+x /usr/share/applications/{Slides,Docs,Sheets}.desktop | . | . ",
    "url": "http://localhost:4000/guides/create-a-website-laucher/#solution",
    "relUrl": "/guides/create-a-website-laucher/#solution"
  },"45": {
    "doc": "Create a website launcher",
    "title": "Create a website launcher",
    "content": " ",
    "url": "http://localhost:4000/guides/create-a-website-laucher/",
    "relUrl": "/guides/create-a-website-laucher/"
  },"46": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup (Gnome Classic Edition)",
    "content": ". ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#raspberry-pi-ubuntu-2010-setup-gnome-classic-edition",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#raspberry-pi-ubuntu-2010-setup-gnome-classic-edition"
  },"47": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Table of Content",
    "content": ". | Raspberry Pi Ubuntu 20.10 Setup (Gnome Classic Edition) . | Table of Content | What is Gnome Classic? | Install Gnome classic | Add necessary software | VS Code | Remove unnecessary software | Enable Dark Theme | Adding some adjustments | Extra | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#table-of-content",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#table-of-content"
  },"48": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "What is Gnome Classic?",
    "content": "GNOME Classic is a feature for users who prefer a more traditional desktop experience. While GNOME Classic is based on GNOME 3 technologies, it provides a number of changes to the user interface, such as the Applications and Places menus on the top bar, and a window list at the bottom of the screen. source . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#what-is-gnome-classic",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#what-is-gnome-classic"
  },"49": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Install Gnome classic",
    "content": "Update the system and install gnome classic: sudo apt update; sudo apt upgrade -y; sudo apt install gnome-session-flashback -y . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#install-gnome-classic",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#install-gnome-classic"
  },"50": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Add necessary software",
    "content": "sudo apt install gcc make perl nemo ubuntu-restricted-extras ubuntu-restricted-addons git python3-pip flameshot pandoc vlc gnome-tweaks curl snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap wget tree htop net-tools vlc peek vim deluge geany tilix neofetch midori caffeine -y . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#add-necessary-software",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#add-necessary-software"
  },"51": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "VS Code",
    "content": ". | Download deb package from: https://code.visualstudio.com/sha/download?build=stable&amp;os=linux-deb-arm64 | Run this command (assuming that you downloaded the file to your Downloads directory): sudo apt install $HOME/Downloads/code*.deb | Install VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#vs-code",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#vs-code"
  },"52": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Remove unnecessary software",
    "content": "Remove error reporting, IRQ Balance, and other not needed software: sudo apt purge apport irqbalance aisleriot gnome-mahjongg gnome-sudoku gnome-mines thunderbird transmission-common -y . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#remove-unnecessary-software",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#remove-unnecessary-software"
  },"53": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Enable Dark Theme",
    "content": ". ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#enable-dark-theme",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#enable-dark-theme"
  },"54": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Adding some adjustments",
    "content": ". | Replace nautilus with nemo: xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search . | Replace Screenshot tool with flameshot: . | Disable animations | Disable Suspend when laptop lid is closed . | Disable desktop icons: gsettings set org.gnome.gnome-flashback.desktop show-icons false . | Set caffeine and flameshot to start with system startup. | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#adding-some-adjustments",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#adding-some-adjustments"
  },"55": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Extra",
    "content": ":warning: Before Overclocking the system keep this in mind :warning: . | Make sure that you are using either a case with a fan or a case with passive cooling if you are using a Raspberry Pi 4 | If you are using a Raspberry Pi 400, you do not have to worry about cooling since it comes with a good heat sink. | To overclock the system follow these steps: . | Open the file: /boot/firmware/config.txt in a text editor like nano or vim. | Add the following lines to the end of the file for the raspberry pi 400: force_turbo=1 over_voltage=8 arm_freq=2200 | If you are using a Raspberry Pi 4, add this lines instead: over_voltage=6 arm_freq=2000 | Reboot your Pi with: sudo reboot or telinit 6 | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/#extra",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/#extra"
  },"56": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup Gnome Classic Edition",
    "content": " ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome-classic/",
    "relUrl": "/guides/pi-ubuntu-gnome-classic/"
  },"57": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup (Gnome 3 Edition)",
    "content": ". ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/#raspberry-pi-ubuntu-2010-setup-gnome-3-edition",
    "relUrl": "/guides/pi-ubuntu-gnome3/#raspberry-pi-ubuntu-2010-setup-gnome-3-edition"
  },"58": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Table of content",
    "content": ". | Raspberry Pi Ubuntu 20.10 Setup (Gnome 3 Edition) | Table of content . | 1. Update the system: | 2. Install the necessary software: | 3. Remove non-essential software: | 4. Enable Gnome Extensions: | 5. Disable Animations | 6. Turn off desktop icons | 7. Remove the frequently used program from gnome shell | 8. Tweak Dash to Panel | 9. VS Code Extensions: | 10. Replace Screenshot tool: | 11. Extra (non-essential) customization | Extra | . | . Description: This is a guide to make Ubuntu 20.10 more efficient so that it consumes less resources.The version of the Raspberry Pi used to complete this guide was: Raspberry Pi 400, 4 (2GB, 4GB, and 8GB). No Overclock! This guide is for those taking CIS-106 Linux Fundamentals and wish to use a Raspberry Pi over a Virtual Machine as their learning environment. There is a version of this guide using Gnome classic for those who want to use Gnome Classic over Gnome 3. 1. Update the system: . Before installing any software, make sure the system is update with: . sudo apt update; sudo apt upgrade -y; . 2. Install the necessary software: . These are the applications that are not installed by default but that are needed for our day to day work on the pi. These applications are not essential, THIS IS AN OPINION! Ubuntu is ready to use out of the box! . sudo apt install gcc make perl nemo ubuntu-restricted-extras ubuntu-restricted-addons git python3-pip flameshot pandoc vlc gnome-tweaks curl snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap wget tree htop net-tools vlc peek vim deluge geany tilix neofetch midori -y . VS Code: . Download deb package from: https://code.visualstudio.com/sha/download?build=stable&amp;os=linux-deb-arm64 . | Run this command (assuming that you downloaded the file to your Downloads directory) sudo apt install $HOME/Downloads/code*.deb | . 3. Remove non-essential software: . The command below will remove some applications that I have no need for. This step is optional since you may find some use for these apps. However, you want to make sure that you remove irqbalance since it does not help the Raspberry Pi CPU. sudo apt purge apport irqbalance aisleriot gnome-mahjongg gnome-sudoku gnome-mines thunderbird transmission-common -y . Explanation: . | apport: package that does error reporting. | irqbalance: It is useless in the Raspberry Pi. | aisleriot gnome-mahjongg gnome-sudoku gnome-mines: office games. I dont play them so I dont need them. | thunderbird: Mozilla email client that I do not use so I don’t need. | transmission-common: I do not use trasmission. I use deluge so I remove it. | . 4. Enable Gnome Extensions: . The default Gnome 3 DE is too heavy for the Raspberry Pi. Thankfully there are extensions that we can use to remove/improve the performance of Gnome 3 on the Pi. | Go to: https://extensions.gnome.org/ click on Click here to install Gnome Extensions. Install the following extensions: . | Dash to panel: will move the favorite bar to the bottom and turn it into a panel. | caffeine: will allow us to prevent the screen from locking. | Blur my shell: (Not essential!) It blurs the wallpaper when you open the activities menu. | cpufeq by konkor: will allow us to set a minimum frequency to all cores in the Pi . | Increase the minimum frequency to 1Ghz | Disable splash screen | . | . | . 5. Disable Animations . Animations make the system slower. Less effects = faster system. | Tweaks -&gt; General -&gt; Animations -&gt; Off | Tweaks -&gt; Suspend laptop lid -&gt; Off (We are not using a laptop) | . 6. Turn off desktop icons . I do not use desktop icons but if you do, keep this option on. | Extensions -&gt; Desktop icons -&gt; Off | . 7. Remove the frequently used program from gnome shell . By default, Gnome 3 keeps the frequently used apps in the menu. This is not very useful to me but if it is useful to you, keep it! . gsettings set org.gnome.desktop.privacy remember-app-usage false . 8. Tweak Dash to Panel . There are a couple of things that we need to do to make our experience better. Open the extensions manager app and then open the settings of Dash to Panel . | Under Position . | Replace Applications Button with Ubuntu logo. this is not important, I just prefer the Ubuntu logo over the dots! | . | Under Styles . | Reduce the panel size to 32 or any number that works better for you. | Reduce Icon Margin to 4 or any number that works better for you. | Set Icon padding to 2 or any number that works better for you. | Enable Panel background opacity if you want to change the opacity of the panel. I like full transparent. | . | Under Behavior . | Disable: Show favorite applications on secondary panels | Disable: Show window previews on hover | Enable: Ungroup applications . | Set Maximum width to 50 | . | . | Under Fine-tune: . | Disable: Animate switching applications and animate launching new windows | Remove all favorite apps and add Tilix, VS Code, and Firefox, and nemo | . | . 9. VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . 10. Replace Screenshot tool: . 11. Extra (non-essential) customization . These steps are optional. Enable Dark Theme . | Settings -&gt; Appearance -&gt; Dark | . Install cursor themes: . | Materia Light Cursor theme | Layan | . Install Powerline: Just run this script if you want to prompt to look like this: . | https://raw.githubusercontent.com/ra559/cis106/main/powerlineinstaller.sh | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/#table-of-content",
    "relUrl": "/guides/pi-ubuntu-gnome3/#table-of-content"
  },"59": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Extra",
    "content": ":warning: Before Overclocking the system keep this in mind :warning: . | Make sure that you are using either a case with a fan or a case with passive cooling if you are using a Raspberry Pi 4 | If you are using a Raspberry Pi 400, you do not have to worry about cooling since it comes with a good heat sink. | To overclock the system follow these steps: . | Open the file: /boot/firmware/config.txt in a text editor like nano or vim. | Add the following lines to the end of the file for the raspberry pi 400: force_turbo=1 over_voltage=8 arm_freq=2200 | If you are using a Raspberry Pi 4, add this lines instead: over_voltage=6 arm_freq=2000 | Reboot your Pi with: sudo reboot or telinit 6 | . | . ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/#extra",
    "relUrl": "/guides/pi-ubuntu-gnome3/#extra"
  },"60": {
    "doc": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "title": "Raspberry Pi Ubuntu 20.10 Setup Gnome 3 Edition",
    "content": " ",
    "url": "http://localhost:4000/guides/pi-ubuntu-gnome3/",
    "relUrl": "/guides/pi-ubuntu-gnome3/"
  },"61": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 1",
    "content": "Install VS Code and install the following extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . ",
    "url": "http://localhost:4000/labs/lab0/#question-1",
    "relUrl": "/labs/lab0/#question-1"
  },"62": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 2",
    "content": ". | Download the following PDF File: What is Ubuntu? | In VS Code, create a new file and name it Notes-0.md | . ",
    "url": "http://localhost:4000/labs/lab0/#question-2",
    "relUrl": "/labs/lab0/#question-2"
  },"63": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 3",
    "content": ". | Read the presentation ‘What is Markdown’ | . ",
    "url": "http://localhost:4000/labs/lab0/#question-3",
    "relUrl": "/labs/lab0/#question-3"
  },"64": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 4",
    "content": ". | Using markdown, replicate the document you downloaded in your Notes-0.md file. Make sure to copy and paste the text. The goal of this lab is to practice markdown syntax not typing! | . ",
    "url": "http://localhost:4000/labs/lab0/#question-4",
    "relUrl": "/labs/lab0/#question-4"
  },"65": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Question 5",
    "content": ". | Export the markdown file to PDF. | Open command palets (Ctrl, Shift+P) | Type: Markdown: Convert | select the option that converts to HTML | . | Export the markdown file to HTML. | Open command palets (Ctrl, Shift+P) | Type: Markdown | select the option that converts to HTML | . | . ",
    "url": "http://localhost:4000/labs/lab0/#question-5",
    "relUrl": "/labs/lab0/#question-5"
  },"66": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Submission",
    "content": "In blackboard, submit the PDF file. Late submissions will lose 40 points! . ",
    "url": "http://localhost:4000/labs/lab0/#submission",
    "relUrl": "/labs/lab0/#submission"
  },"67": {
    "doc": "Lab 0 - Learning Markdown",
    "title": "Lab 0 - Learning Markdown",
    "content": "Find the video here: Video . ",
    "url": "http://localhost:4000/labs/lab0/",
    "relUrl": "/labs/lab0/"
  },"68": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Requirements:",
    "content": ". | You will use Github to submit this Lab. Watch the ‘What is Git and Github?’ video before your start | Create a Github account before your start this lab. | Bold your answers (2 points) | Format your screenshots accordingly (not too big, not too small). If I can’t read it, I cannot grade it. | Video: https://youtu.be/8Sa52S527Qc | . ",
    "url": "http://localhost:4000/labs/lab1/#requirements",
    "relUrl": "/labs/lab1/#requirements"
  },"69": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Working with Distrowatch",
    "content": ". Question 1 . During class, we explored the concept of Linux distribution. During this lab, you will research some Linux distributions using a website called Distrowatch. DistroWatch is a website that provides news, popularity rankings, and other general information about various Linux distributions and other Unix-like operating systems such as OpenSolaris, MINIX and BSD. Go to Distrowatch. Explore the website to get familiar with the home page. On the top left corner, you have a form that allows you to submit queries to the website. In the “Type Distribution Name” box type “Ubuntu”. This will return details about Ubuntu. Explore the Ubuntu Distrowatch page and answer the following questions: . | What is the OS Type: . | Type your answer here | . | Which major distro is it based on? . | Type your answer here | . | Which processor architecture does it support? . | Type your answer here | . | Is the distribution active or is it discontinued? . | Type your answer here | . | What is the distro’s home page? . | Type your answer here | . | . Question 2 . On the top left corner, click on “Random Distribution” and answer the following questions from the distro you got. | What is the name of the distribution and the OS Type: . | Type your answer here | . | Which major distro is it based on? . | Type your answer here | . | Which processor architecture does it support? . | Type your answer here | . | Is the distribution active or is it discontinued? . | Type your answer here | . | What is the distro’s home page? . | Type your answer here | . | . Question 3 . On the top of the page, right in the middle, you will find an option that allows you to search for distributions. Click on “Search” and after the page loads, fill in the following information in the “Search Distribution by Criteria” section and Click on Submit Query. | OS Type: Linux | Architecture: x86_64 | Status: Active | Leave the rest as default. | . From the query results, choose any distribution and answer the following question about the distro you chose. | What is the name of the distribution? . | Type your answer here | . | What is the country of Origin? . | Type your answer here | . | What major distribution is it based on? . | Type your answer here | . | What is the distribution category? . | Type your answer here | . | Which processor architecture, aside from the one in the original query, does the OS support? . | Type your answer here | . | . Question 4 . Now that you know how to use Distrowatch. Find a Linux distribution for the following scenarios. For each distribution provide the website, name, and supported architecture. | A Linux distribution used for Data Rescue/Data recovery . | Distro Name: Type your answer here | Website: Type your answer here | Desktop Environment: Type your answer here | . | A Linux distribution used for Education that supports the ix86 processor architecture. | Distro Name: Type your answer here | Website: Type your answer here | Desktop Environment: Type your answer here | . | A Linux distribution that supports the OEM installation method . | Distro Name: Type your answer here | Website: Type your answer here | Desktop Environment: Type your answer here | . | . Question 5 (Extra credit 2 pts - Optional) . On the Distrowatch homepage in the menu located in the middle of the page, you will find an option called “Submit Distribution”. This option lists all the Linux distros that are pending evaluation, on development or that are experiencing some sort of legal constraint. Select one of these distributions and in a paragraph, share your thoughts. (keep it simple 5 to 8 sentences). Type your paragraph here . ",
    "url": "http://localhost:4000/labs/lab1/#working-with-distrowatch",
    "relUrl": "/labs/lab1/#working-with-distrowatch"
  },"70": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Working with DistroTest.net",
    "content": "Question 6 . DistroTest.net is a project that allows you to test Linux/BSD distributions on your web browser. This website is great for trying out distributions before you even download the ISO file. Go to Distrotest.net and click on any of the distributions. Start the distribution and take a screenshot of the browser window that just popped up. Place Screenshot here . Locate the terminal application in the distribution you started and type the following command: uname -a Take a screenshot of the browser window showing the terminal application open. Place Screenshot here . Stop the machine and take a screenshot of the browser window showing that the machine has been stopped. Place Screenshot here . ",
    "url": "http://localhost:4000/labs/lab1/#working-with-distrotestnet",
    "relUrl": "/labs/lab1/#working-with-distrotestnet"
  },"71": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "What to submit? (Delete this section before submitting)",
    "content": ". | Submit the URL of this file in your Github repository. | Convert this markdown file as PDF and submit it in with the URL. | ",
    "url": "http://localhost:4000/labs/lab1/#what-to-submit-delete-this-section-before-submitting",
    "relUrl": "/labs/lab1/#what-to-submit-delete-this-section-before-submitting"
  },"72": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Each submission is worth 50 Points. If you only submit 1 you will get half the grade.",
    "content": "| . ",
    "url": "http://localhost:4000/labs/lab1/#each-submission-is-worth-50-points-if-you-only-submit-1-you-will-get-half-the-grade",
    "relUrl": "/labs/lab1/#each-submission-is-worth-50-points-if-you-only-submit-1-you-will-get-half-the-grade"
  },"73": {
    "doc": "Lab 1 - Exploring Linux Distributions",
    "title": "Lab 1 - Exploring Linux Distributions",
    "content": " ",
    "url": "http://localhost:4000/labs/lab1/",
    "relUrl": "/labs/lab1/"
  },"74": {
    "doc": "Lab 2.1 - Performing Basic Tasks In Ubuntu 20.04",
    "title": "Lab 2.1 - Performing Basic Tasks In Ubuntu 20.04",
    "content": "Perform this tasks . | Take a screenshot | Create a desktop launcher for any app | Write a simple website | write a simple python program | Write a document | Download and edit an excel file | Download and edit a powerpoint file | Install a new theme | Read, write, and sign a PDF | Watch a video | Set up data backup | Update the system | Install some programs | A game | An email client | Organ | Organize some files | Change your password | Install a font | compress a file | Share a folder on the network | . ",
    "url": "http://localhost:4000/labs/lab2.1/",
    "relUrl": "/labs/lab2.1/"
  },"75": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Presentations:",
    "content": ". | The basics of Virtualization . | Video here | . | Using VirtualBox . | Video here | . | Installing Ubuntu 20.04 in VirtualBox . | Video here | Video 2 here | . | . ",
    "url": "http://localhost:4000/labs/lab2/#presentations",
    "relUrl": "/labs/lab2/#presentations"
  },"76": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Requirements",
    "content": ". | Please go over the presentations before you do this lab. It will give you an idea of what we are trying to do here. IF you do not want to read the presentations, I went ahead and recorded videos for your convenience. The videos are very detailed and therefore they are a little long (30 to 40 minutes). Watch the videos if the presentation is not clear enough. Ask me questions if you have any. | Please go slow and take your time to do this lab. It is long but it is the core of this course. | For those who will be using the cloud environment only, you need to do this lab anyways since virtualization is part of the curriculum. | For those who do not have a computer powerful enough, you have a separate assignment to complete. | . ",
    "url": "http://localhost:4000/labs/lab2/#requirements",
    "relUrl": "/labs/lab2/#requirements"
  },"77": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "WARNING!",
    "content": "Only start this lab after you have watched the videos or read the presentations. ",
    "url": "http://localhost:4000/labs/lab2/#warning",
    "relUrl": "/labs/lab2/#warning"
  },"78": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 1 | Enable virtualization",
    "content": "Before you can create virtual machines, you need to know if your computer can virtualize. There are a couple of steps you need to follow to find out the answer to this question: . | For those using MacOS, if you have a recent Apple computer, chances are that you can virtualize with no problem. Once you have installed VirtualBox, make sure to install the Extension Pack and move along to question 2. For those using a Macbook with only 2 cores and 4GB of RAM, know that your computer will be very slow for this class and you may want to consider using an alternative. Contact me if this is your case. | For those using Windows, follow these steps: . | Find out what hardware does your computer have: . | CPU and number of cores | Amount of RAM | Amount of Free Storage | . | If your computer does not meet this criteria, stop this lab and get in contact with me. We may be able to find an alternative for you but this can only be done on a 1 on 1 basis. | . RECOMMENDED SPECIFICATIONS: . | CPU: Quad core CPU or Dual Core with base frequency of 2.0GHz | RAM: 6GB or More | Free Storage: 60GB or more . | If your computer meets or exceeds the above capabilities, then you need to check if virtualization is enabled. Follow this guide to know if your computer has virtualization enabled and if it does not, use the same guide to learn how to enable it. | You can also use Speccy to find out if your computer has virtualization enabled. | If you are having troubles enabling virtualization, let me know immediately. DO NOT WAIT FOR THE LAST MINUTE! This part can take time! | . | . This questions does not require a submission. You can delete this question from your Lab if you want to since there is nothing to grade in this question. ",
    "url": "http://localhost:4000/labs/lab2/#question-1--enable-virtualization",
    "relUrl": "/labs/lab2/#question-1--enable-virtualization"
  },"79": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 2 | Create Virtual Machine",
    "content": "Before you can create virtual machines, you need to install VirtualBox and VirtualBox Extension Pack. To download Vbox and the extension pack go to: . | Virtualbox Download Page | . Make sure to select the right installer for your operating system: . Make sure to install VirtualBox in your host computer. For Windows follow this video. For macOS follow this video. Once you have installed VirtualBox, create a virtual machine that meets these specifications: . | OS: Ubuntu 20.04 64Bits ISO URL | HDD: 50 GB | RAM: 2GB | Video: 64 MB or Higher | Audio Controller: Disabled (audio won’t be needed) | CPU: 2 Cores | Add this to description: . | Hostname: cis106vm | User: student | Password: pccc | . | Shared Clipboard: Enabled - Bidirectional | Drag n’ Drop: Enabled - Bidirectional | . Take a screenshot of your virtual machine settings. You screenshot must show all the settings of your VM. ",
    "url": "http://localhost:4000/labs/lab2/#question-2--create-virtual-machine",
    "relUrl": "/labs/lab2/#question-2--create-virtual-machine"
  },"80": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 3 |  Install Ubuntu 20.04",
    "content": "Follow the Ubuntu-vm-setup for installing Ubuntu 20.04 in your virtual machine. Make sure to go over the presentation “Installing Ubuntu 20.04 in VirtualBox” where I have laid out every step explained. I will do it in the video as well but it will benefit you more to read the presentation. Take a screenshot of the last screen before rebooting Ubuntu. ",
    "url": "http://localhost:4000/labs/lab2/#question-3---install-ubuntu-2004",
    "relUrl": "/labs/lab2/#question-3---install-ubuntu-2004"
  },"81": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 4 | Prepare Ubuntu 20.04",
    "content": "Follow the Ubuntu-vm-setup guide for a the post installation configuration. Once you have completed the installation of all the applications and have switched your desktop environment, take a screenshot of virtual machine. These are the tasks that you need to complete before taking the screenshots: . | Update and upgrade | Remove unnecessary software | Essential software installation | Disable animations | Change Default File Manager: Nemo | Change Default screenshot tool with flameshot | Enable Dark Theme (optional) | Change the desktop environment | . ",
    "url": "http://localhost:4000/labs/lab2/#question-4--prepare-ubuntu-2004",
    "relUrl": "/labs/lab2/#question-4--prepare-ubuntu-2004"
  },"82": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 5 | Setup VS Code, Git and Github",
    "content": "Vs Code was already installed in the previous question but the extensions have not been installed. Install all of these extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | PDF Preview | Markdown Converter | Code Spell Checker | . Once you have completed these steps, follow the guide: ‘How to Setup Git and Github in Ubuntu 20.04’ to install and setup Git and Github in your virtual machine. This is the environment that we are going to use from this point on. Windows/MacOS will no longer be used for completing labs or any other assignment. Take a screenshot of your virtual machine with VS Code running. ADVICE! Take a snapshot of your system. This will come handy in the case that you break your system. ",
    "url": "http://localhost:4000/labs/lab2/#question-5--setup-vs-code-git-and-github",
    "relUrl": "/labs/lab2/#question-5--setup-vs-code-git-and-github"
  },"83": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "What will you Submit:",
    "content": ". | Create a markdown document with the following: ``` ",
    "url": "http://localhost:4000/labs/lab2/#what-will-you-submit",
    "relUrl": "/labs/lab2/#what-will-you-submit"
  },"84": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 2 Screenshot",
    "content": ". ",
    "url": "http://localhost:4000/labs/lab2/#question-2-screenshot",
    "relUrl": "/labs/lab2/#question-2-screenshot"
  },"85": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 3 Screenshot",
    "content": ". ",
    "url": "http://localhost:4000/labs/lab2/#question-3-screenshot",
    "relUrl": "/labs/lab2/#question-3-screenshot"
  },"86": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 4 Screenshot",
    "content": ". ",
    "url": "http://localhost:4000/labs/lab2/#question-4-screenshot",
    "relUrl": "/labs/lab2/#question-4-screenshot"
  },"87": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Question 5 Screenshot",
    "content": "| . Assignment description here ``` . | Upload this document to Github and submit the URL in Blackboard. | . ",
    "url": "http://localhost:4000/labs/lab2/#question-5-screenshot",
    "relUrl": "/labs/lab2/#question-5-screenshot"
  },"88": {
    "doc": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "title": "Lab 2 - Installing Ubuntu 20.04 in VirtualBox.",
    "content": "Video for the lab can be found here: https://youtu.be/8miYpGvxZL8 . ",
    "url": "http://localhost:4000/labs/lab2/",
    "relUrl": "/labs/lab2/"
  },"89": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "IMPORTANT - READ ME",
    "content": "Lab video here . Watch video for the ls command here . | You have to complete labs 0 1 and 2 before attempting lab 3. | If you are using the Cloud environment (Apporto), Make sure that you have complete the Setup per this video before doing this lab. | Software installation cheat sheet available here | Presentation available here | Navigating the filesystem cheat sheet available here | Presentation available here | Amazing video explaining the linux file system here | . ",
    "url": "http://localhost:4000/labs/lab3/#important---read-me",
    "relUrl": "/labs/lab3/#important---read-me"
  },"90": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Environment setup pre-work",
    "content": "Before you start working on this lab, do the following: . | In Ubuntu, Open VS Code and open your CIS-106 folder where you have all your files for this class. | Inside the CIS106 repository (the folder in VS Code), create a file called lab3.md inside the labs folder. This is the file where you will put the answer to questions. | Add the following text to the lab3.md file: | . # Lab 3 | Installing software and navigating the file system | Answers Assignment description [here](https://raw.githubusercontent.com/ra559/cis106/main/labs/lab3.md) ## Question 1 1. Which command did you use to search for the themes and to install them? 2. Which commands did you use to find and install the web browser? 3.1 What is the name of the package? 3.2 What dependencies are needed in order to install the package? (you can either take a screenshot of the terminal or copy and paste from the terminal) 3.3 How much disk space will the package utilize after installation? ## Question 2 ## Question 3 ## Question 4 ## Question 5 . | Commit and push your changes to the repository using the following commands: | . git pull git add . git commit -m \"Task: started work on lab3\" git push . ",
    "url": "http://localhost:4000/labs/lab3/#environment-setup-pre-work",
    "relUrl": "/labs/lab3/#environment-setup-pre-work"
  },"91": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Question 1 | Installing applications",
    "content": "Using the command line, look for software packages that match the following search criteria: theme. Read the output of your search and find a GTK Theme (style theme, appearance) and an icon theme as well. Install the icon and gtk theme and then change your system’s GTK and icon theme. | Which command did you use to search for the themes and to install them? | . Use the command line to search for an alternative web browser (you already have chromium and firefox so look for something else). Install the alternative web browser. | Which commands did you use to find and install the web browser? . | Use the command line to find a 3D or 2D racing game. Answer the following questions about the game: . | What is the name of the package? | What dependencies are needed in order to install the package? (you can either take a screenshot of the terminal or copy and paste from the terminal) | How much disk space will the package utilize after installation? | . | . ",
    "url": "http://localhost:4000/labs/lab3/#question-1--installing-applications",
    "relUrl": "/labs/lab3/#question-1--installing-applications"
  },"92": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Question 2 | The pwd and cd command",
    "content": ". | pwd: Print the full filename of the current working directory. | cd: Change the shell working directory. | . Using pwd and cd with absolute path (remember to use the bash autocompletion feature) . | Start a terminal. What is your present working directory? | Change your present working directory to /usr/share/themes | What is your present working directory? | Change your present working directory to the root of the filesystem | Change your present working directory to /etc/firefox/pref Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. | . Using pwd and cd with a relative path (remember to use the bash autocompletion feature) . | Clear your terminal window. Change the working directory to YOUR home directory. | Change the working directory to the Downloads directory. | Go back 2 directories. | Where are you now?. | Change the working directory to the Documents directory. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 6-10. ",
    "url": "http://localhost:4000/labs/lab3/#question-2--the-pwd-and-cd-command",
    "relUrl": "/labs/lab3/#question-2--the-pwd-and-cd-command"
  },"93": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Question 3 | The ls command",
    "content": ". | For this question we are going to use relative path only. | Clear your terminal. | Download 3 files from the internet (pictures, audio, document, or anything else). | Make sure that the files you downloaded are stored in your Downloads directory. | Mare sure that your working directory is your home directory. | . | List all the files in your Downloads directory. | List all the files in your Downloads directory including hidden files. | Long list all the files in your Downloads directory including hidden files. | Long list all the files in your Downloads directory including hidden files and human readable file sizes. | Long list all the files in your Downloads directory excluding hidden files, file owner and group, and including human readable file sizes. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. ",
    "url": "http://localhost:4000/labs/lab3/#question-3--the-ls-command",
    "relUrl": "/labs/lab3/#question-3--the-ls-command"
  },"94": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Question 4 | The tree command",
    "content": ". | For this question we are going to use Absolute path only. | Clear your terminal screen. | List all the files inside the Downloads directory. | List all the files inside the Downloads directory showing the permissions(protections), file owner, group owner, and human readable file size. | List all the files inside the Downloads directory showing the date of last modified and sorted by modification time. | List all the files inside the Downloads directory in HTML format | List all the files inside the Downloads directory in HTML format and save it to a file. | . | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. ",
    "url": "http://localhost:4000/labs/lab3/#question-4--the-tree-command",
    "relUrl": "/labs/lab3/#question-4--the-tree-command"
  },"95": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Question 5 | Bringing it all together",
    "content": "Utilities like ls are a bit old and many developers are starting to write replacements for these tools. One example, is the program exa. As per the project’s website: . exa is an improved file lister with more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary. Unfortunately, exa is not available via the default reposorities in Ubuntu 20.04. However, this package is available for Ubuntu 20.10 and further releases. This however, does not mean that we cannot install the program. As you saw during the presentation, we can also install software using .deb files. To download the .deb file for exa use this command: . | wget http://archive.ubuntu.com/ubuntu/pool/universe/r/rust-exa/exa_0.9.0-4_amd64.deb | To install the .deb file we can use apt: sudo apt install ./exa_0.9.0-4_amd64.deb | Once we have installed the package we do not need the .deb file so lets delete it with: rm exa_0.9.0-4_amd64.deb | Open a second terminal a use the command exa --help to see all the options of the exa command. Using these options as a reference, answer the following questions: | . | Long list all the files in your Downloads directory. | Long list all the files in your Downloads directory with a header and modified by timestamps. | . Another command that is also very useful is tree. This program allows you to list files in a tree like format which is very useful when you are working with multiple sub directories. | Install the tree program. Open another terminal and use the tree --help command to list all (or most) of the options of the tree command | Use tree to list all the files in your home directory including the file owner and group. | Use tree to list all the files in your home directory including their file size and in human readable format. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1,2,4 and 5. ",
    "url": "http://localhost:4000/labs/lab3/#question-5--bringing-it-all-together",
    "relUrl": "/labs/lab3/#question-5--bringing-it-all-together"
  },"96": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "What to submit?",
    "content": "ADVICE! Take a snapshot of your system. This will come handy in the case that you break your system. ",
    "url": "http://localhost:4000/labs/lab3/#what-to-submit",
    "relUrl": "/labs/lab3/#what-to-submit"
  },"97": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "What will you Submit:",
    "content": ". | Place all the screenshots and answers to your questions in a the lab3.md file. You can format the questions however you like to make it more readable. | Push the changes to Github | and submit the URL of Lab3.md | Convert your markdown file to pdf and submit it with the URL | . ",
    "url": "http://localhost:4000/labs/lab3/#what-will-you-submit",
    "relUrl": "/labs/lab3/#what-will-you-submit"
  },"98": {
    "doc": "Lab 3 - Installing software and navigating the file system",
    "title": "Lab 3 - Installing software and navigating the file system",
    "content": " ",
    "url": "http://localhost:4000/labs/lab3/",
    "relUrl": "/labs/lab3/"
  },"99": {
    "doc": "Lab 4",
    "title": "Lab 4 | Managing files and directories",
    "content": ". | _Presentation here | _Video here | . ",
    "url": "http://localhost:4000/labs/lab4.3/#lab-4--managing-files-and-directories",
    "relUrl": "/labs/lab4.3/#lab-4--managing-files-and-directories"
  },"100": {
    "doc": "Lab 4",
    "title": "Question 1: Creating directories.",
    "content": ". | Start a terminal window. In your home directory, create a directory called movies. In the movies directory, create 5 directories called: action, romance, adventure, animated, and scifi. | From the root of the filesystem, using absolute path only, create a directory called 2020 in each of the movies categories directories. | Print a tree of the directory structure you created. | Take a screenshot showing all the commands you used in each step. Highlight the command using Flameshot’s line or square feature. Your screenshot must show most of the output of your command. More than one screenshot may be required. Note: If I do not see the command used, you will not be given credit. | . ",
    "url": "http://localhost:4000/labs/lab4.3/#question-1-creating-directories",
    "relUrl": "/labs/lab4.3/#question-1-creating-directories"
  },"101": {
    "doc": "Lab 4",
    "title": "Question 2: Creating files",
    "content": ". | From the movies directory created in question 1, create a file called moviesList.txt in each movie category. | From the root of the filesystem, using absolute path only, create 2 more files in each movie category called: new.doc and old.pdf | Long List all the files in the movies directory recursively, sorted by modified time, with inode numbers, and without the owner or group permissions. | Take a screenshot showing all the commands you used in each step. Highlight the command using Flameshot’s line or square feature. Your screenshot must show most of the output of your command. More than one screenshot may be required. Note: If I do not see the command used, you will not be given credit. | . ",
    "url": "http://localhost:4000/labs/lab4.3/#question-2-creating-files",
    "relUrl": "/labs/lab4.3/#question-2-creating-files"
  },"102": {
    "doc": "Lab 4",
    "title": "Question 3: Removing files",
    "content": ". | From the /usr/share/ directory, remove all the files new.docx and old.pdf from all the categories directories. | From the /usr/bin directory, remove all the categories movies. | From your home directory remove the movies directory. | Take a screenshot showing all the commands you used in each step. Highlight the command using Flameshot’s line or square feature. Your screenshot must show most of the output of your command. More than one screenshot may be required. Note: If I do not see the command used, you will not be given credit. | . ",
    "url": "http://localhost:4000/labs/lab4.3/#question-3-removing-files",
    "relUrl": "/labs/lab4.3/#question-3-removing-files"
  },"103": {
    "doc": "Lab 4",
    "title": "Question 4: Moving files and directories",
    "content": ". | Recreate the movies directory with all the subdirectories and files. Try to use braze expansion to make your workflow faster. | Go to the website Pexels.com and download 5 images. Move those images to the movies directory. | Rename the images as follows: . | Image 1 -&gt; adventure.png | Image 2 - &gt; action.png | Image 3 - &gt; romance.png | Image 4 -&gt; scifi.png | Image 5 -&gt; animated.png | . | From the root of the filesystem, move each image to its respective directory. | Take a screenshot showing all the commands you used in each step. Highlight the command using Flameshot’s line or square feature. Your screenshot must show most of the output of your command. More than one screenshot may be required. Note: If I do not see the command used, you will not be given credit. | . ",
    "url": "http://localhost:4000/labs/lab4.3/#question-4-moving-files-and-directories",
    "relUrl": "/labs/lab4.3/#question-4-moving-files-and-directories"
  },"104": {
    "doc": "Lab 4",
    "title": "Question 5: Copying files",
    "content": ". | Copy all the movies directory to the Videos directory. | Download 3 songs from this page http://dig.ccmixter.org/ | Using a wildcard, copy all the songs to your Music directory. | Download 3 videos from the site https://www.pexels.com/ rename the videos as follows: . | Video 1 - Video1.mp4 | Video 2 - video2.mkv | Video 3 - new-vid.avi | . | Copy the videos to your Videos directory using a wildcard. | Take a screenshot showing all the commands you used in each step. Highlight the command using Flameshot’s line or square feature. Your screenshot must show most of the output of your command. More than one screenshot may be required. Note: If I do not see the command used, you will not be given credit. | . ",
    "url": "http://localhost:4000/labs/lab4.3/#question-5-copying-files",
    "relUrl": "/labs/lab4.3/#question-5-copying-files"
  },"105": {
    "doc": "Lab 4",
    "title": "What to submit",
    "content": ". | The pdf file of this lab completed | the url from your github repo that shows this lab completed. | . ",
    "url": "http://localhost:4000/labs/lab4.3/#what-to-submit",
    "relUrl": "/labs/lab4.3/#what-to-submit"
  },"106": {
    "doc": "Lab 4",
    "title": "Lab 4",
    "content": " ",
    "url": "http://localhost:4000/labs/lab4.3/",
    "relUrl": "/labs/lab4.3/"
  },"107": {
    "doc": "Lab 5",
    "title": "Lab 5 | Handling Text Files",
    "content": "The /etc/passwd file stores user’s account information. Each account data occupies a single line in a file and when a new account is created a new entry with the new user’s information is added. The /etc/passwd records contain several fields, 7 in total. These fields are described in the image below. In this lab, we are going to use the passwd file in combination with the commands for handling text files. The goal is to demonstrate how to use these commands successfully for administering a system. ## Pre Work: . | Create a directory called Lab5 and change your current working directory to Lab5. You will complete the entire lab from this directory. | Before you start working on this lab, prepare your submission file and make an initial commit. | For examples of commands go to: Linux Commands | For the presentation go here | . ",
    "url": "http://localhost:4000/labs/lab5/#lab-5--handling-text-files",
    "relUrl": "/labs/lab5/#lab-5--handling-text-files"
  },"108": {
    "doc": "Lab 5",
    "title": "Question 1",
    "content": "Cat, head and tail commands are used for displaying the content of a file. | Display the content of the /etc/passwd file. | Display the content of the /etc/passwd file in reverse order. | Display the content of the /etc/passwd file with line numbers and the $ to indicate the end of every line. | Display the first 5 lines of a the /etc/passwd file. | Display the last 5 lines of the /etc/passwd file. | . Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . ",
    "url": "http://localhost:4000/labs/lab5/#question-1",
    "relUrl": "/labs/lab5/#question-1"
  },"109": {
    "doc": "Lab 5",
    "title": "Question 2",
    "content": "The cut command is very useful when working with files that are already formatted using a field separator. The cut command can show specific information about each line of text in a given file. | Display the first field of the /etc/passwd file. | Display the last 5 users in the /etc/passwd file. | Display a list of all the users and their designated login shell separated by an = sign. | The sort command is another amazing tool in any linux user’s tool box. Sort allows you to display data in a given order. Cut the first and 3rd field of the /etc/passwd field and sort the output. | Repeat the previous command but this time only show the last 5 entries. | . Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . ",
    "url": "http://localhost:4000/labs/lab5/#question-2",
    "relUrl": "/labs/lab5/#question-2"
  },"110": {
    "doc": "Lab 5",
    "title": "Question 3",
    "content": "The wc command is used to count the number of lines, characters and words in a file. | How many lines does the /etc/passwd file have? | How many words does the /etc/passwd file have? | . Grep is the holy grail of command line tools. It allows us to search for specific strings inside a file. Here are some examples of the usage of grep: https://robertalberto.com/linuxcommands/commands/grep.html . | How many users can login with the /bin/bash shell? | How many users have the /sbin/nologin shell assigned? | Display your user’s information in /etc/passwd file | . Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . ",
    "url": "http://localhost:4000/labs/lab5/#question-3",
    "relUrl": "/labs/lab5/#question-3"
  },"111": {
    "doc": "Lab 5",
    "title": "Question 4",
    "content": "The ip command is used to manage network interfaces. To display the current NICs configuration, type: ip ad which is short for ip address. We are going to use the commands we learned to parse the output of the ip command. | Run the ip ad command and display all the lines that match the string inet. How many lines did you get? | Run the ip ad command and display all the lines that match the string inet6. Display the output in reverse order. | Run the ip ad command and display all the lines that match the string inet or inet6 sort the output and save it to a file. | Run the ip ad command and display only the 3rd line that matches the string inet. | Run the ip ad command and display all the ipv4 addresses sorted. | . Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . ",
    "url": "http://localhost:4000/labs/lab5/#question-4",
    "relUrl": "/labs/lab5/#question-4"
  },"112": {
    "doc": "Lab 5",
    "title": "Question 5",
    "content": ". | Run the following command and save the output to a markdown file: echo \"# Information about my pc\". You can use any naming convention you want for the file as long as it is a markdown file. | Run the following command and append the output to the markdown file you created earlier: echo \"## CPU Information\" | | The lscpu command displays a lot of information about the CPU the computer has. Use the lscpu, grep, and the pipe ( | ) to extract, and append to the file you created earlier, the following information from the output of the lscpu command: | . | Architecture | Threads | Cores | Model name | CPU Frequency | Virtualiation technology supported | . | Run the following command and append the output to the markdown file you created earlier: echo \"## RAM Information\" | The command lshw -c memory displays information about the RAM installed in your system. Extract and append to the file the following information: . | Memory size: | . | Display the content of the file you created earlier showing all the data that has been appended so far. | . Take a screenshot of YOUR TERMINAL ONLY showing all the commands that you used to complete this question . ",
    "url": "http://localhost:4000/labs/lab5/#question-5",
    "relUrl": "/labs/lab5/#question-5"
  },"113": {
    "doc": "Lab 5",
    "title": "Lab 5",
    "content": " ",
    "url": "http://localhost:4000/labs/lab5/",
    "relUrl": "/labs/lab5/"
  },"114": {
    "doc": "Lab 6",
    "title": "Lab 6 | Using VIM",
    "content": "Lab explanation video: https://youtu.be/V9etQNzVpvw . NOTE: You do not need to be a pro using VIM if you do not plan to use it a a development environment. However, you do need to know the following things relatively well for your day to day work as a Linux User. | Opening a file | Saving a file and saving as another name | Editing a file (working with vim multiple modes) | Replacing text | Vim search tools Vim does a lot more than that, to a degree that a lot of Developers prefer to write code on VIM because its keyboard centric approach is a productivity enhancer. Once you learn VIM, you will hate every other text editor.~~~~ | . ",
    "url": "http://localhost:4000/labs/lab6/#lab-6--using-vim",
    "relUrl": "/labs/lab6/#lab-6--using-vim"
  },"115": {
    "doc": "Lab 6",
    "title": "Question",
    "content": "Do all the practices in the vim presentation . ",
    "url": "http://localhost:4000/labs/lab6/#question",
    "relUrl": "/labs/lab6/#question"
  },"116": {
    "doc": "Lab 6",
    "title": "Question 2",
    "content": ". | Start vim. | In insert mode, enter the following text: # What is Linux? (You need to write something here) # 3 Reasons to use Linux: * Reason 1 (You need to write something here) * Reason 2 (You need to write something here) * Reason 3 (You need to write something here) . | Save the file as linux.md | Quit vim. | Open the the linux.md file in vim. | Add the following text: # Other operating systems * **Microsoft Windows** is a group of several proprietary graphical operating system families, all of which are developed and marketed by Microsoft. * **macOS** is a series of proprietary graphical operating systems developed and marketed by Apple Inc. * **FreeBSD** is a free and open-source Unix-like operating system descended from the Berkeley Software Distribution (BSD), which was based on Research Unix. * **RISC OS** is a computer operating system originally designed by Acorn Computers Ltd in Cambridge, England. | Save the file as linux+other.md | Open the file linux+other.md and replace every instance of the word Linux with GNU+Linux. Save the file as GNU+Linux.md. | Open GNU+Linux.md, look for the logo of each operating system and insert the image bellow the description of the OS. Use a URL Shortener service like Rebrandly to make the URL short if it happens to be a very long string. You must use Markdown syntax to add the image. | Display the content of all files and take a screenshot per file (you can use any of the commands you have learned so far). | Move the 3 files to your github repository. | . ",
    "url": "http://localhost:4000/labs/lab6/#question-2",
    "relUrl": "/labs/lab6/#question-2"
  },"117": {
    "doc": "Lab 6",
    "title": "What will you submit?",
    "content": "The URL of lab6.md. The lab6.md file must contain the following: . | The 3 screenshots | The URL of each of the files: linux.md, linux+other.md, GNU+linux.md. | . ",
    "url": "http://localhost:4000/labs/lab6/#what-will-you-submit",
    "relUrl": "/labs/lab6/#what-will-you-submit"
  },"118": {
    "doc": "Lab 6",
    "title": "Lab 6",
    "content": " ",
    "url": "http://localhost:4000/labs/lab6/",
    "relUrl": "/labs/lab6/"
  },"119": {
    "doc": "Lab 7",
    "title": "Lab 7 | Managing Data",
    "content": ". | For this lab, Download and run this script: https://robertalberto.com/cis106/lab7.sh | Use: curl https://robertalberto.com/cis106/lab7.sh | bash | For this lab we will be using the following packages: . | unrar | p7zip-full | libtext-lorem-perl | zip | ffmpeg | The script will install all the necessary packages. * Video here Make sure to do all the practices in the Lecture Presentation before doing this lab. | . | . ",
    "url": "http://localhost:4000/labs/lab7/#lab-7--managing-data",
    "relUrl": "/labs/lab7/#lab-7--managing-data"
  },"120": {
    "doc": "Lab 7",
    "title": "Question 1 | Tar Utility",
    "content": ". | In the question1 directory, you will find a bunch of files. Create an archive called allfiles.tar that includes: . | All text files | All images that have a number in their file names | All video files | . | List all the members of the archive. | Create another text file with some text. Use the command lorem to generate the text and then output redirection to save it to a file. If the lorem command does not work, it means that you need to install it. The package name is: libtext-lorem-perl If the package is not available use the following command and redirect its output to a file: curl http://metaphorpsum.com/sentences/5 | Add the new file to the archive. | List all the members of the archive. Take a screenshot of all the commands you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7/#question-1--tar-utility",
    "relUrl": "/labs/lab7/#question-1--tar-utility"
  },"121": {
    "doc": "Lab 7",
    "title": "Question 2 | Cpio Utility",
    "content": ". | Move the allfiles.tar archive from question 1 to the question2 directory and extract all the files. | Remove the archive and create a new archive with cpio of all the files. | Create a tar archive with cpio of all the files including the cpio archive. | Remove all the files except the tar archive. | Extract all the archive using cpio Take a screenshot of all the commands you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7/#question-2--cpio-utility",
    "relUrl": "/labs/lab7/#question-2--cpio-utility"
  },"122": {
    "doc": "Lab 7",
    "title": "Question 3 | Gzip, bzip2, xz",
    "content": ". | In the question3 directory you will find 1 file called mynotes.txt. What is the size of this file? | Compress mynotes.txt. using gzip keeping the original file. | Compress smynotes.txt. using bzip2 keeping the original file. | Compress smynotes.txt. using xz keeping the original file. | Long list all the files. Which tool gave you the best compression? Take a screenshot of all the commands you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7/#question-3--gzip-bzip2-xz",
    "relUrl": "/labs/lab7/#question-3--gzip-bzip2-xz"
  },"123": {
    "doc": "Lab 7",
    "title": "Question 4 | Zip, 7zip and Rar",
    "content": ". | Decompress all the compressed files from question 3 in the question4 directory. Make sure to rename the file after decompressing them. | Using zip, create a zip archive of all the files. | Create a 7zip archive of all the files. | Create a rar archive using 7zip of all the files. | Long list all the archives. Which one gave you the best compression ratio? Take a screenshot of all the commands you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab7/#question-4--zip-7zip-and-rar",
    "relUrl": "/labs/lab7/#question-4--zip-7zip-and-rar"
  },"124": {
    "doc": "Lab 7",
    "title": "Lab 7",
    "content": " ",
    "url": "http://localhost:4000/labs/lab7/",
    "relUrl": "/labs/lab7/"
  },"125": {
    "doc": "Lab 8",
    "title": "Lab 8: File Permissions",
    "content": ". | For this lab, Download and run this script: https://robertalberto.com/cis106/lab8.sh | Use: curl https://robertalberto.com/cis106/lab8.sh | bash. | Video here | . ",
    "url": "http://localhost:4000/labs/lab8/#lab-8-file-permissions",
    "relUrl": "/labs/lab8/#lab-8-file-permissions"
  },"126": {
    "doc": "Lab 8",
    "title": "Question 1 | Use symbolic notation",
    "content": ". | Long list all the files in directory1. | Modify the files permissions such that: | . | Type of file | Owner | Group | Other | . | Directory | rwx | rw- | r– | . | Image | rw- | r-x | — | . | Python | rw- | rw- | — | . | Text | rwx | rwx | r– | . | Long list all the files in directory1 Take a screenshot of all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab8/#question-1--use-symbolic-notation",
    "relUrl": "/labs/lab8/#question-1--use-symbolic-notation"
  },"127": {
    "doc": "Lab 8",
    "title": "Question 2 | Use numeric notation",
    "content": ". | Long list all the files in directory2. | Modify the files permissions such that: | . | Type of file | Owner | Group | Other | . | Directory | rwx | rw- | r– | . | Image | rw- | r-x | — | . | Python | rw- | rw- | — | . | Text | rwx | rwx | r– | . | Long list all the files in directory2 Take a screenshot of all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab8/#question-2--use-numeric-notation",
    "relUrl": "/labs/lab8/#question-2--use-numeric-notation"
  },"128": {
    "doc": "Lab 8",
    "title": "Question 3 | Use numeric notation",
    "content": ". | Long list all the files in directory3 | Modify the files permission such that: | . | Type of file | Owner | Group | Other | . | Directory | r-x | rw- | –X | . | Image | rwx | rwx | rwx | . | Python | rwx | r-x | rw- | . | Text | r-x | rw- | — | . | Long list all the files in directory3 Take a screenshot of all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab8/#question-3--use-numeric-notation",
    "relUrl": "/labs/lab8/#question-3--use-numeric-notation"
  },"129": {
    "doc": "Lab 8",
    "title": "Question 4 | Use symbolic notation",
    "content": ". | Long list all the files in directory4 | Modify the files permission such that: | . | Type of file | Owner | Group | Other | . | Directory | –X | -wx | rw- | . | Image | rwx | r-x | — | . | Python | -w- | –X | r– | . | Text | r-x | r-w | -wx | . | Long list all the files in directory4 Take a screenshot of all the commands that you used to complete this question . | . ",
    "url": "http://localhost:4000/labs/lab8/#question-4--use-symbolic-notation",
    "relUrl": "/labs/lab8/#question-4--use-symbolic-notation"
  },"130": {
    "doc": "Lab 8",
    "title": "What will you submit?",
    "content": "The URL of lab8.md with all the screenshots. ",
    "url": "http://localhost:4000/labs/lab8/#what-will-you-submit",
    "relUrl": "/labs/lab8/#what-will-you-submit"
  },"131": {
    "doc": "Lab 8",
    "title": "Lab 8",
    "content": " ",
    "url": "http://localhost:4000/labs/lab8/",
    "relUrl": "/labs/lab8/"
  },"132": {
    "doc": "Lab 9",
    "title": "Lab 9 Shell scripting part 1",
    "content": ". | Video here | Link to presentation: https://rapurl.live/4x7 | . Special Note: Try to do each script before you see the solution. This will allow you practice your critical thinking. If you complete the script in a way that gives you the same output as mine, submit your script instead of mine. Do not overthink it, if you feel like it is too much, simple continue with the video but try to understand the script before you continue with the next. ",
    "url": "http://localhost:4000/labs/lab9/#lab-9-shell-scripting-part-1",
    "relUrl": "/labs/lab9/#lab-9-shell-scripting-part-1"
  },"133": {
    "doc": "Lab 9",
    "title": "Question 1",
    "content": "Create a script that long list a given absolute path. The output of the script should be as follows: For your convenience, the user input has been highlighted. Take as screenshot of your script and the output of your script after you run it. ",
    "url": "http://localhost:4000/labs/lab9/#question-1",
    "relUrl": "/labs/lab9/#question-1"
  },"134": {
    "doc": "Lab 9",
    "title": "Question 2",
    "content": "Create a script that asks the user for their name and then checks if the user has an account in the computer. The output of the script if the user has an account should be as follows: . Take as screenshot of your script and the output of your script after you run it. ",
    "url": "http://localhost:4000/labs/lab9/#question-2",
    "relUrl": "/labs/lab9/#question-2"
  },"135": {
    "doc": "Lab 9",
    "title": "Question 3",
    "content": "Create a script that uses command substitution to create the following variables: . | The IP address of the machine | Used amount of ram | total amount of ram | Size of the hard drive | Available hard drive space | total number of users that can login into the system | hostname The output of the script should look like this: | . Take as screenshot of your script and the output of your script after you run it. ",
    "url": "http://localhost:4000/labs/lab9/#question-3",
    "relUrl": "/labs/lab9/#question-3"
  },"136": {
    "doc": "Lab 9",
    "title": "Question 4",
    "content": "Combine all the scripts into one. Use parameter variables to launch each script so that when the user runs the script with a given number as an argument, the right script runs. Here is a graphical description. ",
    "url": "http://localhost:4000/labs/lab9/#question-4",
    "relUrl": "/labs/lab9/#question-4"
  },"137": {
    "doc": "Lab 9",
    "title": "What will you submit?",
    "content": "The URL of lab9.md with all the screenshots. ",
    "url": "http://localhost:4000/labs/lab9/#what-will-you-submit",
    "relUrl": "/labs/lab9/#what-will-you-submit"
  },"138": {
    "doc": "Lab 9",
    "title": "Lab 9",
    "content": " ",
    "url": "http://localhost:4000/labs/lab9/",
    "relUrl": "/labs/lab9/"
  },"139": {
    "doc": "Homework 0",
    "title": "Complete The following Tasks",
    "content": ". | Complete Lab 0 - Learning Markdown | Complete Discussion Board 1 - Introduce Yourself | Read the Document: “Final Project Description” | Install Slack in your phone and computer | Week 0 Report must contain the following: . | A summary of the presentation for week 0 | A screenshot of your github account page | Select 3 projects that you are interested in. You you choose the default project, simply state that you will be completing the default project. | . | . Use the following template for your Week Report . # Week Report 0 ## Summary of Presentation: Introduction to CIS 106 Write your summary here ## My github account ![my github account](imageHere.png) ## Final Project Research: Pick a project Answer the question here . ",
    "url": "http://localhost:4000/homework:/homework0#complete-the-following-tasks",
    "relUrl": "/homework:/homework0#complete-the-following-tasks"
  },"140": {
    "doc": "Homework 0",
    "title": "Homework 0",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework0",
    "relUrl": "/homework:/homework0"
  },"141": {
    "doc": "Homework 1",
    "title": "Homework 1",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework1",
    "relUrl": "/homework:/homework1"
  },"142": {
    "doc": "Homework 2",
    "title": "Homework 2",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework2",
    "relUrl": "/homework:/homework2"
  },"143": {
    "doc": "Homework 3",
    "title": "Homework 3",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework3",
    "relUrl": "/homework:/homework3"
  },"144": {
    "doc": "Homework 4",
    "title": "Homework 4",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework4",
    "relUrl": "/homework:/homework4"
  },"145": {
    "doc": "Homework 5",
    "title": "Homework 5",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework5",
    "relUrl": "/homework:/homework5"
  },"146": {
    "doc": "Homework 6",
    "title": "Homework 6",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework6",
    "relUrl": "/homework:/homework6"
  },"147": {
    "doc": "Homework 7",
    "title": "Homework 7",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework7",
    "relUrl": "/homework:/homework7"
  },"148": {
    "doc": "Homework 8",
    "title": "Homework 8",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework8",
    "relUrl": "/homework:/homework8"
  },"149": {
    "doc": "Homework 9",
    "title": "Homework 9",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework9",
    "relUrl": "/homework:/homework9"
  },"150": {
    "doc": "Default Final Project Example Layout",
    "title": "Using Ubuntu 20.04 as an every day computer",
    "content": ". | Using Ubuntu 20.04 as an every day computer . | Introduction | Project Requirements | What is Linux? . | Short History of Linux | Linux Distributions . | Slackware . | Examples of Distributions Based on Slackware | . | Debian . | Examples of Distributions Based on Debian | . | Redhat . | Examples of Distributions Based on Redhat | . | . | Open Source VS Closed Source | . | What is Ubuntu? | Installing Ubuntu In A Virtual Machine . | What is Virtualization? | VirtualBox | Installing Ubuntu In VirtualBox | . | Updating Ubuntu | Install software . | Ubuntu Software Center | Installing Software Via The Command Line | . | Basic Linux Commands | Connecting Ubuntu to the internet | Every day tasks In Ubuntu . | Internet browsing | Reading email | Remote assistance | Office productivity (writing documents, editing spreadsheets and doing presentations) | Streaming music and video | Video games | Video Chatting/calling/conferencing | Texting/Instant messaging | Programing | Educational Applications (dictionaries and that kind of stuff) | . | How to get help with your Ubuntu machine | Sources | . | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#using-ubuntu-2004-as-an-every-day-computer",
    "relUrl": "/project/finalProjectExample/#using-ubuntu-2004-as-an-every-day-computer"
  },"151": {
    "doc": "Default Final Project Example Layout",
    "title": "Introduction",
    "content": "Duis incididunt laboris cillum amet qui ex consequat sunt id. Laboris non in elit quis consequat pariatur veniam quis ad consequat.Cillum aliquip aliqua laboris exercitation mollit adipisicing. Magna quis adipisicing elit duis duis ad. Deserunt minim nisi excepteur mollit sunt id in non occaecat nostrud quis aliquip. Veniam dolore voluptate pariatur reprehenderit in quis proident occaecat adipisicing in magna veniam magna. Et amet commodo fugiat pariatur fugiat et officia dolor aute voluptate velit irure. Ad sunt est commodo sit fugiat. Nisi aliquip qui aute dolore pariatur quis ea. Cillum sunt ut ipsum fugiat ut ipsum dolor. Dolor aliqua cillum occaecat qui adipisicing anim laboris labore aliquip. Officia tempor exercitation reprehenderit officia elit velit tempor in occaecat do. ",
    "url": "http://localhost:4000/project/finalProjectExample/#introduction",
    "relUrl": "/project/finalProjectExample/#introduction"
  },"152": {
    "doc": "Default Final Project Example Layout",
    "title": "Project Requirements",
    "content": ". | Dolore cupidatat et aliqua in id laboris Lorem fugiat excepteur sint id eu amet deserunt. | Exercitation deserunt culpa esse sint sint ipsum exercitation aliqua tempor ad nisi. | Dolore ipsum cupidatat labore anim nostrud non sunt non. | Nostrud tempor elit dolore laborum excepteur id ad in velit dolore. | Eiusmod in mollit esse laboris mollit officia laboris aliqua minim commodo nulla. | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#project-requirements",
    "relUrl": "/project/finalProjectExample/#project-requirements"
  },"153": {
    "doc": "Default Final Project Example Layout",
    "title": "What is Linux?",
    "content": "Tempor ut ut ullamco labore minim esse officia nisi nulla aute. Proident laboris fugiat sint consectetur do sunt incididunt commodo ipsum ex pariatur commodo. Ad laborum adipisicing velit exercitation exercitation nostrud ea. Ea nisi et est laborum sunt est id cillum. Mollit nulla dolore Lorem veniam excepteur Lorem ex sit aute nostrud qui. Qui duis non exercitation consequat aliqua aliqua officia cillum do. Commodo elit dolore enim quis aute. Laboris minim id laboris excepteur. Cillum consectetur consequat minim dolor sunt sunt fugiat dolor. Officia consectetur esse ut est esse elit eu amet sit sit. Short History of Linux . | Aliquip et laboris esse qui laboris enim. | Sunt esse non eu exercitation id cupidatat. | Culpa est enim officia exercitation fugiat amet enim. | Ullamco occaecat pariatur officia ullamco officia. | Consectetur proident in amet sunt qui amet qui enim est anim laboris. | Do dolore sit ullamco deserunt dolore ut magna enim irure qui et sit deserunt. | Excepteur officia excepteur excepteur ad enim eu. | Sint dolore fugiat incididunt ad qui. | Consectetur ut exercitation qui pariatur consequat magna. | Fugiat Lorem eiusmod pariatur eu. | . Linux Distributions . Dolor aliqua esse pariatur excepteur anim veniam do ea Lorem adipisicing adipisicing esse. Et pariatur magna in magna officia voluptate proident. Occaecat ipsum mollit veniam velit ad ea veniam consequat sint sunt. Slackware . Quis veniam sit voluptate anim ea commodo. Ullamco minim duis laborum laborum. Aliquip exercitation aliqua aliquip consectetur ut irure et et exercitation id occaecat ad consequat. Laborum eu voluptate elit consequat ut minim cupidatat ullamco reprehenderit incididunt. Adipisicing laborum sunt consequat laboris cupidatat mollit excepteur commodo. Examples of Distributions Based on Slackware . | Distribution Name | Release Date | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . Debian . Quis veniam sit voluptate anim ea commodo. Ullamco minim duis laborum laborum. Aliquip exercitation aliqua aliquip consectetur ut irure et et exercitation id occaecat ad consequat. Laborum eu voluptate elit consequat ut minim cupidatat ullamco reprehenderit incididunt. Adipisicing laborum sunt consequat laboris cupidatat mollit excepteur commodo. Examples of Distributions Based on Debian . | Distribution Name | Release Date | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . Redhat . Quis veniam sit voluptate anim ea commodo. Ullamco minim duis laborum laborum. Aliquip exercitation aliqua aliquip consectetur ut irure et et exercitation id occaecat ad consequat. Laborum eu voluptate elit consequat ut minim cupidatat ullamco reprehenderit incididunt. Adipisicing laborum sunt consequat laboris cupidatat mollit excepteur commodo. Examples of Distributions Based on Redhat . | Distribution Name | Release Date | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . | distro name here | Date Released here | . Open Source VS Closed Source . Et sint culpa fugiat duis esse. Nulla occaecat elit eiusmod ea fugiat magna labore ipsum culpa nostrud dolor. Officia excepteur laboris eu minim sunt officia ut. Non quis laborum consequat cillum anim ut. Labore aute reprehenderit tempor exercitation tempor cillum. Ullamco mollit pariatur fugiat tempor nulla labore qui ad. Nostrud aliqua laborum minim exercitation incididunt amet adipisicing deserunt enim commodo amet. Do magna incididunt in et nostrud ipsum voluptate sint ipsum. In dolor excepteur sit nostrud labore mollit aliqua. Consectetur tempor adipisicing magna laboris laborum. Laboris ut pariatur laborum laboris adipisicing reprehenderit excepteur ad Lorem sit veniam est quis. Eiusmod deserunt adipisicing duis deserunt id. Est irure velit exercitation veniam sint. Non laboris labore veniam eiusmod Lorem incididunt. Velit cupidatat reprehenderit anim ut minim esse in. Eiusmod velit nulla consequat velit dolore commodo aliqua. Dolore dolore est proident aliquip veniam id id amet eiusmod exercitation do ipsum cupidatat elit. ",
    "url": "http://localhost:4000/project/finalProjectExample/#what-is-linux",
    "relUrl": "/project/finalProjectExample/#what-is-linux"
  },"154": {
    "doc": "Default Final Project Example Layout",
    "title": "What is Ubuntu?",
    "content": "Tempor ad Lorem eu pariatur irure pariatur nisi. Enim dolore duis do et ut. Elit proident officia adipisicing ipsum. Anim proident est incididunt dolore cillum nulla sint esse culpa id dolore ex dolor labore. Dolore cillum qui officia aute nostrud id esse sint cupidatat non aliqua sint officia. Amet irure qui velit aliqua in deserunt id. Proident aliqua nostrud sit qui. Sunt veniam irure aliquip ad proident aute. Tempor nostrud in commodo in tempor enim exercitation. Sint esse velit enim culpa ex et. Fugiat reprehenderit culpa anim deserunt amet nisi sunt mollit commodo occaecat. Enim veniam fugiat anim occaecat et quis ad et anim ullamco dolor ipsum magna. Ut irure cupidatat aute non eiusmod commodo veniam aliqua occaecat officia laborum. ",
    "url": "http://localhost:4000/project/finalProjectExample/#what-is-ubuntu",
    "relUrl": "/project/finalProjectExample/#what-is-ubuntu"
  },"155": {
    "doc": "Default Final Project Example Layout",
    "title": "Installing Ubuntu In A Virtual Machine",
    "content": "What is Virtualization? . Dolor quis amet magna nostrud nostrud anim exercitation et culpa anim. Nisi incididunt laborum mollit veniam nulla laboris consectetur commodo sunt cupidatat sint esse et ea. Consectetur sunt ea officia excepteur dolore eu commodo non pariatur aute esse elit et. Reprehenderit et in cillum in in dolor sint dolor est. Ad quis nisi ipsum velit incididunt veniam ipsum sunt tempor elit laborum eu. Qui anim aliquip ipsum do nostrud adipisicing amet. Laboris veniam do velit Lorem irure adipisicing cupidatat. Incididunt cupidatat non laborum ea nostrud nisi aliquip. Lorem aute commodo do laborum ex in commodo fugiat est aute. Aute aliqua cupidatat qui aliquip pariatur. VirtualBox . Eiusmod velit consectetur labore elit eiusmod ipsum adipisicing ad eu. Nostrud consectetur commodo est magna ea cillum do dolore ad. Ullamco quis ad aliquip minim tempor incididunt aliqua culpa est tempor. Enim minim pariatur qui voluptate consequat laboris velit laboris. Nostrud incididunt sint reprehenderit eu tempor do enim fugiat dolor exercitation. Dolor ea elit sint do reprehenderit. Excepteur voluptate quis ullamco fugiat sint aliquip sint sunt voluptate non. Nisi aliqua occaecat elit adipisicing anim mollit reprehenderit sunt. Tempor ex dolore labore occaecat in cillum elit est laboris deserunt dolore laborum. Eiusmod sunt laborum ullamco eu. Installing Ubuntu In VirtualBox . | Step 1: Irure quis laboris ad occaecat sit nulla quis esse anim. | Step 2: Consectetur do in deserunt aliqua minim quis sit veniam. | Step 3: Excepteur ea eiusmod voluptate non occaecat incididunt minim voluptate do. | Step 4: Enim in ut Lorem nostrud id. | Step 5: Non sunt et consequat ut occaecat qui nisi sunt laborum laborum id proident duis. | Step 6: Cupidatat aliqua officia culpa ut cupidatat ex tempor consequat consectetur sit consectetur officia veniam. | Step 7: Cillum ut dolore qui et ipsum eiusmod commodo nulla elit minim et. | Step 8: Dolore nulla minim consequat sint aliquip ex labore. | Step 9: Laborum in eu eu minim incididunt elit. | Step 10: Minim fugiat adipisicing qui nostrud. | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#installing-ubuntu-in-a-virtual-machine",
    "relUrl": "/project/finalProjectExample/#installing-ubuntu-in-a-virtual-machine"
  },"156": {
    "doc": "Default Final Project Example Layout",
    "title": "Updating Ubuntu",
    "content": "Deserunt laboris quis dolor laborum incididunt laborum id incididunt. Exercitation quis sit cillum ad tempor proident excepteur. Ad consequat excepteur adipisicing duis voluptate aliquip fugiat eiusmod amet sunt nostrud. Irure labore nulla laboris dolor irure commodo nulla veniam sit dolor laboris ipsum laboris nulla. Do ea enim esse duis ullamco veniam sunt culpa duis dolore ex aliqua esse in. Excepteur laboris nisi est incididunt consectetur voluptate ullamco ex enim ut aliquip sit labore. Fugiat minim veniam veniam amet duis sunt velit incididunt irure culpa consequat fugiat dolore. Id amet aute labore incididunt. Dolor irure et fugiat consequat mollit cillum sint enim reprehenderit amet veniam cillum nulla. Culpa minim excepteur voluptate cupidatat veniam eu ea et. ",
    "url": "http://localhost:4000/project/finalProjectExample/#updating-ubuntu",
    "relUrl": "/project/finalProjectExample/#updating-ubuntu"
  },"157": {
    "doc": "Default Final Project Example Layout",
    "title": "Install software",
    "content": "Ubuntu Software Center . Consequat occaecat dolor id magna ad irure adipisicing incididunt qui mollit dolor qui esse. Laborum officia laborum in sit sunt nulla esse pariatur dolore. In velit ut voluptate duis. Minim est occaecat amet quis adipisicing ullamco mollit qui. Aliquip Lorem adipisicing eu ipsum voluptate officia exercitation ex. Ut eiusmod velit incididunt sint. Eiusmod fugiat aliquip id excepteur dolor dolor id quis dolore dolore id ullamco veniam id. Laboris sint labore et deserunt. Ex occaecat Lorem excepteur deserunt elit Lorem in veniam consectetur consequat eu ex ut. Duis qui nulla ex consectetur voluptate. Officia enim cillum nisi aute eiusmod Lorem. Installing Software Via The Command Line . Et minim Lorem sunt deserunt et adipisicing consectetur cillum id amet officia. Officia laboris ullamco nisi qui id. Deserunt duis eiusmod est consequat non ipsum esse. Ex labore ex labore proident voluptate amet dolor adipisicing velit ullamco. Aute in do et cillum et veniam consectetur incididunt sit fugiat ea. Ex commodo duis ipsum excepteur aute velit irure nulla. Veniam enim minim proident nostrud non voluptate voluptate nulla veniam mollit nostrud. Occaecat sunt laboris mollit ut consectetur eiusmod aliquip labore. Amet ut aliqua ad reprehenderit. Ex laborum sit laborum irure sit. Eiusmod eu exercitation non et sunt veniam quis elit sit quis aute aute. Duis sunt irure excepteur deserunt amet exercitation voluptate aute sint. Cupidatat eiusmod cupidatat incididunt adipisicing. ",
    "url": "http://localhost:4000/project/finalProjectExample/#install-software",
    "relUrl": "/project/finalProjectExample/#install-software"
  },"158": {
    "doc": "Default Final Project Example Layout",
    "title": "Basic Linux Commands",
    "content": ". | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | Command: . | Description: . | command description here | . | Usage: . | command + option + argument | . | Examples: . | Description: . | command example | . | Description: . | command example | . | Description: . | command example | . | . | . | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#basic-linux-commands",
    "relUrl": "/project/finalProjectExample/#basic-linux-commands"
  },"159": {
    "doc": "Default Final Project Example Layout",
    "title": "Connecting Ubuntu to the internet",
    "content": "Quis eu nulla pariatur cupidatat aliqua dolor exercitation ullamco aute quis adipisicing do deserunt. Ea eu nisi est officia ex. Sit sunt tempor adipisicing irure consequat laborum cupidatat et esse occaecat. Ex non ullamco in adipisicing excepteur ipsum. Laborum proident cupidatat mollit nulla cillum magna esse quis deserunt culpa excepteur aute. Aliquip sit eiusmod pariatur ut officia ea nostrud. Velit anim ipsum excepteur et elit non sit in consectetur exercitation ad. Id ad incididunt velit consequat in nostrud laboris sit irure veniam. Reprehenderit ullamco et commodo sit laborum Lorem nisi laboris commodo eiusmod id exercitation. Ipsum do nisi est nulla ea. Commodo eu fugiat minim dolor quis ullamco culpa cupidatat ullamco nostrud nisi qui. ",
    "url": "http://localhost:4000/project/finalProjectExample/#connecting-ubuntu-to-the-internet",
    "relUrl": "/project/finalProjectExample/#connecting-ubuntu-to-the-internet"
  },"160": {
    "doc": "Default Final Project Example Layout",
    "title": "Every day tasks In Ubuntu",
    "content": "Internet browsing . Et irure duis incididunt laborum exercitation nulla. Laborum consequat proident anim deserunt. Ea sint dolore duis eu magna consequat exercitation velit irure veniam aute elit. Eiusmod elit enim qui ea aliqua amet esse aliquip pariatur. Adipisicing in voluptate labore voluptate ad magna labore adipisicing quis occaecat duis fugiat culpa duis. Adipisicing nostrud et do sunt. Reading email . Fugiat ut eu irure id irure sunt nostrud cupidatat ea laborum aliquip aute exercitation. Aute exercitation aliqua mollit nisi cupidatat. Duis exercitation dolor quis ut anim dolore minim. Et nostrud veniam eiusmod esse ipsum quis consectetur nulla irure sunt pariatur non magna ipsum. Tempor adipisicing tempor velit reprehenderit veniam ea id ipsum excepteur pariatur sunt. Sit ipsum velit consectetur qui id occaecat dolore sint eiusmod sunt aliqua consequat eiusmod. Remote assistance . Cupidatat commodo id in tempor esse minim sunt magna occaecat. Eiusmod mollit exercitation officia labore irure occaecat id culpa irure. Quis esse culpa et adipisicing nisi culpa tempor. In cillum labore consequat cupidatat sint id do laborum qui qui commodo incididunt consequat. Office productivity (writing documents, editing spreadsheets and doing presentations) . Tempor officia irure irure pariatur. Amet labore excepteur culpa aliqua ullamco irure sint laboris culpa velit mollit deserunt laborum. Reprehenderit ex esse consectetur reprehenderit qui. Dolore sunt in esse consectetur ipsum sunt sunt. Streaming music and video . Irure excepteur do qui ipsum duis ex. Eu anim mollit ex voluptate qui ullamco ipsum eu irure adipisicing ipsum reprehenderit et incididunt. Anim nulla qui laborum qui voluptate ad officia aute cillum ullamco incididunt enim reprehenderit. Reprehenderit veniam ad velit cillum enim nulla velit Lorem deserunt laboris. Video games . Minim irure nostrud non sint anim enim. Esse veniam irure enim aliqua velit est tempor laborum aliqua aliquip amet velit dolor voluptate. Cupidatat ullamco fugiat eiusmod veniam consequat enim Lorem tempor Lorem dolore cupidatat. Lorem sint deserunt aute aliqua adipisicing officia tempor veniam occaecat. Video Chatting/calling/conferencing . Aliqua fugiat aliquip officia duis voluptate. Do commodo laboris sunt cupidatat occaecat elit ex ipsum deserunt. Esse nulla officia excepteur quis mollit cupidatat tempor incididunt occaecat consequat duis aliqua. Adipisicing occaecat ex ea dolor amet culpa laborum quis mollit occaecat ipsum. Fugiat duis labore incididunt magna velit sint irure magna magna deserunt et minim exercitation. Commodo anim id officia ea et eu do id esse sit. Texting/Instant messaging . Eu qui velit deserunt eu commodo est nulla exercitation est non cillum. Laborum Lorem incididunt eiusmod ut aliqua. Cupidatat laborum commodo anim magna sunt in. Programing . Nulla ex non incididunt consectetur excepteur dolore reprehenderit nisi ea tempor veniam et tempor velit. Magna quis eiusmod amet minim ex irure cupidatat occaecat dolor. Mollit ex do est proident dolor incididunt deserunt consectetur. Occaecat tempor duis fugiat labore aliqua. Aliqua ad commodo laborum sunt dolor ipsum veniam minim ex ex cillum. Sunt quis officia et id Lorem dolore ea tempor occaecat sit mollit velit adipisicing. Nostrud exercitation nisi voluptate adipisicing dolor ut incididunt deserunt dolor officia id. Educational Applications (dictionaries and that kind of stuff) . Anim nostrud aliquip quis irure. Excepteur Lorem exercitation ex incididunt laboris eu ut. Dolore occaecat consectetur Lorem proident quis eiusmod amet amet non reprehenderit ex. Cupidatat sunt eu et irure occaecat occaecat incididunt do pariatur. Esse duis eiusmod mollit in excepteur. Nostrud magna incididunt labore tempor voluptate ad. ",
    "url": "http://localhost:4000/project/finalProjectExample/#every-day-tasks-in-ubuntu",
    "relUrl": "/project/finalProjectExample/#every-day-tasks-in-ubuntu"
  },"161": {
    "doc": "Default Final Project Example Layout",
    "title": "How to get help with your Ubuntu machine",
    "content": "Veniam est mollit sit cillum. Id dolor enim pariatur eiusmod elit et in pariatur ea est aliquip ad fugiat. Velit ullamco magna esse sint elit id. Nulla do do laborum excepteur excepteur minim aliqua ad aliquip nisi consequat exercitation. Et incididunt commodo ipsum esse proident laboris consequat culpa fugiat. Aliqua sunt qui cupidatat est elit ut occaecat. Ex sunt labore nisi ullamco nisi nisi et elit aute ullamco reprehenderit adipisicing cupidatat. Nostrud voluptate id ad deserunt quis exercitation sint aliqua deserunt dolor ipsum sunt. Duis dolore nostrud occaecat id labore velit. Et labore commodo reprehenderit dolore laborum fugiat id aliqua amet. Nisi qui reprehenderit Lorem ut fugiat ullamco. Exercitation sint excepteur veniam duis adipisicing irure laboris eu. Labore anim laboris sit voluptate do sunt aute qui cupidatat. Consectetur laboris culpa commodo consequat deserunt dolor laboris laboris quis. Et enim aute commodo irure excepteur exercitation anim occaecat. ",
    "url": "http://localhost:4000/project/finalProjectExample/#how-to-get-help-with-your-ubuntu-machine",
    "relUrl": "/project/finalProjectExample/#how-to-get-help-with-your-ubuntu-machine"
  },"162": {
    "doc": "Default Final Project Example Layout",
    "title": "Sources",
    "content": ". | Mollit dolor adipisicing tempor ea amet aliquip non nostrud incididunt voluptate proident aliquip. | Veniam ut nostrud aliqua reprehenderit incididunt deserunt mollit id laboris. | Nulla esse sint tempor sint nulla commodo duis sit fugiat nisi minim amet. | . ",
    "url": "http://localhost:4000/project/finalProjectExample/#sources",
    "relUrl": "/project/finalProjectExample/#sources"
  },"163": {
    "doc": "Default Final Project Example Layout",
    "title": "Default Final Project Example Layout",
    "content": " ",
    "url": "http://localhost:4000/project/finalProjectExample/",
    "relUrl": "/project/finalProjectExample/"
  },"164": {
    "doc": "Final Project Example 2",
    "title": "Build a LAMP Stack",
    "content": ". ",
    "url": "http://localhost:4000/project/finalProjectExample2/#build-a-lamp-stack",
    "relUrl": "/project/finalProjectExample2/#build-a-lamp-stack"
  },"165": {
    "doc": "Final Project Example 2",
    "title": "Table of Contents",
    "content": ". | Build a LAMP Stack . | Table of Contents | Project Description | Requirements | Setting Up The Server Environment . | Virtual Machine Specifications | Configuring the server’s operating system . | Setting up UFW | Setting up SSH | . | . | Install The Software . | Apache . | Useful systemctl commands | . | MySQL | PHP | PHPMyAdmin | . | Project Code | Difficulties Encountered | Work Cited | . | . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#table-of-contents",
    "relUrl": "/project/finalProjectExample2/#table-of-contents"
  },"166": {
    "doc": "Final Project Example 2",
    "title": "Project Description",
    "content": "In this project, I am creating a Web application hosted on a Linux server for logging my blood sugar (glucose) levels. The application must meet the following requirements: . | Must provide an input box for entering an integer value for the current glucose level. | Every entry must be saved to a database including the time stamp | Must provide a way to display a table of all the entries arranged by date and time | . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#project-description",
    "relUrl": "/project/finalProjectExample2/#project-description"
  },"167": {
    "doc": "Final Project Example 2",
    "title": "Requirements",
    "content": "The project requires the use of a LAMP Stack (Linux, Apache, Mysql, and PHP). I am using the following specifications: . | Linux Distribution: Ubuntu Server 20.04 | Web Server: Apache | DBMS: MariaDB (from the standard software repositories) | Php version: PHP 7 | . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#requirements",
    "relUrl": "/project/finalProjectExample2/#requirements"
  },"168": {
    "doc": "Final Project Example 2",
    "title": "Setting Up The Server Environment",
    "content": "Virtual Machine Specifications . The virtual machine is built on HyperV in a Windows 10 Pro64 bit host. The host hardware specifications are: . The Virtual machine specifications are: . | RAM: 2GB | CPU: 2 cores | Network adapter: 1 NIC in Bridge configuration to make development easy | . Configuring the server’s operating system . After installing Ubuntu Server in the virtual machine, there are some configurations that need to be done before installing a web server and a database. It is essential to set up a firewall so that only connections to certain services are allowed. Additionally, SSH needs to be set up so that a remote connection to the server can be performed. For this project, I have enabled ssh to use keys for authentication instead of the default username and password functionality. Setting up UFW . Ubuntu uses ufw (uncomplicated firewall) as the default firewall configuration tool for iptables. Ufw can block services by port, network interface, and IP addresses. The following commands are used to set it up: . | To check the firewall status: sudo ufw status | To list all applications that have register their profiles with UFW: sudo ufw app list | To enable/disable/reload the firewall sudo ufw enable|disable|reload | To allow SSH connections sudo ufw allow openssh | To block an IP address sudo ufw deny from 10.10.2.5 | To allow/deny connections from a given port ``sudo ufw allow|deny 21` | To allow/deny incoming HTTP requests sudo ufw allow|deny http | To allow/deny all incoming traffic from HTTP or https sudo ufw allow|deny proto tcp from any to any port 80,443 | . For this project, It is necessary to make sure that the firewall is working and that at least for now ssh connections are permitted. To accomplish this use the following 1 liner: ` sudo ufw allow openssh; sudo ufw enable; sudo ufw status` . Setting up SSH . Before setting up SSH keys, it is important to make sure that a connection with only the username and password can be made. In Windows, you can use Putty which is a free SSH and Telnet client, or If your Windows 10 host computer is updated to the latest version, you should be able to use OpenSSH in Powershell or the Windows terminal. To connect to the virtual machine, all is needed is the IP address of the machine and making sure that the server has a network interface card in bridge mode. In Hyper-V, you need to create a virtual switch and then assign the virtual switch to the NIC of the VM. In the virtual switch management dialog box, the new switch needs to be set to External Network, and Allow management of the OS to share the network adapter needs to be checked. To obtain the IP address of the server using any of the following commands: . | The hostname command will display all the IP addresses assigned to the host. hostname -I | The ifconfig and ip commands are used for configuring network interfaces. Ifconfig is deprecated as it is part of the net-tools package. Ip is the command that replaces the ifconfig command. If the examples below do not work for you, use the ifconfig command or ip command without the pipes, and examine the output carefully. | ifconfig | grep “inet” | head -1 | ip addr | grep “inet” | head - 3 | tail -1 | . | . To connect to the Ubuntu Server, in your Windows Terminal/Powershell type: . ssh your-username-in-the-server@ip-of-your-server . You will be asked to provide the user’s password and after successfully entering it, you will be connected to the server from your host computer. Because connecting to the server will be a repetitive task, I have set up SSH keys so that I do not have to type a password to connect. To create an SSH key, type the following command on the machine that will be connecting to the server: . ssh-keygen.exe . The command will generate an ssh-key and it will store it in a dedicated directory. Once the key is generated, we need to copy it to the Ubuntu Server. Use this command to achieve this task: . scp C:\\Users\\[username]\\.ssh\\id_rsa.pub your-username-in-the-server@ip-of-your-server:/home/username . Once you have copied the SSH key, connect to the server one more time so that you can place the key in its appropriate directory. Use the following commands: . | ssh your-username-in-the-server@ip-of-your-server | cat id_rsa.pub &gt;&gt; .ssh/authorized_keys | . Now you should be able to connect to the server without the need of a password. ",
    "url": "http://localhost:4000/project/finalProjectExample2/#setting-up-the-server-environment",
    "relUrl": "/project/finalProjectExample2/#setting-up-the-server-environment"
  },"169": {
    "doc": "Final Project Example 2",
    "title": "Install The Software",
    "content": "Apache . Apache HTTP Server is an Open Source and Free Software web server software available in Linux, Windows, macOS, Solaris, and BSD. To install Apache on Ubuntu use the following command: . sudo apt install apache2 . Once Apache has been installed, it needs to be enabled and restarted. Enabling a service in a Linux System means that such service/daemon will run on startup. To enable and restart Apache use the following command: . sudo systemctl enable apache2 &amp;&amp; sudo systemctl restart apache2 . In the command above the Systemctl program is used for managing Systemd which is Ubuntu’s init system and service manager. After enabling and restarting the Apache webserver service, it is required to allow HTTP/HTTPS traffic to the webserver. Use the following command to allow these connections through the firewall: . sudo ufw allow in \"Apache\" . To check if your Apache Web server is running, open a web browser and type your server’s IP address in the URL bar. If your server is running, you should see the page below. If your server is not running, you can use the Systemctl useful commands and Apache log files to find the root cause of the problem. Keep in mind that the server must be in the same network as the client machine from where you attempted to visit the server’s IP. Useful systemctl commands . | To view active Systemd jobs: systemctl list-jobs | To view the default run level: systemctl get-default | To stop a running service: systemctl stop service-name-here | To start a service: systemctl start service-name-here | To restart a running service: systemctl restart service-name-here | To reload any service config’s file: systemctl reload service-name-here | To see the status of a service: systemctl status service-name-here | To enable a service on startup: systemctl enable service-name-here | To prevent a service from stating up at boot: systemctl disable service-name-here | . Apache saves logs files in the directory /var/log/apache2. The apache2 directory contains 2 files: access.log and error.log. The access.log file stores information about requests coming into the web server. The error.log file stores information about errors the web server encountered when processing requests. To review these log files, use the commands cat, tac, head, tail, and grep. You can find examples of these commands in my website. Another useful tool when troubleshooting issues with logs is the program Journalctl. Journalctl is used for querying and displaying logs from journald, systemd’s logging service. Without any argument, journalctl returns the full contents of the journal, starting with the oldest entry collected. Journalctl is efficient in outputting logs in multiple formats, for example, the following command will show Apache logs formatted in JSON: journalctl -u apache2.service -r -o json-pretty . MySQL . To install MySQL in Ubuntu use the following command: sudo apt install mysql-server. After installing mysql-server, it is vital to run mysql_secure_installation to remove some insecure default settings and lock down access to the database. sudo mysql_secure_installation . PHP . PHP is an open-source general-purpose scripting language for the web. PHP was invented by Rasmus Lerdorf in 1994. In PHP, different from JavaScript, the code is executed on the web server and then the client receives the result of the execution in HTML. To install PHP in Ubuntu Server run the following command: . sudo apt install php libapache2-mod-php php-mysql . To test if PHP has been installed and it is running correctly, we can build a simple PHP page that will show the information about your PHP installation. First, make a backup of your index.html page then create a file called index.php and in it, type &lt;?php phpinfo(); ?&gt;. PHPMyAdmin . Since PHP is a server-side programming language, it is useful when dealing with databases. However, managing databases via the command line can easily become a cumbersome chore. PHPMyAdmin is a web-based client that allows developers to manage databases with a simple to use interface. You can use phpMyAdmin to perform most administration tasks, such as creating a database, running queries, and adding user accounts. Before installing PHPMyAdmin, log in to your database, and check the password validation policy. The PHPMyAdmin installer will ask you for a password that matches the validation rules. Here is an example of how it looks: . To install PHPMyAdmin use the following command: sudo apt install phpmyadmin php-mbstring . The PHPMyAdmin installer will ask you for several questions. Each prompt has a description of what is being asked therefore it is pivotal to read everything. Here are the questions and the answers I used: . | Web server to reconfigure automatically: Apache (make sure to hit the space bar to select) | Configure database for phpmyadmin with dbconfig-common? Yes | Connection method for MySQL database of phpmyadmin: Unix Socket | Authentication plugin for MySQL database: Default | MySQL database name for phpmyadmin: it640project | MySQL username for phpmyadmin: robert@localhost | Password: Project640! | . Note: if you encounter the error: 1819 (HY000) do not disable the validate_password plugin, instead, ignore the error and after PHPMyAdmin finishes installing, log into the database and run the create user command with a password that meets the policy. Here is an example:CREATE USER 'robert'@'localhost' IDENTIFIED BY 'Project640!'; FLUSH PRIVILEGES; . To test PHPMyAdmin, go to your web browser and type the username and password you created: . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#install-the-software",
    "relUrl": "/project/finalProjectExample2/#install-the-software"
  },"170": {
    "doc": "Final Project Example 2",
    "title": "Project Code",
    "content": "Once the system is configured and all the software is installed. I proceeded to write the base of the code. The first part is to write a basic HTML form where the user can enter the Glucose number and select the time and day. The HTML is then connected to a PHP script that sends the imputed data into the database. Once the data is in the database, the script runs another query to show all the values that have been entered so far. You can download a copy of the source code here: https://robertalberto.com/it640.tar . . ",
    "url": "http://localhost:4000/project/finalProjectExample2/#project-code",
    "relUrl": "/project/finalProjectExample2/#project-code"
  },"171": {
    "doc": "Final Project Example 2",
    "title": "Difficulties Encountered",
    "content": "MySQL Validate Password Plugin Issue: During the installation of PHPMyAdmin, I came across a problem with the password validation plugin used by MySQL. Regardless of the password chosen, the phpmyadmin installer kept rejecting it. Online I found several solutions that involved uninstalling the plugin, changing the password policy, and creating another user that matches the policy exactly. None of these were viable solutions in my case. I solved this problem by first purging the PHPMyAdmin packages and dependencies, then I logged in to MySQL and created a user. In the installer, I chose to not ignore the problem and then log in to MySQL again and change the password of the newly created user. This user was then given full access to the database and I was able to continue with the project. PHP Error 500 issue Server could not process request While creating the PHP script I kept making syntax mistakes that were not obvious at the time. For instance, misspelling mysqli_connect, using double quotes in the _POST array and forgetting the $ at the beginning of the variable declaration. I decided to enable logging so that I can be aware of when I make these types of mistakes. This helped me out tremendously and I was able to get back on track quickly. ",
    "url": "http://localhost:4000/project/finalProjectExample2/#difficulties-encountered",
    "relUrl": "/project/finalProjectExample2/#difficulties-encountered"
  },"172": {
    "doc": "Final Project Example 2",
    "title": "Work Cited",
    "content": "DigitalOcean. “UFW Essentials: Common Firewall Rules and Commands.” DigitalOcean, DigitalOcean, 18 Sept. 2019, www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands. “Log Files.” Log Files - Apache HTTP Server Version 2.4, httpd.apache.org/docs/2.4/logs.html . “Systemd Cheat Sheet.” Linux Training Academy, www.linuxtrainingacademy.com/systemd-cheat-sheet/. | “Using Journalctl - The Ultimate Guide To Logging.” Log Analysis | Log Monitoring by Loggly, 13 Aug. 2019, www.loggly.com/ultimate-guide/using-journalctl/. | . “What Is PHP?” Php, www.php.net/manual/en/intro-whatis.php. ",
    "url": "http://localhost:4000/project/finalProjectExample2/#work-cited",
    "relUrl": "/project/finalProjectExample2/#work-cited"
  },"173": {
    "doc": "Final Project Example 2",
    "title": "Final Project Example 2",
    "content": " ",
    "url": "http://localhost:4000/project/finalProjectExample2/",
    "relUrl": "/project/finalProjectExample2/"
  }
}

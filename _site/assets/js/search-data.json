{"0": {
    "doc": "Welcome to the course",
    "title": "Welcome to CIS-106-Linux Fundamentals",
    "content": "Here you will find all the information for the course. ",
    "url": "http://localhost:4000/#welcome-to-cis-106-linux-fundamentals",
    "relUrl": "/#welcome-to-cis-106-linux-fundamentals"
  },"1": {
    "doc": "Welcome to the course",
    "title": "COURSE LEARNING OUTCOMES",
    "content": ". | Demonstrate fluency in Linux terminology. | Install Linux and identify features of various distributions. | Manage files in the Linux environment. | Administer user accounts and groups efficiently. | Use Linux Utilities to manage data. | Install software and third-party utilities. | Managing Resources in the Linux networking environment. | Understanding of virtualization with Virtualbox | Understanding of Markdown and proper documentation techniques | . ",
    "url": "http://localhost:4000/#course-learning-outcomes",
    "relUrl": "/#course-learning-outcomes"
  },"2": {
    "doc": "Welcome to the course",
    "title": "Requirements",
    "content": ". | Access to a computer where Linux can be installed. The following are options: . | A virtual machine (Preferred) | A laptop/Desktop computer that you can wipe. | A Raspberry Pi 4 or other capable single board computer | . | Access to Blackboard | A Github account | A Text editor. We will be using VS Code but you can use whatever you want | 2 Hours of study time | Capable to adjust to fast paced course | For virtualization . | A decent PC that meets or exceeds these requirements: . | Quad-Core Processor or modern Dual-Core Processor 2.5 Ghz | 8 Gb of RAM | Windows 10/11 or MacOS | 100 Gb of free space | . | . | Knowledge of the following . | Basic components of a personal computer . | Basic usage of a persona computer | Internet browsing | Reading emails | Chat Applications | Office Productivity Suites (MS Office, Google Docs, etc) | Install/Remove Software | Difference between web browser, the internet, and a search engine Not knowing this things does not mean you will fail the course. It means that you will have to spend extra time studying for the course. | . | . | . ",
    "url": "http://localhost:4000/#requirements",
    "relUrl": "/#requirements"
  },"3": {
    "doc": "Welcome to the course",
    "title": "Advice",
    "content": "If you find that the content of the course is too much or that you have too many gaps in your knowledge, I suggest that you take this course after CIS 180 and CIS 116. ",
    "url": "http://localhost:4000/#advice",
    "relUrl": "/#advice"
  },"4": {
    "doc": "Welcome to the course",
    "title": "Advice 2",
    "content": "If you do not have a decent computer (one that can be used for virtualization) you will have a very poor experience in this course. For this reason, I have alocated a computer in the lab (H311) that you can use. You will need to contact me ahead of time so I can setup a user for you. ",
    "url": "http://localhost:4000/#advice-2",
    "relUrl": "/#advice-2"
  },"5": {
    "doc": "Welcome to the course",
    "title": "Resources",
    "content": ". | Snapshots: . | After installation and update | After installation of basic software: | . | Virtual Machine Specs: . | Hard drive: 50GB | RAM: 2GB | CPU: 2 cores | Video Graphics: 128MB | Audio controller: N/A | Network Card: 1 NAT Card | . | Books . | The Linux Command Line By William Shotts | Raspberry Pi Beginner’s Guide 4th Edition | Free Linux Magazine with good command line reference | Free book. wont be used but it is good to have | Raspberry Models Comparison | . | Github Markdown . | Github Markdown Syntax Cheat sheet | Github Markdown syntax official documentation | Git Cheat sheet | . | . ",
    "url": "http://localhost:4000/#resources",
    "relUrl": "/#resources"
  },"6": {
    "doc": "Welcome to the course",
    "title": "Welcome to the course",
    "content": ". ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"7": {
    "doc": "Module 1 What is Linux?",
    "title": "Module 1 What is Linux?",
    "content": " ",
    "url": "http://localhost:4000/modules/module1/",
    "relUrl": "/modules/module1/"
  },"8": {
    "doc": "Module 1 What is Linux?",
    "title": "Lecture 1: Introduction to the course.",
    "content": ". | Presentations . | Introduction to the course | What is Git and Github? | Markdown Presentation | . | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-1-introduction-to-the-course",
    "relUrl": "/modules/module1/#lecture-1-introduction-to-the-course"
  },"9": {
    "doc": "Module 1 What is Linux?",
    "title": "Lecture 2: Introduction to Linux",
    "content": ". | Presentations . | Introduction to Linux | The basics of Virtualization | Using VirtualBox | Installing Ubuntu 22.04 in virtualbox | . | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-2-introduction-to-linux",
    "relUrl": "/modules/module1/#lecture-2-introduction-to-linux"
  },"10": {
    "doc": "Module 1 What is Linux?",
    "title": "Lecture 3: The desktop environment",
    "content": ". | Presentations . | Exploring Desktop Environments | What is a Shell? | Managing Software | . | . ",
    "url": "http://localhost:4000/modules/module1/#lecture-3-the-desktop-environment",
    "relUrl": "/modules/module1/#lecture-3-the-desktop-environment"
  },"11": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Module 2 Using Ubuntu",
    "content": " ",
    "url": "http://localhost:4000/modules/module2/",
    "relUrl": "/modules/module2/"
  },"12": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Lecture 4: Managing Files and directories",
    "content": ". | The Linux filesystem | Managing files and directories | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-4-managing-files-and-directories",
    "relUrl": "/modules/module2/#lecture-4-managing-files-and-directories"
  },"13": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Lecture 5: Handling Text Files",
    "content": ". | Handling Text Files | The Basics of Vim | Nano Editor Fundamentals | How to Use Nano on Linux / Mac | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-5-handling-text-files",
    "relUrl": "/modules/module2/#lecture-5-handling-text-files"
  },"14": {
    "doc": "Module 2 Using Ubuntu",
    "title": "Lecture 6: Permissions",
    "content": ". | File permissions | Managing data | Managing users | . ",
    "url": "http://localhost:4000/modules/module2/#lecture-6-permissions",
    "relUrl": "/modules/module2/#lecture-6-permissions"
  },"15": {
    "doc": "Module 3 Administration",
    "title": "Module 3 Administration",
    "content": " ",
    "url": "http://localhost:4000/modules/module3/",
    "relUrl": "/modules/module3/"
  },"16": {
    "doc": "Module 3 Administration",
    "title": "Lecture 7",
    "content": ". | Managing processes | Basic Networking protocols | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-7",
    "relUrl": "/modules/module3/#lecture-7"
  },"17": {
    "doc": "Module 3 Administration",
    "title": "Lecture 8",
    "content": ". | Shell scripting | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-8",
    "relUrl": "/modules/module3/#lecture-8"
  },"18": {
    "doc": "Module 3 Administration",
    "title": "Lecture 9",
    "content": ". | Scheduling Tasks | . ",
    "url": "http://localhost:4000/modules/module3/#lecture-9",
    "relUrl": "/modules/module3/#lecture-9"
  },"19": {
    "doc": "Homework 1",
    "title": "Complete The following Tasks",
    "content": ". | Create a github account using your PCCC email address | Install Slack in your phone and computer | Complete Discussion Board 1 - What is Open Source | Complete Lab 1 - Learning Markdown | Watch the video What is Git and Github located here | Submit in blackboard a screenshot of your github account and slack installed in your phone or computer. You must also provide a link to your github account | . ",
    "url": "http://localhost:4000/homework:/homework1#complete-the-following-tasks",
    "relUrl": "/homework:/homework1#complete-the-following-tasks"
  },"20": {
    "doc": "Homework 1",
    "title": "Homework 1",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework1",
    "relUrl": "/homework:/homework1"
  },"21": {
    "doc": "Homework 2",
    "title": "Homework 2",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework2",
    "relUrl": "/homework:/homework2"
  },"22": {
    "doc": "Homework 2",
    "title": "Complete the following tasks",
    "content": ". | Complete lab 2 | Work on the discussion boards | . ",
    "url": "http://localhost:4000/homework:/homework2#complete-the-following-tasks",
    "relUrl": "/homework:/homework2#complete-the-following-tasks"
  },"23": {
    "doc": "Homework 3",
    "title": "Homework 3",
    "content": " ",
    "url": "http://localhost:4000/homework:/homework3",
    "relUrl": "/homework:/homework3"
  },"24": {
    "doc": "Homework 3",
    "title": "Complete the following tasks",
    "content": "video here . | Create a folder in your cis106 folder called weekReports. Inside this folder, create a file called wr3.md or weekReport3.md | In the wr3.md file include the following: . | Read of presentations: . | Introduction to Linux . | Your report must include the following: . | What is an operating system? | Aside from a kernel, what other parts make an operating system? | What is a Linux distribution? | What is Ubuntu? | Define the following terms: Open Source, Closed source, free software | What are the 4 freedoms defined by the free software foundation? | . | . | The basics of Virtualization . | Your report must include the following: . | What is virtualization? | List 3 benefits of virtualization | What is a hypervisor? | What is virtualbox | . | . | Exploring Desktop Environments . | Your report must include the following: . | What is a desktop environment? (Provide 3 examples) | List 4 common elements of desktop environments | What is Ubuntu’s default desktop environments? | What are the official flavors of Ubuntu? | . | . | What is a Shell? . | Your report must include: . | What is Bash? | How do you access the Linux CLI? | What is a console terminal? | What is a terminal emulator? | Provide 3 examples of Linux commands | . | . | Managing Software . | Your report must include the following: . | Which command is uhttps://youtu.be/s8bbTrYZmN0sed for updating ubuntu | Which command is used for installing software. Provide an example. | Which command is used for removing software. Provide an example. | Which command is used for searching for software. Provide an example. | Definition of the following terms: . | Package | Library | Repository | . | . | . | . | . | Create a folder inside the cis106 folder called cheatSheets. Here we will place all the cheat sheets I will share with you. Download the following cheat sheets and place them inside the cheatSheets folder. | Installing Software Cheat Sheet | . | Complete lab 3 Using Ubuntu. | . ",
    "url": "http://localhost:4000/homework:/homework3#complete-the-following-tasks",
    "relUrl": "/homework:/homework3#complete-the-following-tasks"
  },"25": {
    "doc": "Homework 3",
    "title": "What will you Submit:",
    "content": ". | (In Blackboard, under week report 3 ) The URL to the wr3.md file in Github and a pdf file of wr3.md. | . ",
    "url": "http://localhost:4000/homework:/homework3#what-will-you-submit",
    "relUrl": "/homework:/homework3#what-will-you-submit"
  },"26": {
    "doc": "Homework 4",
    "title": "Homework 4",
    "content": ". | The Linux File System Presentation | Ls Command Cheat Sheet | Absolute Path and Relative Path Cheat sheet | Video here | . ",
    "url": "http://localhost:4000/homework:/homework4",
    "relUrl": "/homework:/homework4"
  },"27": {
    "doc": "Homework 4",
    "title": "Complete the following tasks",
    "content": "1. Complete Week Report 4. Your report must contain the following: . | Create a file inside the weekReports directory that is located inside the cis106 directory. Name this file, wr4.md or weekReport4.md | You will complete the week report inside the wr4.md file. Your report must contain 3 sections: Practice from the presentation The Linux File system: . Complete all the Practice in the presentation “The Linux File System”. Take a screenshot of your terminal showing all the commands, or most of the commands, you used to complete each practice. Place all your screenshots in your week report 4 file. Make sure to label each practice. See this video for an example or click on this link to see an example of the week report 4. The Linux File system directories and their purpose: . Take screenshots of the directories in the linux file system and their purpose. These can be found in the presentation: The Linux File system. All the commands for navigating the filesystem . Create a table of all the commands we use for navigating the file system (ls, cd, and pwd). You have to use code formatting in your markdown just like the example. Your table must include the following: . | The command, | what the command does, | the syntax/formula of how to use the commands, | an example of the command in use. You can get all of that information from the presentation The Linux File system. | . | . Example of how the table MUST look like: . | Command | What it does | Syntax | Example | . | echo | Display text to the screen | echo + option + text to display | echo -n \"Hello World\" | . | apt | Set of tools for managing deb packages | sudo + apt + option + package name | sudo apt install vlc | . | uname | prints system information | uname + option | uname -a | . Here is how the above example looks like in markdown for reference: . | Command | What it does | Syntax | Example | ------- | -------------------------------------- | ------------------------------------------ | ----------------------- | echo | Display text to the screen | `echo` + `option` + `text to display` | `echo -n \"Hello World\"` | apt | Set of tools for managing deb packages | `sudo` + `apt` + `option` + `package name` | `sudo apt install vlc` | uname | prints system information | `uname` + `option` | `uname -a` | . Basic terminology . Include definitions of the following terms . | File system | Current directory | parent directory | the difference between your home directory and the home directory | pathname | relative path | absolute path | . 4. Complete lab 4: the linux fs. Please do these after you complete the Week report! Trust me, it is better this way. ",
    "url": "http://localhost:4000/homework:/homework4#complete-the-following-tasks",
    "relUrl": "/homework:/homework4#complete-the-following-tasks"
  },"28": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Lab 1 - Learning Markdown",
    "content": " ",
    "url": "http://localhost:4000/labs/lab1/#lab-1---learning-markdown",
    "relUrl": "/labs/lab1/#lab-1---learning-markdown"
  },"29": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Question 1",
    "content": ". | Install VS Code and install the following extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | PDF Preview | Code Spell Checker | . | Create a github account using your PCCC email address. Make sure to save this password. You will need it a lot! | Create a repository called cis106 | Do not close the github page, you will need it later. | . ",
    "url": "http://localhost:4000/labs/lab1/#question-1",
    "relUrl": "/labs/lab1/#question-1"
  },"30": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Question 2",
    "content": ". | In your Documents folder, create a folder called lab1 all lowercase | Download the following compressed file | . | Decompress the zip file inside your lab1 folder | Open VS Code and open the lab1 folder | . ",
    "url": "http://localhost:4000/labs/lab1/#question-2",
    "relUrl": "/labs/lab1/#question-2"
  },"31": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Question 3",
    "content": ". | Read the presentation ‘What is Markdown’ The goal of this lab is to learn and practice markdown. As we go over the presentation, we will be completing the next step. | Create a new file called what_is_ubuntu_submission.md inside your lab1 folder. | Using markdown, replicate the document whatisubuntu.pdf that is located inside the lab1 folder. Make sure to copy and paste the text. The goal of this lab is to practice markdown syntax not typing! | Export the markdown file to PDF, and HTML | . ",
    "url": "http://localhost:4000/labs/lab1/#question-3",
    "relUrl": "/labs/lab1/#question-3"
  },"32": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Challenge Question",
    "content": "Scenario: Your friend, John Doe, has asked you to make a 1 page resume for him. He has given you all his information in a text file and a picture for you to use. Since you have recently learned about markdown, you want to write his resume in markdown and then give him the PDF. | Using markdown, create a 1 page resume for John Doe. In the compressed file that you downloaded, you will find an image, resume.png, that has the result of how the document should look like after it has been converted to PDF. Once you have written the markdown file, convert the file to pdf and html. | . ",
    "url": "http://localhost:4000/labs/lab1/#challenge-question",
    "relUrl": "/labs/lab1/#challenge-question"
  },"33": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Submission",
    "content": ". | Video Explanation here In blackboard, submit the following: | The markdown file of the resume and whatisubuntu.md | The PDF file of the resume and whatisubuntu.md | Upload all the files to your github repository and paste the URL of your github repository in the blackboard submission box (comment or text submission is fine). | . Late submissions will be penalized 30 points . ",
    "url": "http://localhost:4000/labs/lab1/#submission",
    "relUrl": "/labs/lab1/#submission"
  },"34": {
    "doc": "Lab 1 - Learning Markdown",
    "title": "Lab 1 - Learning Markdown",
    "content": "Long Video For lab here Short video for lab here . ",
    "url": "http://localhost:4000/labs/lab1/",
    "relUrl": "/labs/lab1/"
  },"35": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "content": " ",
    "url": "http://localhost:4000/labs/lab2/",
    "relUrl": "/labs/lab2/"
  },"36": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Videos",
    "content": ". | Part 1 Virtualization | Part 2 Virtualbox | Part 3 Ubuntu 22.04 | Part 4 Post Installation | Part 5 VS Code | Part 6 Git &amp; Github | Part 7 Time to submit | . ",
    "url": "http://localhost:4000/labs/lab2/#videos",
    "relUrl": "/labs/lab2/#videos"
  },"37": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Presentations:",
    "content": ". | The basics of Virtualization | Using VirtualBox | Installing Ubuntu 20.04 in VirtualBox | . ",
    "url": "http://localhost:4000/labs/lab2/#presentations",
    "relUrl": "/labs/lab2/#presentations"
  },"38": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Requirements",
    "content": ". | Please go over the presentations before you do this lab. It will give you an idea of what we are trying to do here. | Please go slow and take your time to do this lab. It is long but it is the core of this course. | If you do not have a computer that meets the recommended criteria, please reach out to me and stop doing this lab. | Be aware that the presentations use an earlier version of Ubuntu but the changes are not that significant and you should be able to follow along. | . NOTE! . | Only start this lab after you have watched the videos or read the presentations. | If your computer does not meet the required hardware, you will not be able to complete the course as we will be running 2 virtual machines near the end of the semester. | . ",
    "url": "http://localhost:4000/labs/lab2/#requirements",
    "relUrl": "/labs/lab2/#requirements"
  },"39": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Question 1 | Enable virtualization",
    "content": "Before you can create virtual machines, you need to know if your computer can virtualize. There are a couple of steps you need to follow to find out the answer to this question: . MacOS users . | For those using MacOS, if you have a recent Apple computer (M1 CPU), you will not be able to use Virtualbox, there is another hypervisor you can use but I have not been able to test it since I do not own an M1 Mac where I can test it. You can watch and follow this tutorial. Again, I have not tested this option therefore you are on your own. from past semester experience, I cannot recommend MacOS with M1 CPUs. The experience is very poor and students have encountered too many problems at the level where they cannot complete the work on time. Proceed at your own risk . | If you have an older Mac (Inter Version), you can user virtualbox as it is fully supported. Just make sure your Mac has enough resources to run virtual machines. For intel Macs, virtualization is already enabled and you can just follow this guide/video. | . Windows Users . Follow these steps: . | Find out what hardware your computer has: . | CPU and number of cores | Amount of RAM | Amount of Free Storage | . | If your computer does not meet the criteria below, stop this lab and get in contact with me. We may be able to find an alternative for you but this can only be done on a 1 on 1 basis. | . REQUIRED SPECIFICATIONS: - CPU: Quad core CPU - RAM: 8GB or More - Free Storage: 60GB or more . If you do not meed these requirements but your computer is close enough, you may be able to complete the course material. The downside is that your computer will be extremely slow. If your computer meets or exceeds the above capabilities, then you need to check if virtualization is enabled. Follow this guide to know if your computer has virtualization enabled and if it does not, use the same guide to learn how to enable it. You can also use Speccy to find out if your computer has virtualization enabled. If you are having troubles enabling virtualization, let me know immediately. DO NOT WAIT FOR THE LAST MINUTE! This part can take time! . Take a screenshot showing your computer specifications and a screenshot of the task manager showing virtualization has been enabled. MacOS user should only take a screenshot of the computer specs. Here is an example: . | Computer specs | Virtualization | . | | | . ",
    "url": "http://localhost:4000/labs/lab2/#question-1--enable-virtualization",
    "relUrl": "/labs/lab2/#question-1--enable-virtualization"
  },"40": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Question 2 | Create a Virtual Machine",
    "content": "Before you can create virtual machines, you need to install VirtualBox and VirtualBox Extension Pack. To download Vbox and the extension pack go to: . | Virtualbox Download Page | Microsoft Visual C++ Redistributable | . Make sure to select the right installer for your operating system: . Make sure to install VirtualBox in your host computer. For Windows follow this video. For macOS follow this video. Once you have installed VirtualBox, create a virtual machine that meets these specifications: . | OS: Ubuntu 22.04 64Bits ISO URL | HDD: 40 GB | RAM: 2GB | Video: 64 MB or Higher | Audio Controller: Disabled (audio won’t be needed) | CPU: 2 Cores | Add this to description: | Hostname: cis106vm | User: student name (use your blackboard username) | Password: pccc | Shared Clipboard: Enabled - Bidirectional | Drag n’ Drop: Enabled - Bidirectional | . Take a screenshot of your virtual machine settings. You screenshot must show all the settings of your VM. Here is a proper example: . | virtual machine settings | . | | . ",
    "url": "http://localhost:4000/labs/lab2/#question-2--create-a-virtual-machine",
    "relUrl": "/labs/lab2/#question-2--create-a-virtual-machine"
  },"41": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Question 3 |  Install Ubuntu 22.04",
    "content": ". | Go over the presentation “Installing Ubuntu 20.04 in VirtualBox”. There, I have laid out every step with proper explanations. The presentation is using an earlier version of Virtualbox and Ubuntu but the differences are not very significant. I will do it in the video as well but it will benefit you to read the presentation. | . Take a screenshot of the last screen before rebooting Ubuntu. If you missed it, take a screenshot of the welcome message or the desktop on first boot. ",
    "url": "http://localhost:4000/labs/lab2/#question-3---install-ubuntu-2204",
    "relUrl": "/labs/lab2/#question-3---install-ubuntu-2204"
  },"42": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Question 4 | Post Installation Tasks",
    "content": "These are the tasks that you need to complete before taking the screenshots: . | Update and upgrade | Add canonical partners in the software settings | Set update daily reminder to never | Change Wayland for X.org | Take snapshot. | Install the guest additions for virtualbox. | Run this command: sudo apt install build-essential linux-headers-$(uname -r) -y | Use this video to install guest additions. | . | Reboot the VM | Go Full Screen | Disable animations. Run this command on your terminal: gsettings set org.gnome.desktop.interface enable-animations false | . Take a screenshot of your virtual machine showing the snapshot. Here is an example: . ",
    "url": "http://localhost:4000/labs/lab2/#question-4--post-installation-tasks",
    "relUrl": "/labs/lab2/#question-4--post-installation-tasks"
  },"43": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Question 5 | Complete the following tasks",
    "content": ". | Download and install VS Code Install all the extensions of VS Code . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | Markdown Converter | PDF Preview | Code Spell Checker | . | Using the terminal, remove all unnecessary applications from Ubuntu 22.04. Use this command: | . sudo apt purge apport aisleriot gnome-mahjongg gnome-sudoku gnome-mines -y . | Using the software center install the following applications: . | flameshot | vlc | deluge | geany | tilix | . | . In the terminal you can use these command: sudo apt install flameshot vlc deluge geany tilix -y . | Using the terminal install the following applications: gcc make perl nemo git python3-pip gnome-tweaks curl snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap wget tree htop net-tools vim neofetch caffeine samba smbclient cifs-utils. You can use the following commands: | . | sudo apt install gcc make perl nemo git python3-pip -y | sudo apt install curl wget tree htop net-tools vim -y | sudo apt install neofetch caffeine samba smbclient gnome-tweaks -y | sudo apt install snapd flatpak gnome-software-plugin-flatpak gnome-software-plugin-snap -y | sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons -y | . | Replace the default screenshot tool with flameshot. | . Setup Git and download your repository to your Ubuntu machine. | Sign in to your Github account. | Open a terminal and run the following commands: | Set your username: git config --global user.name 'your username here' | Set your email address: git config --global user.email 'your email here' | Setup SSH authentication | Generate an ssh key: ssh-keygen -t ed25519 -C \"your_email@example.com\" This creates a new SSH key, using the provided email as a label. When you’re prompted to: \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. At the prompt, to type a secure passphrase, press enter for no passphrase. If you want to use a passphrase, go ahead as it provides an extra layer of security. However, for this course you do not need to add a passphase. | Use the following command to see your public ssh key: cat ~/.ssh/id_ed25519.pub copy the entire output of this command to the clipboard. | In your github page, go to settings &gt; SSH and GPG Keys Here add your ssh key that you copied to the clipboard in the step prior. Type yes (the whole word) and press enter and you are done | Test you ssh connection by using this command: ssh -T git@github.com | Clone your github repository. Use these commands: cd; git clone git@github.com:yourGithub-User-Name-Here/your-Repository-Name-Here | Open a file manager and go to the repository you cloned (the folder) and organize the files as I do in the video. | Open VS Code and open your repository folder. | Open a terminal in VS Code and run the following commands: git add .; git commit -m \"Files organized\"; git push | Open your github repository and your web browser and noticed how the files are now organized as they are in your computer. | . ",
    "url": "http://localhost:4000/labs/lab2/#question-5--complete-the-following-tasks",
    "relUrl": "/labs/lab2/#question-5--complete-the-following-tasks"
  },"44": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "Time to submit this lab.",
    "content": ". | Inside your repository folder, create a new folder called lab2 | Copy the screenshots you took from your windows computer to your vm by dragging and dropping the files in the newly created lab2 folder | Place those files in a folder called: lab2 | Inside the lab2 folder create a new file named: lab2.md | Open your repository in VS code and complete the document lab2.md with your screenshots | Save the file. | Convert the file to PDF. | Commit and push the changes to github. Use this command: git add .; git commit -m \"Lab2 finished\"; git push | . ",
    "url": "http://localhost:4000/labs/lab2/#time-to-submit-this-lab",
    "relUrl": "/labs/lab2/#time-to-submit-this-lab"
  },"45": {
    "doc": "Lab 2 - Installing Ubuntu 22.04 In VirtualBox",
    "title": "What will you Submit:",
    "content": ". | The URL to the lab2.md file and a pdf file of lab2. | Turn off your Virtual Machine properly. Avoid closing the Virtual Machine Window as this can break the virtual machine. | Take a snapshot of your virtual machine. | . Special Note . This is a canonical lab for your learning. You will be making more virtual machines in the future. I suggest you create more virtual machines and then delete them. For example, find out what are the minimum requirements for installing windows 10 and then make a windows 10 virtual machine. Also, install other linux distributions as well. You do not need to keep these vms just use this lab to practice. Remember, when deleting virtual machines, make sure to select delete all files instead of just removing the vms. This will make sure that you recover your hard drive space. ",
    "url": "http://localhost:4000/labs/lab2/#what-will-you-submit",
    "relUrl": "/labs/lab2/#what-will-you-submit"
  },"46": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Lab 3 - Using Ubuntu",
    "content": ". | Video HERE . | You have to complete labs 1, and 2 before attempting lab 3. | Software installation cheat sheet available here . | Video of Presentation available here | Presentation available here | . | . ",
    "url": "http://localhost:4000/labs/lab3/",
    "relUrl": "/labs/lab3/"
  },"47": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 1 | Using Ubuntu for basic tasks",
    "content": "Perform the following tasks. The point of this question is to get you familiar with the system. The more you use Ubuntu, the less intimidating it becomes. | Open a terminal and type the date command. Take a screenshot of the terminal and highlight the date command. Add some text to the screenshot. Save your screenshot in your lab3 directory inside your github repository. If the lab3 directory does not exist, create it. | Create a desktop shortcut for the cis106 website . | Open a text editor. | Add the following text: | . | . #!/usr/bin/evn xdg-open [Desktop Entry] Type=Application Terminal=false Exec=/snap/bin/firefox https://cis106.com Name=cis106 Icon=$HOME/.cis106.png . | Save the file with the name: cis106.desktop and save it in your Desktop directory. | On the desktop, right click on the file cis106.desktop and enable launching (can also be called: Allow executing as program): | . | Now lets add the launcher to our favorites application in the Dock: . | Run the following command: cp Desktop/cis106.desktop .local/share/applications/ . | Now run this command: dconf write /org/gnome/shell/favorite-apps \"['firefox_firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop', 'code.desktop', 'cis106.desktop']\" . | . | . | Write a Document . | Open Libre office writer. | Go on firefox and copy and paste some text from wikipedia | Convert the file to pdf | Save the pdf file in the lab3 directory inside your github repository. | . | Create a Presentation in LibreOffice Impress . | save the presentation in the lab3 directory | . | Play around with the settings of Ubuntu . | Click on the System Tray. Open “Settings” | Change the background. | Go to this site and download a new wallpaper and add it as a background. | Play around with the appearance of Ubuntu. | Play around with the notifications | Disable search for everything except software | Change the screen blank to “Never” in the power settings | Take a look at the rest of the settings | . | Install a Font . | Go to this website | Download the following fonts: . | FiraCode Nerd Font | FiraMono Nerd Font | Inconsolata Nerd Font | InconsolataGo Nerd Font | Iosevka Nerd Font | JetBrainsMono Nerd Font | Lekton Nerd Font | Monofur Nerd Font | Monoki Nerd Font | SpaceMono Nerd Font | . | . | Tilix is an advance terminal emulator that supports split screen and other advanced features. Open Tilix, and do the following: . | Open the app settings, in the Appearance tab, change the theme variant to dark | Add a background image. Like this one | In the Default profile, . | Change the font to any of the font you downloaded earlier. I suggest Fira Mono | Change the Cursor to: Underline | Change the Cursor blink mode: ON | Set the color Scheme to Linux | Adjust the transparency until the background is slightly visible | . | . | . This question requires no screenshot . ",
    "url": "http://localhost:4000/labs/lab3/#question-1--using-ubuntu-for-basic-tasks",
    "relUrl": "/labs/lab3/#question-1--using-ubuntu-for-basic-tasks"
  },"48": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 2 | Using a different desktop environment",
    "content": ". | Install Gnome Classic. GNOME Classic is a GNOME Shell feature and mode for users who prefer a more traditional desktop experience. Read more here | . | Open a terminal and run this command: sudo apt update; sudo apt install gnome-session-flashback -y . | Log out and select the gnome classic session in the gear icon. Log in. | . Take a screenshot of your ubuntu system. Note: You can go back to Gnome 42 if you want. ",
    "url": "http://localhost:4000/labs/lab3/#question-2--using-a-different-desktop-environment",
    "relUrl": "/labs/lab3/#question-2--using-a-different-desktop-environment"
  },"49": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 2.1 (Alternative - Not required!)| Customizing Ubuntu 22.04 Appearance and behavior",
    "content": "This question is not mandatory is done for the sake of practicing some more. Feel free to ignore this. | Turn your virtual machine off and take a snapshot. | In the logging screen select Gnome 42 instead of Gnome Classic Metacity | Using the software center, install the application Gnome Extension Manager. | Open Extension Manager and install the following extensions: . | Blur My Shell | Burn My Windows | CoverFlow Alt-Tab | Dash to Panel | Vitals | . | Enable desktop animations using this command: gsettings set org.gnome.desktop.interface enable-animations true | . Warning: All of these extensions will make your virtual machine slow. I suggest going back to the default Gnome Session without extensions or disabling the ones that add all the fancy effects. If you are ok with your current setup, leave it as is. This question does not require a screenshot . ",
    "url": "http://localhost:4000/labs/lab3/#question-21-alternative---not-required-customizing-ubuntu-2204-appearance-and-behavior",
    "relUrl": "/labs/lab3/#question-21-alternative---not-required-customizing-ubuntu-2204-appearance-and-behavior"
  },"50": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 3 | Installing applications",
    "content": "Using the command line, look for a software to do each of the following tasks and then complete the table with the information you found. Make sure that the application you found is an actual software and not a library. If needed Google the application name to be sure before you install the program. Install and launch the application. | Play a tetris game | Play a video file | Browse the internet | Read your email | Play music | . | Program purpose | Package Name | Version | ------------------- | ------------ | ------- | Play a tetris game | | Play a video file | | Browse the internet | | Read your email | | Play music | | . Take a screenshot of each application open. ",
    "url": "http://localhost:4000/labs/lab3/#question-3--installing-applications",
    "relUrl": "/labs/lab3/#question-3--installing-applications"
  },"51": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "Question 4 | Trying out simple commands (CHALLENGE QUESTION)",
    "content": "Almost all Linux commands include manual pages. Manual pages (man page for short) is a documentation that explains the usage of a command. Man pages are not user friendly and are not meant to be guides but references on how a program works. The more you read man pages the more sense they make. It is normal to feel lost in the beginning. To read the manual of a command simply type: man command name for example, man date opens the manual of the date command. To move around the man page, use the arrow keys in the keyboard. You can also use the mouse wheel if you are working in a terminal emulator. To get help on how to read the manual press letter h to quit the manual page press q . Try the following commands in the terminal . | date | free -h | uname -a | du / | . | Use the internet and the manual page to understand What each command does? . | Install these programs: fortune cowsay toilet figlet rig lolcat boxes . | Run these commands on your terminal: . | echo \"I Like Linux!\" | lolcat | fortune | cowsay | lolcat | figlet \"Linux is cool\" | fortune | toilet -f term -F border --metal | rig | boxes -d boy | . | . Use the man page to find out what each of these programs do then fill in the table. | command | what it does | ------- | ------------ | echo | | fortune | | cowsay | | lolcat | | figlet | | toilet | | rig | . ",
    "url": "http://localhost:4000/labs/lab3/#question-4--trying-out-simple-commands-challenge-question",
    "relUrl": "/labs/lab3/#question-4--trying-out-simple-commands-challenge-question"
  },"52": {
    "doc": "Lab 3 - Using Ubuntu",
    "title": "What will you submit",
    "content": ". | Create a markdown file named lab3.md and answer all the questions there. | Submit the URL to the lab3.md file in github and a pdf version of lab3.md file. | . ",
    "url": "http://localhost:4000/labs/lab3/#what-will-you-submit",
    "relUrl": "/labs/lab3/#what-will-you-submit"
  },"53": {
    "doc": "Lab 4 - The Linux FS",
    "title": "Lab 4 - The Linux FS",
    "content": ". | Presentations: . | How to navigate the filesystem | Video here | . | . Note: Questions 1 AND 2 are worth 50 points. Question 3 has no grade. Question 4 and 5 are worth 50 points. So each question here is worth 25 points. In the video, I only complete question 1, 2 and 3. You have to do question 4 and 5 on your own. Your final exam will include questions similar to 4 and 5. I will answer questions 4 and 5 during class after the due date for this lab full has expired. ",
    "url": "http://localhost:4000/labs/lab4/",
    "relUrl": "/labs/lab4/"
  },"54": {
    "doc": "Lab 4 - The Linux FS",
    "title": "Question 1 | Moving around the file system",
    "content": ". | pwd: Print the absolute path of the current working directory. | cd: Change the shell current working directory. | ls: list files inside a given directory | . Before you start this lab, complete all the practice in the presentation. This will allow you to understand these commands better. This is part of your Week report so make sure to take screenshots. Using pwd and cd with absolute path (remember to use the bash autocompletion feature) . | Start a terminal. What is your present working directory? | Change your present working directory to /usr/share/themes | What is your present working directory now? | Change your present working directory to the root of the filesystem | Change your present working directory to /snap/firefox/ Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. | . Using pwd and cd with a relative path (remember to use the bash autocompletion feature) . | Clear your terminal window. Change the working directory to YOUR home directory. | Change the working directory to the Downloads directory. | Go back 2 directories. | Where are you now? | Change the working directory to the Documents/ directory. Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 6-10. | . ",
    "url": "http://localhost:4000/labs/lab4/#question-1--moving-around-the-file-system",
    "relUrl": "/labs/lab4/#question-1--moving-around-the-file-system"
  },"55": {
    "doc": "Lab 4 - The Linux FS",
    "title": "Question 2 | The ls command",
    "content": "Download this compressed zip file: lab4files.zip Decompress the zip file in your home directory. | Change your present working directory to /usr/share/. Using absolute path, list all the files inside the lab4files directory. | Change your present working directory to ~/lab4files. Long list all the files inside your current working directory with human readable file sizes. | Long list all the files inside lab4files with human readable file size, and sorted by file size. | Long list all the files inside lab4files with human readable file size, sorted by file size, without the user nor the group name, and showing their inode number. | list all the files inside lab4files sorted by file extension and in reverse order. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-5. Multiple screenshots may be **required** . ",
    "url": "http://localhost:4000/labs/lab4/#question-2--the-ls-command",
    "relUrl": "/labs/lab4/#question-2--the-ls-command"
  },"56": {
    "doc": "Lab 4 - The Linux FS",
    "title": "Question 3 | The tree and exa command (Optional Question. No submission required)",
    "content": ". | Using absolute path and having /etc as your present working directory. Display a tree of the directory lab4files. | Change your present working directory to your Downloads directory. Display a tree of the directory lab4files with the full path prefix for each file, the file permissions, and the file size in human readable format. | Display a tree of the directory lab4files sorted by last modified time and showing the file owner and group. | Once you have installed exa, list all the options of the exa command. | Using exa, long list all the files inside lab4files | Long list lab4files showing the header that indicates what each column means. | Long list lab4files without the file owner nor group including the header and the date the file was created. | . ",
    "url": "http://localhost:4000/labs/lab4/#question-3--the-tree-and-exa-command-optional-question-no-submission-required",
    "relUrl": "/labs/lab4/#question-3--the-tree-and-exa-command-optional-question-no-submission-required"
  },"57": {
    "doc": "Lab 4 - The Linux FS",
    "title": "Question 4 | Challenge Question 1",
    "content": "Use this image as a visual aid during this question . | Open a new terminal. What is your present/current working directory? | Change your present/current working directory to the default directory located inside /usr | Change your present/current working directory to the ipv4 directory located inside /proc | change your present/current working directory to the previous present/working directory. | List all the files inside share/backgrounds without changing your present working directory. | List all the files inside your cis106 directory located in YOUR home directory. | List all the files inside your Downloads directory. Your present working directory has to be /home before your can list all the files. | Change your present/current working directory to disk/by-id and from there long list all the files in your home directory including hidden files. | List all the files sorted by modification time inside the share/themes directory. | List all the files sorted by file extension inside the /usr/share directory. | . Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer questions 1-10. Multiple screenshots may be required . ",
    "url": "http://localhost:4000/labs/lab4/#question-4--challenge-question-1",
    "relUrl": "/labs/lab4/#question-4--challenge-question-1"
  },"58": {
    "doc": "Lab 4 - The Linux FS",
    "title": "Question 5 | Challenge Question 2",
    "content": ". | Go to the root of the filesystem. From there reach the Downloads directory. | Rules: . | You are only allowed to move 1 directory at the time. Which means you cannot use shortcuts or absolute path | Once you have reached the Downloads directory, show the absolute path of your current/present working directory. | Take a screenshot of your terminal showing all the commands you use to solve this sub question. Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer question . | . | . | Change your present working directory to /usr/share/themes/Adwaita. From there reach your Documents directory. | Rules: . | You are allowed to move more than 2 directories at a time. | You can use shortcuts or use absolute paths. | Once you haver reached the Documents directory, show your present working directory. | Take a screenshot of your terminal showing all the commands you use to solve this sub question. Take a screenshot of the terminal only. Your screenshot must show all the commands that you used to answer question . | . | . | . ",
    "url": "http://localhost:4000/labs/lab4/#question-5--challenge-question-2",
    "relUrl": "/labs/lab4/#question-5--challenge-question-2"
  },"59": {
    "doc": "Lab 4 - The Linux FS",
    "title": "What will you Submit:",
    "content": ". | Place all the screenshots and answers to your questions in a the lab4.md file. | Convert your markdown file to pdf | Push the changes to Github . | git pull; git add .; git commit -m 'lab3 completed'; git push | . | Submit the URL of Lab4.md and the pdf file | Delete all the snapshopts and take a new one. Name it “Lab 4 complete” | . ",
    "url": "http://localhost:4000/labs/lab4/#what-will-you-submit",
    "relUrl": "/labs/lab4/#what-will-you-submit"
  },"60": {
    "doc": "Markdown Cheat Sheet",
    "title": "Markdown Cheat Sheet",
    "content": "File here: https://devhints.io/markdown . ",
    "url": "http://localhost:4000/docs/MarkdownCheatSheet/",
    "relUrl": "/docs/MarkdownCheatSheet/"
  },"61": {
    "doc": "Setup SSH Guide",
    "title": "Setup SSH Guide",
    "content": " ",
    "url": "http://localhost:4000/guides/SetupSSHUbuntuServer/",
    "relUrl": "/guides/SetupSSHUbuntuServer/"
  },"62": {
    "doc": "Setup SSH Guide",
    "title": "Installation",
    "content": ". | Make sure that your server and your client computer are in the same network. The easiest way to do this is to make sure that the network addapter in the viertual machine is set to bridge instead of nat. To do this go, open the virtual machine settings and in the network section change the adapter to Bridge. | . | However, your network may prevent you from doing this. Some IDS and smart routers may prevent you from getting an IP. In this case, you need to use port forwarding in your virtual machine. Here is a guide on how to do it. Portforwarding Example . | Make sure that the ssh server program is installed in the server virtual machine sudo apt install openssh-server -y . | Make sure that the ssh client program is installed in the client machine. This is the computer that you will be using to manage your server. sudo apt install openssh-server -y . | Enable and start ssh in the server: sudo systemctl enable ssh; sudo systemctl start ssh . | Test the connection by loging in to the server from the client. First, use the ip or hostname command to find out the ip address of the server. | On the server type, hostname -I this will give you the ip address of your server. | On the client type: ssh username@server-ip-address . | If you are using port forwarding, your command will be: | . ssh -p 2222 username@127.0.0.1 . | Read and answer the questions and you will connect sucessfully. | . ",
    "url": "http://localhost:4000/guides/SetupSSHUbuntuServer/#installation",
    "relUrl": "/guides/SetupSSHUbuntuServer/#installation"
  },"63": {
    "doc": "Setup SSH Guide",
    "title": "Setup private and public key authentication with or without password:",
    "content": ". | On the server, configure the firewall to accept ssh connections. sudo ufw allow ssh sudo ufw enable sudo ufw status . | Now we need to generate an ssh key in our client computer. If you are using your ubuntu machine from the course, then you already have one. If you are not, then you must create the ssh keys: | In your client machine type: ssh-keygen . | Now you can type this command to copy your ssh key to the server ssh-copy-id -i .ssh/id_rsa.pub webmaster@server-ip-address . | if you are using port forwarding, use this command instead: ssh-copy-id -i .ssh/id_rsa.pub -p 2222 webmaster@127.0.0.1 . | . if you use port forwarding your command will be: . ssh-copy-id -p 2222 username@127.0.0.1 . | Now you can connect to your server without having to remember the password. | . ",
    "url": "http://localhost:4000/guides/SetupSSHUbuntuServer/#setup-private-and-public-key-authentication-with-or-without-password",
    "relUrl": "/guides/SetupSSHUbuntuServer/#setup-private-and-public-key-authentication-with-or-without-password"
  },"64": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "How to Setup Git and Github in Ubuntu 20.04",
    "content": " ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/"
  },"65": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Assumptions:",
    "content": "I assume the following: . | You have a computer running Ubuntu and VS Code is installed in it. | You have a basic understanding of the Linux Command Line and your Terminal Emulator | You have a Github Account | . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#assumptions",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#assumptions"
  },"66": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Install and setup git",
    "content": "Install command: sudo apt install git -y . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#install-and-setup-git",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#install-and-setup-git"
  },"67": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Setup Git",
    "content": ". | Set your username: git config --global user.name 'your username here' | Set your email address: git config --global user.email 'your email here' | . ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#setup-git",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#setup-git"
  },"68": {
    "doc": "How to Setup Git and Github in Ubuntu 20.04",
    "title": "Setup SSH authentication",
    "content": ". | Generate an ssh key: ssh-keygen -t ed25519 -C \"your_email@example.com\" This creates a new SSH key, using the provided email as a label. When you’re prompted to: \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. At the prompt, to type a secure passphrase, press enter for no passphrase. If you want to use a passphrase, go ahead as it provides an extra layer of security. However, for this course you do not need to add a passphase. | Use the following command to see your public ssh key: cat ~/.ssh/id_ed25519.pub copy the entire output of this command to the clipboard. See examle here: . | In your github page, go to settings &gt; SSH and GPG Keys Here add your ssh key that you copied to the clipboad in the step prior. Type yes (the whole word) and press enter and you are done . | Test you ssh connection by using this command: ssh -T git@github.com You will see the following outcome: . | . If you do not see an error message or a different message than the one shown prior, then your SSH connection is correct. Now you can push and clone using SSH. ",
    "url": "http://localhost:4000/guides/Ubuntu%20Github%20Setup/#setup-ssh-authentication",
    "relUrl": "/guides/Ubuntu%20Github%20Setup/#setup-ssh-authentication"
  },"69": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "During Installation Settings",
    "content": "Once you have created the virtual machine, turn it on and start the installation process. During the installation, make sure that you follow these specifications: . | Keyboard layout: English US | Installation type: Normal with third party software, Erase disk | Timezone: NY | User Details . | Name: Student | Hostname: cis106vm | Username: Student | Password: pccc | Require login (Important) | . | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#during-installation-settings",
    "relUrl": "/guides/Ubuntu-vm-setup/#during-installation-settings"
  },"70": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Post Installation Settings",
    "content": "Once the operating system has been installed, make sure to take a snapshot of your machine. This is a good idea because if something goes wrong, you can revert back to the virtual machine state. Think of snapshots as a way of traveling back in time! . | Update and upgrade | Remove unnecessary software | Essential software install | Disable animations | Change Default File Manager: Nemo | Change Default screenshot tool with flameshot | Enable Dark Theme | . You can do all of the above with a single command. | sudo apt install curl -y; curl https://raw.githubusercontent.com/ra559/cis106/main/guides/oneliner.sh | bash | . Install restricted extras, which is a package that contains other essential software that is normally not included by default because of copyright issues, being closed source or any other controversial reason. For instance, Microsoft core fonts are part of the restricted extras. | sudo apt install ubuntu-restricted-extras ubuntu-restricted-addons -y | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#post-installation-settings",
    "relUrl": "/guides/Ubuntu-vm-setup/#post-installation-settings"
  },"71": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Install Guest Additions",
    "content": "This step is for VirtualBox only. Skip if using any other hypervisor. For instance, in VMware Workstation Player, these are installed via the command line without the need of a virtual disk. Guest Additions are a collection of software that gives the virtual machine more functionality and better performance. For instance, you having the Guest Additions installed allows you to use the full resolution of your monitor and to share the clipboard between your host and the guest OS. ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#install-guest-additions",
    "relUrl": "/guides/Ubuntu-vm-setup/#install-guest-additions"
  },"72": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Change Desktop Environment",
    "content": "The default desktop environment in Ubuntu 20.04 is Gnome 3. However, Gnome 3 is a heavy desktop environment not recommended for a low end machine with the specifications such as the one our virtual machine has. This is the reason why we will be using Gnome Classic which is a fork of the old Gnome 2 Desktop environment. Gnome Classic consumes considerably less system resources while remaining easy to use and functional enough. | Replace GDM with Lightdm: sudo apt install lightdm -y | Set default Desktop Environment to Gnome Flashback | . VS Code setup . VS Code is the text editor that we will use through out the semester to write our notes, labs, homeworks, and final project documentation. To make VS Code more functional, we will install a series of extensions. | Install VS Code Extensions: . | Live Server | Markdown All in one | Markdown Preview Enhanced | Markdown PDF | Markdown TOC | PDF Preview | Markdown Converter | Code Spell Checker | . | . ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/#change-desktop-environment",
    "relUrl": "/guides/Ubuntu-vm-setup/#change-desktop-environment"
  },"73": {
    "doc": "Ubuntu 20.04 Virtual Machine Setup",
    "title": "Ubuntu 20.04 Virtual Machine Setup",
    "content": " ",
    "url": "http://localhost:4000/guides/Ubuntu-vm-setup/",
    "relUrl": "/guides/Ubuntu-vm-setup/"
  },"74": {
    "doc": "FORMAT control characters",
    "title": "FORMAT control characters supported by the GNU/date command",
    "content": "| %FORMAT String | Description | . | %% | a literal % | . | %a | locale’s abbreviated weekday name (e.g., Sun) | . | %A | locale’s full weekday name (e.g., Sunday) | . | %b | locale’s abbreviated month name (e.g., Jan) | . | %B | locale’s full month name (e.g., January) | . | %c | locale’s date and time (e.g., Thu Mar 3 23:05:25 2005) | . | %C | century; like %Y, except omit last two digits (e.g., 21) | . | %d | day of month (e.g, 01) | . | %D | date; same as %m/%d/%y | . | %e | day of month, space padded; same as %_d | . | %F | full date; same as %Y-%m-%d | . | %g | last two digits of year of ISO week number (see %G) | . | %G | year of ISO week number (see %V); normally useful only with %V | . | %h | same as %b | . | %H | hour (00..23) | . | %I | hour (01..12) | . | %j | day of year (001..366) | . | %k | hour ( 0..23) | . | %l | hour ( 1..12) | . | %m | month (01..12) | . | %M | minute (00..59) | . | %n | a newline | . | %N | nanoseconds (000000000..999999999) | . | %p | locale’s equivalent of either AM or PM; blank if not known | . | %P | like %p, but lower case | . | %r | locale’s 12-hour clock time (e.g., 11:11:04 PM) | . | %R | 24-hour hour and minute; same as %H:%M | . | %s | seconds since 1970-01-01 00:00:00 UTC | . | %S | second (00..60) | . | %t | a tab | . | %T | time; same as %H:%M:%S | . | %u | day of week (1..7); 1 is Monday | . | %U | week number of year, with Sunday as first day of week (00..53) | . | %V | ISO week number, with Monday as first day of week (01..53) | . | %w | day of week (0..6); 0 is Sunday | . | %W | week number of year, with Monday as first day of week (00..53) | . | %x | locale’s date representation (e.g., 12/31/99) | . | %X | locale’s time representation (e.g., 23:13:48) | . | %y | last two digits of year (00..99) | . | %Y | year | . | %z | +hhmm numeric timezone (e.g., -0400) | . | %:z | +hh:mm numeric timezone (e.g., -04:00) | . | %::z | +hh:mm:ss numeric time zone (e.g., -04:00:00) | . | %:::z | numeric time zone with : to necessary precision (e.g., -04, +05:30) | . | %Z | alphabetic time zone abbreviation (e.g., EDT) | . ",
    "url": "http://localhost:4000/guides/format-control-char-date-command/#format-control-characters-supported-by-the-gnudate-command",
    "relUrl": "/guides/format-control-char-date-command/#format-control-characters-supported-by-the-gnudate-command"
  },"75": {
    "doc": "FORMAT control characters",
    "title": "FORMAT control characters",
    "content": " ",
    "url": "http://localhost:4000/guides/format-control-char-date-command/",
    "relUrl": "/guides/format-control-char-date-command/"
  },"76": {
    "doc": "Install Ubuntu Server 20.04 In VirtualBox",
    "title": "Install Ubuntu Server 20.04 In VirtualBox",
    "content": " ",
    "url": "http://localhost:4000/guides/install-ubuntu-server-20.04/",
    "relUrl": "/guides/install-ubuntu-server-20.04/"
  },"77": {
    "doc": "Install Ubuntu Server 20.04 In VirtualBox",
    "title": "Step: 1",
    "content": ". | Download Ubuntu Server 20.04 iso file. | Create a virtual machine that meets Ubuntu Server 20.04 Minimun requirements.. | The recommended system requirements are: . | CPU: 1 gigahertz or better | RAM: 1 gigabyte or more | Disk: a minimum of 2.5 gigabytes (we will use 20) | Clipboard Redirection - Bidirectional | Network Card - Bridge Adapter | . | . | Turn on Virtual Machine | Start the installer. | . ",
    "url": "http://localhost:4000/guides/install-ubuntu-server-20.04/#step-1",
    "relUrl": "/guides/install-ubuntu-server-20.04/#step-1"
  },"78": {
    "doc": "Study Guide Final Spring 22",
    "title": "Study Guide For Final Spring 2022",
    "content": "Video here! . ",
    "url": "http://localhost:4000/guides/studyguide2022/#study-guide-for-final-spring-2022",
    "relUrl": "/guides/studyguide2022/#study-guide-for-final-spring-2022"
  },"79": {
    "doc": "Study Guide Final Spring 22",
    "title": "List of Commands",
    "content": ". | date | uname | du | free | echo | apt | pwd | cd | ls | tree | man | mkdir | touch | rm | cp | mv | stat | Wildcards (*,?,[]) | Brace expansion | cat | head | tail | cut | tr | paste | wc | grep | output redirection | Saving the output of a command | vim or nano (basic stuff: open a file, close a file, edit a file) | tar | gz, bzip2, or xz | chmod ",
    "url": "http://localhost:4000/guides/studyguide2022/#list-of-commands",
    "relUrl": "/guides/studyguide2022/#list-of-commands"
  },"80": {
    "doc": "Study Guide Final Spring 22",
    "title": "Tasks (you do not have to include this in your submission)",
    "content": ". | How to format markdown | How to work with multiple terminal windows | How to use flameshot to highlight screenshots | How to download and run scripts using curl | How to create multiple files and directories using brace expansion | How to move and remove files and directories using absolute and relative path | How to save the output of a command to a file | How to append the output of a command to a file | How to use basic commands (mkdir, mv, cp, ls) to organize files in directories and subdirectories | How to use vim to add text to a file | How to use grep to search for strings inside a file | How to rename files and directories | How to know the size of file | How to use the cat command | Difference between an absolute path and relative path | How to get the inode number of a file | How to know when was a file last modified | How to display the absolute path of a file | How to use the cut, head, and tail commands with the pipe to filter the ouput of a command | How to use wildcards to match specific file names: *,?,[],{} | How to manage data with tar and compression tools | Understand what is the purpose of the /etc/passwd file | . | . ",
    "url": "http://localhost:4000/guides/studyguide2022/#tasks-you-do-not-have-to-include-this-in-your-submission",
    "relUrl": "/guides/studyguide2022/#tasks-you-do-not-have-to-include-this-in-your-submission"
  },"81": {
    "doc": "Study Guide Final Spring 22",
    "title": "What should your submission have:",
    "content": "Create a study sheet that contains the following: For every command, include: . | What the command does | What is the syntax of the command | 3 examples with description. | . If you are using markdown, you can use these format: . # Command name ## Description Enter description here ## Syntax `cmd + options` ## Example * Description of example: * `command here` * Description of example: * `command here` * Description of example: * `command here` . Here is an example: . ",
    "url": "http://localhost:4000/guides/studyguide2022/#what-should-your-submission-have",
    "relUrl": "/guides/studyguide2022/#what-should-your-submission-have"
  },"82": {
    "doc": "Study Guide Final Spring 22",
    "title": "The MKDIR command",
    "content": " ",
    "url": "http://localhost:4000/guides/studyguide2022/#the-mkdir-command",
    "relUrl": "/guides/studyguide2022/#the-mkdir-command"
  },"83": {
    "doc": "Study Guide Final Spring 22",
    "title": "Description",
    "content": "It is used for creating directories . ",
    "url": "http://localhost:4000/guides/studyguide2022/#description",
    "relUrl": "/guides/studyguide2022/#description"
  },"84": {
    "doc": "Study Guide Final Spring 22",
    "title": "Syntax",
    "content": "mkdir + option + directories to make . ",
    "url": "http://localhost:4000/guides/studyguide2022/#syntax",
    "relUrl": "/guides/studyguide2022/#syntax"
  },"85": {
    "doc": "Study Guide Final Spring 22",
    "title": "Examples",
    "content": ". | Make a directory | mkdir newDirectory | Make 2 directories | mkdir newDirectory NewDirectory2 | Make a parent and child directory | mkdir -p Pets/Dogs/ | . ",
    "url": "http://localhost:4000/guides/studyguide2022/#examples",
    "relUrl": "/guides/studyguide2022/#examples"
  },"86": {
    "doc": "Study Guide Final Spring 22",
    "title": "Study Guide Final Spring 22",
    "content": " ",
    "url": "http://localhost:4000/guides/studyguide2022/",
    "relUrl": "/guides/studyguide2022/"
  },"87": {
    "doc": "Final Project Description",
    "title": "Final Project Description",
    "content": " ",
    "url": "http://localhost:4000/project/Final_Project/",
    "relUrl": "/project/Final_Project/"
  },"88": {
    "doc": "Final Project Description",
    "title": "Description",
    "content": "In this project, we are going to create a web server and host a simple website. We will follow a long a series of tutorials and we will document the process. At the end of the semester, the student will submit a document contain all of their work. This project consists of 4 deliverables that are designed to keep the student in track during the semester. The goal of the deliverable is to eliminate procrastination and simplify the way the student earns the grade. The final project constitutes 15% of the students final grade. This means that each deliverable is worth 5%. ",
    "url": "http://localhost:4000/project/Final_Project/#description",
    "relUrl": "/project/Final_Project/#description"
  },"89": {
    "doc": "Final Project Description",
    "title": "Requirements",
    "content": ". | A virtual machine/PC where you can install Ubuntu Server. A Virtual machine will be preferred since everything in the tutorials will be done in a virtual machine. | . This is the main tutorial we will follow: . | How To Install the Apache Web Server on Ubuntu 22.04 | . Here are some sources you can use to investigate: . | What is a Web Server | What is SSH | What is Ubuntu Server | Open Source Web Servers | . ",
    "url": "http://localhost:4000/project/Final_Project/#requirements",
    "relUrl": "/project/Final_Project/#requirements"
  },"90": {
    "doc": "Final Project Description",
    "title": "Deliverable 1: Project’s Requirements",
    "content": "Video here For deliverable 1, we are going to accomplish the following tasks: . | Read the tutorial. Write down every concept you don’t understand and research them. | Answer The following questions: . | What is a web server? Hardware and software side | What are some different web server applications? | What is virtualization? | What is virtualbox? | What is a virtual machine? | What is Ubuntu Server? | What is a firewall? | What is SSH? | . | . To demonstrate the completion of deliverable 1, the student needs to submit a markdown and pdf file where all the questions are answered. Here you can find an example of how the document should look like. Deliverable 1 example . ",
    "url": "http://localhost:4000/project/Final_Project/#deliverable-1-projects-requirements",
    "relUrl": "/project/Final_Project/#deliverable-1-projects-requirements"
  },"91": {
    "doc": "Final Project Description",
    "title": "Deliverable 2: Working with Ubuntu Server and Apache",
    "content": "Video here For deliverable 2, students will follow a playlist of youtube videos where we complete the following tasks: . | Create a virtual machine for the server | Install Ubuntu Server | Install Apache2 | Setup the firewall | Setup SSH to manage the server from the client virtual machine | Setup virtual hosts | . Here you can find an example of how the document should look like. Deliverable 2 example . As you can see, the student will submit a markdown file and pdf file along side the URL to deliverable 2. This file must contain screenshots and a brief description of each step completed. ",
    "url": "http://localhost:4000/project/Final_Project/#deliverable-2-working-with-ubuntu-server-and-apache",
    "relUrl": "/project/Final_Project/#deliverable-2-working-with-ubuntu-server-and-apache"
  },"92": {
    "doc": "Final Project Description",
    "title": "Deliverable 3: Hosting the site",
    "content": "Video here For deliverable 3, students will write a simple html page. The student will do the following: . | Create a simple markdown file about anything. The following are good examples: | The student will then convert the markdown file to HTML and will add bootstrap to the HTML. | The student will then upload the html page to the server. | . Here you can find an example of how the document should look like. Deliverable 3 example . As you can see, the student will submit a markdown file and pdf along side the url to deliverable 3. This file must contain a screenshot of the web browser open in the client virtual machine showing the website open. This is the only thing required for this deliverable. Adding a description is optional. ",
    "url": "http://localhost:4000/project/Final_Project/#deliverable-3-hosting-the-site",
    "relUrl": "/project/Final_Project/#deliverable-3-hosting-the-site"
  },"93": {
    "doc": "Final Project Description",
    "title": "Deliverable 4: Final Deliverable",
    "content": "Video here For deliverable 4, the student will compile all deliverables into a single document and add a table of contents. The file will be converted to pdf and the student will submit the markdown, pdf file, and the link to the final deliverable url in the students github account. Here you can find an example of how the document should look like. Deliverable 4 example . As you can see, the student will submit a markdown file and pdf along side the URL to deliverable 4. The file looks like a complete project with everything that has been done so far. ",
    "url": "http://localhost:4000/project/Final_Project/#deliverable-4-final-deliverable",
    "relUrl": "/project/Final_Project/#deliverable-4-final-deliverable"
  },"94": {
    "doc": "Web Server Project Deliverable 2",
    "title": "Web Server Project Deliverable 2",
    "content": " ",
    "url": "http://localhost:4000/project/webserverProject/",
    "relUrl": "/project/webserverProject/"
  },"95": {
    "doc": "Web Server Project Deliverable 2",
    "title": "Part 1 Virtual Machine",
    "content": "Create a virtual machine that meets the following specifications: . | CPU: 1 Core | RAM: 1 GB | HDD: 10 GB | . These are the recommended system requirements for Ubuntu Server 22.04. ",
    "url": "http://localhost:4000/project/webserverProject/#part-1-virtual-machine",
    "relUrl": "/project/webserverProject/#part-1-virtual-machine"
  },"96": {
    "doc": "Web Server Project Deliverable 2",
    "title": "Part 2 Install Ubuntu Server",
    "content": "Step 1 . Step 2 . Step 3 . Select Update to the new installer. This will update the Ubuntu installer and proceed with the installation. Step 4 . This step will automatically select the language layout of your keyboard. If for whatever reason it is different than what your physical keyboard has, then manually adjust it. Step 5 . Choose the default Ubuntu Server installation. We will need some of the repositories in the default installation. Step 6 . Since we are installing Ubuntu in a virtual machine that at the moment is configured to have a NAT network interface card, as long as your host PC has internet connection, you should automatically get an IP address. If you don’t, something is wrong with your VM, Host Machine, or Internet Connection. Note: If you are doing this project in the school’s network, be aware that the school’s routers are configured to block Bridged Ethernet adapters. Step 7 . Leave this part empty as we are not using a proxy. Step 8 . We will use the default mirror so there is no need to change this . Step 9 . This step is to format our disk. Here we will select the entire disk. To move around here use either the arrow keys or the tab key. Step 10 . This step is just to let you know the changes that will be made to the server’s virtual hard drive. Step 11 . Here you will enter the information about your computer. Write this information down because you will needed it later. Step 12 . It is a good idea to install ssh now as we will use it later on. Do not import SSH keys. We will do that manually later. Step 13 . Do not select these services. We won’t be using them. Step 14 . This is the installation process. Once it is done it will start updating the system. Once the update is done, it will ask you to reboot. Step 15 . Step 16 . Here Just press enter. Virtualbox will unmount the installation disk for you . ",
    "url": "http://localhost:4000/project/webserverProject/#part-2-install-ubuntu-server",
    "relUrl": "/project/webserverProject/#part-2-install-ubuntu-server"
  },"97": {
    "doc": "Web Server Project Deliverable 2",
    "title": "Part 3 Install Apache",
    "content": "First, login to the server. You will need to type your username and password. Here is an example: Notice that the password is hidden while typing just like when you are typing it in the terminal emulator. Be aware that during the upgrade, Ubuntu will ask you to restart some services. Apache is available in Ubuntu’s default repositories. However, before we can start installing new packages, let’s update the system: . sudo apt update; sudo apt upgrade -y . To install Apache use: . sudo apt install apache2 -y . Be aware that here you will also need to restart some services here. ",
    "url": "http://localhost:4000/project/webserverProject/#part-3-install-apache",
    "relUrl": "/project/webserverProject/#part-3-install-apache"
  },"98": {
    "doc": "Web Server Project Deliverable 2",
    "title": "Part 4 Setup SSH",
    "content": "Before Setup . Before we can setup SSH, we need to enable the firewall. Use this command: . sudo ufw enable . Now lets configure ufw to allow Apache and SSH traffic: . sudo ufw allow 'Apache' sudo ufw allow 'OpenSSH' . Now check the status of the firewall: . sudo ufw status . Now lets check the status of Apache and SSH to make sure they are running: . systemctl status apache2 --no-pager systemctl status ssh --no-pager . Both commands should return active (running) if they do not, restart the services with the command: . sudo systemctl restart apache2 ssh . Change the Network Adapter . Follow these steps: . | Turn off the server virtual machine using this command: sudo shutdown now | Change the server network adapter configuration from NAT to Bridge. However, there is a chance that using a bridge adapter won’t work for you. Some IDS (Instruction Detection Systems) and smart routers may prevent you from getting an Ip Address if your Network Adapter is bridge. In this case, you need to use port forwarding in your virtual machine. Here is an example: . | . Connect with SSH . Follow these steps: . | Make sure SSH is installed in both the client and the server: sudo apt install openssh -y | In the server, the SSH service must be already running, if it is not running, use this command to enable it and start it: sudo systemctl enable ssh; sudo systemctl start ssh | You will need to get the IP address of the server. Use this command to get the IP address: hostname -I. Additionally, you can setup a static IP address in your server. Here is a guide on how to do it. If you are doing this project in your laptop, I advise to stay away from setting up static IP addresses. | On the client computer use this command: | If you are using port forwarding, your command would be:ssh -p 2222 username@127.0.0.1 | . Setup private and public key authentication with or without password (optional) . | On the server, configure the firewall to accept ssh connections. sudo ufw allow ssh sudo ufw enable sudo ufw status . | Now we need to generate an ssh key in our client computer: In your client machine type:ssh-keygen Now you can type this command to copy your ssh key to the server:ssh-copy-id -i .ssh/id_rsa.pub webmaster@server-ip-address . | if you use port forwarding your command will be:ssh-copy-id -p 2222 username@127.0.0.1 | Now you can connect to your server without having to remember the password. | . ",
    "url": "http://localhost:4000/project/webserverProject/#part-4-setup-ssh",
    "relUrl": "/project/webserverProject/#part-4-setup-ssh"
  },"99": {
    "doc": "Web Server Project Deliverable 2",
    "title": "Part 5 Setup virtual hosts",
    "content": "Virtual host allows us to serve more than one website in a single web server. By default, Apache has one server block enabled. This server block is served from the directory: /var/www/html. For a single website, all the files are placed within this directory. When we setup virtual hosts, each site has its own directory. The recommendation is to leave the default html directory and for each site a new directory inside /var/www. In this project, we will have one virtual site called myresume. You are welcome to use a different name just remember to adjust every command where the word myresume is reference for your preferred website domain name. Follow These Steps . | Create the directory for myresume as follows: sudo mkdir /var/www/myresume | Modify the ownership of myresume so that it is now owned by your user instead of root sudo chown -R $USER:$USER /var/www/myresume | Now let’s change the file permission so that the owner can read, write, and execute the files while granting only read and execute permissions to groups and others: sudo chmod -R 755 /var/www/myresume | Now lets create a simple html document to be served from our new virtual host. Create a document with the nano text editor called index.html in the /var/www/myresume/ directory: sudo nano /var/www/myresume/index.html. | Once the new document opens, type the following text: | . &lt;html&gt; &lt;head&gt; &lt;title&gt;My Resume Website&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;This is a sample document!&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; . | Save and close the file when you are finished. You can do this by pressing CTRL + X, then Y and ENTER. | . NOTE: If you don’t want to use Nano, you can also do this in a single command . sudo echo \"&lt;html&gt;&lt;head&gt;&lt;title&gt;My Resume Website&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;This is a sample document!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\" &gt; /var/www/myresume.index.html . | Now we need to create a virtual host file so that this new content can be served. The default configuration is located in /etc/apache2/sites-available/000-default.conf However, we do not need to touch this file, we can instead create a new one as it is best practice. To create a new config file, we are going to use nano again: sudo nano /etc/apache2/sites-available/myresume.conf | Add the following text to the domain config file: | . &lt;VirtualHost *:80&gt; ServerAdmin webmaster@localhost ServerName myresume ServerAlias www.myresume DocumentRoot /var/www/myresume ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined &lt;/VirtualHost&gt; . | Save and close the file when you are finished. You can do this by pressing CTRL + X, then Y and ENTER. | Now enable the site with the following command: sudo a2ensite myresume.conf | Now lets disable the default domain:sudo a2dissite 000-default.conf | Before we can refresh the configuration, we need to add a configuration line to the apache2.conf file. Open the file in nano:sudo nano /etc/apache2/apache2.conf | Add the following line at the end of the file:ServerName 127.0.0.1 | Save and close the file when you are finished. You can do this by pressing CTRL + X, then Y and ENTER. | Now you can test the configuration for errors:sudo apache2ctl configtest | The output of the command should look like this: | . Syntax OK . | If there are no errors, restart Apache to apply the changes:sudo systemctl restart apache2 | Now, if you open a web browser in your host computer and go the URL: http://myresume your index.html document should load. | . ",
    "url": "http://localhost:4000/project/webserverProject/#part-5-setup-virtual-hosts",
    "relUrl": "/project/webserverProject/#part-5-setup-virtual-hosts"
  },"100": {
    "doc": "Learning Git",
    "title": "Learning Git",
    "content": ". | Presentation here | Cheat Sheet here | . ",
    "url": "http://localhost:4000/extra/learning-git/",
    "relUrl": "/extra/learning-git/"
  },"101": {
    "doc": "Learning Git",
    "title": "Setup Git",
    "content": ". | Set your username: git config --global user.name 'your username here' | Set your email address: git config --global user.email 'your email here' | . ",
    "url": "http://localhost:4000/extra/learning-git/#setup-git",
    "relUrl": "/extra/learning-git/#setup-git"
  },"102": {
    "doc": "Learning Git",
    "title": "Setup SSH authentication",
    "content": ". | Generate an ssh key: ssh-keygen -t ed25519 -C \"your_email@example.com\" This creates a new SSH key, using the provided email as a label. When you’re prompted to: \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. At the prompt, to type a secure passphrase, press enter for no passphrase. If you want to use a passphrase, go ahead as it provides an extra layer of security. However, for this course you do not need to add a passphase. | Use the following command to see your public ssh key: cat ~/.ssh/id_ed25519.pub copy the entire output of this command to the clipboard. See examle here: . | In your github page, go to settings &gt; SSH and GPG Keys Here add your ssh key that you copied to the clipboad in the step prior. Type yes (the whole word) and press enter and you are done . | Test you ssh connection by using this command: ssh -T git@github.com You will see the following outcome: . | . If you do not see an error message or a different message than the one shown prior, then your SSH connection is correct. Now you can push and clone using SSH. ",
    "url": "http://localhost:4000/extra/learning-git/#setup-ssh-authentication",
    "relUrl": "/extra/learning-git/#setup-ssh-authentication"
  },"103": {
    "doc": "The Linux FS",
    "title": "The Linux FS",
    "content": "Note: Install the following programs: nemo ulauncher You can install Ulauncher with the following command: sudo add-apt-repository ppa:agornostal/ulauncher &amp;&amp; sudo apt update &amp;&amp; sudo apt install ulauncher . All The videos here . ",
    "url": "http://localhost:4000/extra/thelinuxfs/",
    "relUrl": "/extra/thelinuxfs/"
  },"104": {
    "doc": "The Linux FS",
    "title": "Question 1",
    "content": ". | Use the cd command to reach the following directories: . | X11 | by-id | local | python3.9 | backgrounds | themes | . | Use ~, $HOME, $OLDPWD, .., and, - with cd . | Go to ~/Downloads | Go back 2 directories. Where are you now? | Go to /usr/share/themes/ | Go back to the previous working directory ($OLDPWD) | . | . ",
    "url": "http://localhost:4000/extra/thelinuxfs/#question-1",
    "relUrl": "/extra/thelinuxfs/#question-1"
  },"105": {
    "doc": "The Linux FS",
    "title": "Question 2",
    "content": "Use the ls command to complete these task: . | List all the files inside your home directory | List all the files inside your home directory including hidden files | List all the files inside your home directory including hidden files but excluding .. and . | Long list all the files in your home directory including hidden files but excluding .. and . | Long list all the files in your home directory including hidden files but excluding .. and . and classified | List all the files in the /usr/share/themes directory | Change your current working directory to /proc/sys/net/ and from there list all the files in your home directory classified, in a single column, and sorted by size. | Change your current working directory to ~/Downloads and from there list all the files in the /etc/ directory sorted by file extension | . ",
    "url": "http://localhost:4000/extra/thelinuxfs/#question-2",
    "relUrl": "/extra/thelinuxfs/#question-2"
  }
}
